<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.shangshufang.apiservice.mapper.CoursePlanMapper" >
  <resultMap id="BaseResultMap" type="com.shangshufang.apiservice.entity.CoursePlanEntity" >
    <id column="plan_id" property="planID" jdbcType="INTEGER" />
    <result column="university_code" property="universityCode" jdbcType="INTEGER" />
    <result column="school_id" property="schoolID" jdbcType="INTEGER" />
    <result column="course_id" property="courseID" jdbcType="INTEGER" />
    <result column="course_class" property="courseClass" jdbcType="INTEGER" />
    <result column="technology_id" property="technologyID" jdbcType="INTEGER" />
    <result column="technology_name" property="technologyName" jdbcType="VARCHAR" />
    <result column="learning_phase_id" property="learningPhaseID" jdbcType="INTEGER" />
    <result column="learning_phase_name" property="learningPhaseName" jdbcType="VARCHAR" />
    <result column="knowledge_id" property="knowledgeID" jdbcType="INTEGER" />
    <result column="knowledge_name" property="knowledgeName" jdbcType="VARCHAR" />
    <result column="data_status" property="dataStatus" jdbcType="VARCHAR" />
    <result column="data_status_text" property="dataStatusText" jdbcType="VARCHAR" />
    <result column="create_user" property="createUser" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_user" property="updateUser" jdbcType="INTEGER" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <select id="searchList" resultMap="BaseResultMap">
    SELECT
      A.plan_id,
      A.university_code,
      A.school_id,
      A.course_id,
      A.course_class,
      A.technology_id,
      B.technology_name,
      A.learning_phase_id,
      C.learning_phase_name,
      A.knowledge_id,
      D.knowledge_name,
      A.data_status,
      CASE WHEN A.data_status = 'P' THEN '未结束'
      WHEN A.data_status = 'F' THEN '已结束'
      ELSE '未知数据状态'
      END AS data_status_text
    FROM shangshufang_customer.course_plan A
    INNER JOIN shangshufang_base.technology B
    ON A.technology_id = B.technology_id
    INNER JOIN shangshufang_base.learning_phase C
    ON A.learning_phase_id = C.learning_phase_id
    INNER JOIN shangshufang_base.technology_knowledge D
    ON A.technology_id = D.technology_id
    AND A.learning_phase_id = D.learning_phase_id
    AND A.knowledge_id = D.knowledge_id
    WHERE A.university_code = #{arg0,jdbcType=INTEGER}
    AND A.school_id = #{arg1,jdbcType=INTEGER}
    AND A.course_id = #{arg2,jdbcType=INTEGER}
    ORDER BY A.course_class;
  </select>
  <insert id="insert" parameterType="com.shangshufang.apiservice.entity.CoursePlanEntity" >
    INSERT INTO shangshufang_customer.course_plan (
      university_code,
      school_id,
      course_id,
      course_class,
      technology_id,
      learning_phase_id,
      knowledge_id,
      create_user,
      update_user
    )
    VALUES (
      #{universityCode, jdbcType=INTEGER},
      #{schoolID, jdbcType=INTEGER},
      #{courseID, jdbcType=INTEGER},
      #{courseClass, jdbcType=INTEGER},
      #{technologyID, jdbcType=INTEGER},
      #{learningPhaseID, jdbcType=INTEGER},
      #{knowledgeID, jdbcType=INTEGER},
      #{createUser, jdbcType=VARCHAR},
      #{updateUser, jdbcType=VARCHAR}
    );
  </insert>
  <update id="updateDataStatus" parameterType="com.shangshufang.apiservice.entity.CoursePlanEntity" >
    UPDATE shangshufang_customer.course_plan SET
      data_status = #{dataStatus,jdbcType=VARCHAR},
      update_user = #{updateUser,jdbcType=INTEGER}
     WHERE university_code = #{universityCode,jdbcType=INTEGER}
    AND school_id = #{schoolID,jdbcType=INTEGER}
    AND course_id = #{courseID,jdbcType=INTEGER}
    AND course_class = #{courseClass,jdbcType=INTEGER};
  </update>
  <delete id="delete" parameterType="java.lang.Integer" >
    DELETE FROM shangshufang_customer.course_plan
    WHERE university_code = #{arg0,jdbcType=INTEGER}
    AND school_id = #{arg1,jdbcType=INTEGER}
    AND course_id = #{arg2,jdbcType=INTEGER};
  </delete>
  <delete id="delete4Class" parameterType="java.lang.Integer" >
    DELETE FROM shangshufang_customer.course_plan
    WHERE university_code = #{arg0,jdbcType=INTEGER}
    AND school_id = #{arg1,jdbcType=INTEGER}
    AND course_id = #{arg2,jdbcType=INTEGER}
    AND data_status = 'P';
  </delete>
</mapper>