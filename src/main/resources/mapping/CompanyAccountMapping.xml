<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.shangshufang.apiservice.mapper.CompanyAccountMapper" >
  <resultMap id="BaseResultMap" type="com.shangshufang.apiservice.entity.CompanyAccountEntity" >
    <id column="account_id" property="accountID" jdbcType="INTEGER" />
    <result column="company_id" property="companyID" jdbcType="INTEGER" />
    <result column="customer_id" property="customerID" jdbcType="VARCHAR" />
    <result column="company_name" property="companyName" jdbcType="VARCHAR" />
    <result column="full_name" property="customerName" jdbcType="VARCHAR" />
    <result column="cellphone" property="cellphone" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="account_role" property="accountRole" jdbcType="VARCHAR" />
    <result column="account_role_text" property="accountRoleText" jdbcType="VARCHAR" />
    <result column="data_status" property="dataStatus" jdbcType="VARCHAR" />
    <result column="data_status_text" property="dataStatusText" jdbcType="VARCHAR" />
    <result column="create_user" property="createUser" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_user" property="updateUser" jdbcType="INTEGER" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <select id="searchTotalCount" resultType="java.lang.Integer">
    SELECT
    COUNT(1) AS TotalCount
    FROM shangshufang_customer.company_account
    WHERE 1=1
    <if test="companyID != 0">
      AND company_id = #{companyID,jdbcType=INTEGER}
    </if>;
  </select>
  <select id="searchList" resultMap="BaseResultMap">
    SELECT
      A.account_id,
      A.company_id,
      B.company_name,
      C.customer_id,
      C.full_name,
      C.email,
      A.cellphone,
      A.password,
      A.account_role,
      CASE WHEN A.account_role = 'A' THEN '管理员'
          WHEN A.account_role = 'S' THEN '员工'
          ELSE '未知数据状态'
      END AS account_role_text,
      A.data_status,
      CASE WHEN A.data_status = 'A' THEN '正常'
          WHEN A.data_status = 'D' THEN '冻结'
          ELSE '未知数据状态'
      END AS data_status_text,
      D.admin_name AS create_user,
      DATE_FORMAT(A.create_time, '%Y-%m-%d %H:%i:%s') AS create_time,
      E.admin_name AS update_user,
      DATE_FORMAT(A.update_time, '%Y-%m-%d %H:%i:%s') AS update_time
    FROM shangshufang_customer.company_account A
    INNER JOIN shangshufang_customer.company B
    ON A.company_id = B.company_id
    INNER JOIN shangshufang_customer.company_customer C
    ON A.company_id = C.company_id
    AND A.cellphone = C.cellphone
    INNER JOIN shangshufang_base.system_admin D
    ON A.create_user = D.admin_id
    INNER JOIN shangshufang_base.system_admin E
    ON A.update_user = E.admin_id
    WHERE 1=1
    <if test="arg2 != 0">
      AND A.company_id = #{arg2,jdbcType=INTEGER}
    </if>
    ORDER BY A.update_time DESC
    LIMIT #{arg0,jdbcType=INTEGER}, #{arg1,jdbcType=INTEGER};
  </select>
  <select id="login" resultMap="BaseResultMap">
    SELECT
      A.account_id,
      A.company_id,
      B.company_name,
      C.full_name,
      C.photo,
      A.cellphone,
      A.email,
      A.account_role,
      CASE WHEN A.account_role = 'A' THEN '管理员'
          WHEN A.account_role = 'S' THEN '员工'
          ELSE '未知数据状态'
      END AS data_status_text,
      A.data_status,
      CASE WHEN A.data_status = 'A' THEN '正常'
          WHEN A.data_status = 'D' THEN '冻结'
          ELSE '未知数据状态'
      END AS data_status_text,
      D.admin_name AS create_user,
      DATE_FORMAT(A.create_time, '%Y-%m-%d %H:%i:%s') AS create_time,
      E.admin_name AS update_user,
      DATE_FORMAT(A.update_time, '%Y-%m-%d %H:%i:%s') AS update_time
    FROM shangshufang_customer.company_account A
    INNER JOIN shangshufang_customer.company B
    ON A.company_id = B.company_id
    INNER JOIN shangshufang_customer.company_customer C
    ON A.company_id = C.company_id
    AND A.cellphone = C.cellphone
    INNER JOIN shangshufang_base.system_admin D
    ON A.create_user = D.admin_id
    INNER JOIN shangshufang_base.system_admin E
    ON A.update_user = E.admin_id
    WHERE A.cellphone = #{arg0,jdbcType=VARCHAR}
    AND A.password = #{arg1,jdbcType=VARCHAR};
  </select>
  <select id="checkCellphoneExist" resultType="java.lang.Integer">
    SELECT
      COUNT(1) AS TotalCount
    FROM shangshufang_customer.company_account
    WHERE cellphone = #{cellphone,jdbcType=VARCHAR};
  </select>
  <insert id="insert" parameterType="com.shangshufang.apiservice.entity.CompanyAccountEntity" >
    INSERT INTO shangshufang_customer.company_account (
      company_id,
      cellphone,
      password,
      account_role,
      create_user,
      update_user
    )
    VALUES (
      #{companyID, jdbcType=INTEGER},
      #{cellphone, jdbcType=VARCHAR},
      #{password, jdbcType=VARCHAR},
      #{accountRole, jdbcType=VARCHAR},
      #{createUser, jdbcType=VARCHAR},
      #{updateUser, jdbcType=VARCHAR}
    )
  </insert>
  <update id="update" parameterType="com.shangshufang.apiservice.entity.CompanyAccountEntity" >
    UPDATE shangshufang_customer.company_account SET
      cellphone = #{cellphone,jdbcType=VARCHAR},
      update_user = #{updateUser,jdbcType=VARCHAR}
    WHERE company_id = #{companyID,jdbcType=INTEGER}
    AND account_id = #{accountID,jdbcType=INTEGER};
  </update>
  <update id="updateDataStatus" parameterType="com.shangshufang.apiservice.entity.CompanyAccountEntity" >
    UPDATE shangshufang_customer.company_account SET
      data_status = #{dataStatus,jdbcType=VARCHAR},
      update_user = #{updateUser,jdbcType=INTEGER}
    WHERE company_id = #{companyID,jdbcType=INTEGER}
    AND account_id = #{accountID,jdbcType=INTEGER};
  </update>
  <delete id="delete" parameterType="java.lang.Integer" >
    DELETE FROM shangshufang_customer.company_account
    WHERE company_id = #{arg0,jdbcType=INTEGER}
    AND account_id = #{arg1,jdbcType=INTEGER};
  </delete>
</mapper>