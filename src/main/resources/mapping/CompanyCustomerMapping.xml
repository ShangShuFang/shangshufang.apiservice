<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.shangshufang.apiservice.mapper.CompanyCustomerMapper" >
  <resultMap id="BaseResultMap" type="com.shangshufang.apiservice.entity.CompanyCustomerEntity" >
    <id column="customer_id" property="customerID" jdbcType="INTEGER" />
    <result column="company_id" property="companyID" jdbcType="INTEGER" />
    <result column="company_name" property="companyName" jdbcType="VARCHAR" />
    <result column="full_name" property="fullName" jdbcType="VARCHAR" />
    <result column="sex" property="sex" jdbcType="VARCHAR" />
    <result column="birth" property="birth" jdbcType="VARCHAR" />
    <result column="cellphone" property="cellphone" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="photo" property="photo" jdbcType="VARCHAR" />
    <result column="data_status" property="dataStatus" jdbcType="VARCHAR" />
    <result column="data_status_text" property="dataStatusText" jdbcType="VARCHAR" />
    <result column="create_user" property="createUser" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_user" property="updateUser" jdbcType="INTEGER" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>

  <select id="search" resultMap="BaseResultMap">
    SELECT
      A.customer_id,
      A.company_id,
      B.company_name,
      A.full_name,
      A.sex,
      A.birth,
      A.cellphone,
      A.email,
      A.photo,
      C.admin_name AS create_user,
      DATE_FORMAT(A.create_time, '%Y-%m-%d %H:%i:%s') AS create_time,
      D.admin_name AS update_user,
      DATE_FORMAT(A.update_time, '%Y-%m-%d %H:%i:%s') AS update_time
    FROM shangshufang_customer.company_customer A
    INNER JOIN shangshufang_customer.company B
    ON A.customer_id = B.customer_id
    INNER JOIN shangshufang_base.system_admin C
    ON A.create_user = C.admin_id
    INNER JOIN shangshufang_base.system_admin D
    ON A.update_user = D.admin_id
    WHERE A.customer_id = #{arg0,jdbcType=INTEGER}
    AND A.cellphone = #{arg1,jdbcType=VARCHAR};
  </select>

  <select id="checkCellphoneExist" resultType="java.lang.Integer">
    SELECT
      COUNT(1) AS TotalCount
    FROM shangshufang_customer.company_customer
    WHERE cellphone = #{cellphone,jdbcType=VARCHAR};
  </select>
  <select id="checkEmailExist" resultType="java.lang.Integer">
    SELECT
      COUNT(1) AS TotalCount
    FROM shangshufang_customer.company_customer
    WHERE email = #{email,jdbcType=VARCHAR};
  </select>
  <insert id="insert" parameterType="com.shangshufang.apiservice.entity.CompanyCustomerEntity" >
    INSERT INTO shangshufang_customer.company_customer (
      company_id,
      full_name,
      sex,
      birth,
      cellphone,
      email,
      photo,
      create_user,
      update_user
    )
    VALUES (
      #{companyID, jdbcType=INTEGER},
      #{fullName, jdbcType=VARCHAR},
      #{sex, jdbcType=VARCHAR},
      #{birth, jdbcType=VARCHAR},
      #{cellphone, jdbcType=VARCHAR},
      #{email, jdbcType=VARCHAR},
      #{photo, jdbcType=VARCHAR},
      #{createUser, jdbcType=VARCHAR},
      #{updateUser, jdbcType=VARCHAR}
    )
  </insert>
  <update id="update" parameterType="com.shangshufang.apiservice.entity.CompanyCustomerEntity" >
    UPDATE shangshufang_customer.company_customer SET
      full_name = #{fullName,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=VARCHAR},
      birth = #{birth,jdbcType=VARCHAR},
      cellphone = #{cellphone,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      photo = #{photo,jdbcType=VARCHAR},
      update_user = #{updateUser,jdbcType=VARCHAR}
    WHERE company_id = #{companyID,jdbcType=INTEGER}
    AND customer_id = #{customerID,jdbcType=INTEGER};
  </update>

  <update id="updateCellphone" parameterType="com.shangshufang.apiservice.entity.CompanyCustomerEntity" >
    UPDATE shangshufang_customer.company_customer SET
      cellphone = #{cellphone,jdbcType=VARCHAR},
      update_user = #{updateUser,jdbcType=VARCHAR}
    WHERE company_id = #{companyID,jdbcType=INTEGER}
    AND customer_id = #{customerID,jdbcType=INTEGER};
  </update>

  <delete id="delete" parameterType="java.lang.Integer" >
    DELETE FROM shangshufang_customer.company_customer
    WHERE company_id = #{arg0,jdbcType=INTEGER}
    AND customer_id = #{arg1,jdbcType=INTEGER};
  </delete>
</mapper>