<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.shangshufang.apiservice.mapper.CourseMapper">
  <resultMap id="BaseResultMap" type="com.shangshufang.apiservice.entity.CourseEntity">
    <id column="course_id" property="courseID" jdbcType="INTEGER"/>
    <result column="university_code" property="universityCode" jdbcType="INTEGER"/>
    <result column="university_name" property="universityName" jdbcType="VARCHAR"/>
    <result column="school_id" property="schoolID" jdbcType="INTEGER"/>
    <result column="school_name" property="schoolName" jdbcType="VARCHAR"/>
    <result column="language_id" property="languageID" jdbcType="INTEGER"/>
    <result column="technology_id" property="technologyID" jdbcType="INTEGER"/>
    <result column="technology_name" property="technologyName" jdbcType="VARCHAR"/>
    <result column="technology_thumbnail_rectangle" property="technologyThumbnail" jdbcType="VARCHAR"/>
    <result column="course_name" property="courseName" jdbcType="VARCHAR"/>
    <result column="teacher_id" property="teacherID" jdbcType="INTEGER"/>
    <result column="teacher_name" property="teacherName" jdbcType="VARCHAR"/>
    <result column="teacher_photo" property="teacherPhotoUrl" jdbcType="VARCHAR"/>
    <result column="course_time_begin" property="courseTimeBegin" jdbcType="TIMESTAMP"/>
    <result column="course_time_end" property="courseTimeEnd" jdbcType="TIMESTAMP"/>
    <result column="course_introduction" property="courseIntroduction" jdbcType="VARCHAR"/>
    <result column="course_technology_using_company_count" property="courseTechnologyUsingCompanyCount"
            jdbcType="INTEGER"/>
    <result column="course_knowledge_count" property="courseKnowledgeCount" jdbcType="INTEGER"/>
    <result column="technology_knowledge_count" property="technologyKnowledgeCount" jdbcType="INTEGER"/>
    <result column="course_knowledge_exercises_count" property="courseKnowledgeExercisesCount" jdbcType="INTEGER"/>
    <result column="course_sing_up_count" property="courseSingUpCount" jdbcType="INTEGER"/>
    <result column="course_question_finish" property="courseQuestionFinish" jdbcType="INTEGER"/>
    <result column="course_question" property="courseQuestion" jdbcType="INTEGER"/>
    <result column="course_process" property="courseProcess" jdbcType="INTEGER"/>
    <result column="data_status" property="dataStatus" jdbcType="VARCHAR"/>
    <result column="data_status_text" property="dataStatusText" jdbcType="VARCHAR"/>
    <result column="create_user" property="createUser" jdbcType="INTEGER"/>
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
    <result column="update_user" property="updateUser" jdbcType="INTEGER"/>
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
  </resultMap>
  <select id="searchTotalCountLikeName" resultType="java.lang.Integer">
    SELECT COUNT(1) AS totalcount
    FROM shangshufang_customer.course a
    INNER JOIN shangshufang_customer.university_customer b
    ON a.teacher_id = b.customer_id
    WHERE a.data_status != '3'
    <if test="content != null">
      AND (a.course_name LIKE #{content,jdbcType=VARCHAR} OR b.full_name LIKE #{content,jdbcType=VARCHAR})
    </if>
  </select>
  <select id="searchListLikeName" resultMap="BaseResultMap">
    SELECT a.course_id,
    a.university_code,
    b.university_name,
    a.school_id,
    c.school_name,
    a.technology_id,
    d.technology_name,
    d.technology_thumbnail_rectangle,
    a.course_name,
    a.teacher_id,
    e.full_name AS teacher_name,
    e.photo AS teacher_photo,
    DATE_FORMAT(a.course_time_begin, '%Y-%m-%d') AS course_time_begin,
    DATE_FORMAT(a.course_time_end, '%Y-%m-%d') AS course_time_end,
    a.course_introduction,
    f.course_technology_using_company_count,
    g.course_knowledge_count,
    h.technology_knowledge_count,
    i.course_knowledge_exercises_count,
    IFNULL(j.course_sing_up_count, 0) AS course_sing_up_count,
    IFNULL(k.course_question_finish, 0) AS course_question_finish,
    IFNULL(l.course_question, 0) AS course_question,
    CONCAT(TRUNCATE(TRUNCATE(IFNULL(n.course_class_finish_count, 0) / IFNULL(m.course_class_total_count, 0), 2) * 100,
    0), '%') AS course_process,
    a.data_status,
    CASE
    WHEN a.data_status = '0' THEN '未开始'
    WHEN a.data_status = '1' THEN '进行中'
    WHEN a.data_status = '2' THEN '已结束'
    WHEN a.data_status = '3' THEN '已删除'
    WHEN a.data_status = '4' THEN '已暂停'
    ELSE '未知数据状态'
    END AS data_status_text,
    e.full_name AS create_user,
    DATE_FORMAT(a.create_time, '%Y-%m-%d %H:%i:%s') AS create_time,
    e.full_name AS update_user,
    DATE_FORMAT(a.update_time, '%Y-%m-%d %H:%i:%s') AS update_time
    FROM (
    SELECT a.course_id,
    a.university_code,
    a.school_id,
    a.technology_id,
    a.course_name,
    a.teacher_id,
    a.course_time_begin,
    a.course_time_end,
    a.course_introduction,
    a.data_status,
    a.create_time,
    a.update_time
    FROM shangshufang_customer.course a
    INNER JOIN shangshufang_base.technology b
    ON a.technology_id = b.technology_id
    INNER JOIN shangshufang_customer.university_customer c
    ON a.teacher_id = c.customer_id
    WHERE a.data_status != '3'
    <if test="arg2 != null">
      AND (a.course_name LIKE #{arg2,jdbcType=VARCHAR} OR c.full_name LIKE #{arg2,jdbcType=VARCHAR})
    </if>
    ORDER BY a.data_status, a.update_time DESC
    LIMIT #{arg0,jdbcType=INTEGER}, #{arg1,jdbcType=INTEGER}
    ) a
    INNER JOIN shangshufang_customer.university b
    ON a.university_code = b.university_code
    INNER JOIN shangshufang_customer.school c
    ON a.university_code = c.university_code
    AND a.school_id = c.school_id
    INNER JOIN shangshufang_base.technology d
    ON a.technology_id = d.technology_id
    INNER JOIN shangshufang_customer.university_customer e
    ON a.university_code = e.university_code
    AND a.school_id = e.school_id
    AND a.teacher_id = e.customer_id
    INNER JOIN
    (
    SELECT technology_id,
    COUNT(DISTINCT company_id) AS course_technology_using_company_count
    FROM shangshufang_customer.technology_using
    GROUP BY technology_id
    ) f
    ON a.technology_id = f.technology_id
    INNER JOIN
    (
    SELECT university_code,
    school_id,
    course_id,
    technology_id,
    COUNT(DISTINCT knowledge_id) AS course_knowledge_count
    FROM shangshufang_customer.course_plan
    GROUP BY university_code, school_id, course_id, technology_id
    ) g
    ON a.university_code = g.university_code
    AND a.school_id = g.school_id
    AND a.course_id = g.course_id
    AND a.technology_id = g.technology_id
    INNER JOIN
    (
    SELECT technology_id,
    COUNT(1) AS technology_knowledge_count
    FROM shangshufang_base.technology_knowledge
    WHERE data_status = 'A'
    GROUP BY technology_id
    ) h
    ON a.technology_id = h.technology_id
    LEFT JOIN
    (
    SELECT a.course_id,
    COUNT(1) AS course_knowledge_exercises_count
    FROM shangshufang_customer.course a
    INNER JOIN shangshufang_customer.course_plan b
    ON a.university_code = b.university_code
    AND a.school_id = b.school_id
    AND a.course_id = b.course_id
    AND a.technology_id = b.technology_id
    INNER JOIN shangshufang_base.technology_knowledge_exercises c
    ON b.technology_id = c.technology_id
    AND b.knowledge_id = c.knowledge_id
    AND c.data_status = 'A'
    INNER JOIN shangshufang_base.technology d
    ON a.technology_id = d.technology_id
    INNER JOIN shangshufang_customer.university_customer e
    ON a.teacher_id = e.customer_id
    WHERE a.data_status != '3'
    <if test="arg2 != null">
      AND (a.course_name LIKE #{arg2,jdbcType=VARCHAR} OR e.full_name LIKE #{arg2,jdbcType=VARCHAR})
    </if>
    GROUP BY a.course_id
    ) i
    ON a.course_id = i.course_id
    LEFT JOIN
    (
    SELECT course_id, COUNT(1) AS course_sing_up_count
    FROM shangshufang_customer.course_sign_up
    GROUP BY course_id
    ) j
    ON a.course_id = j.course_id
    LEFT JOIN
    (
    SELECT a.course_id,
    COUNT(DISTINCT a.question_id) AS course_question_finish
    FROM shangshufang_customer.course_question a
    INNER JOIN shangshufang_customer.course_question_leave_message b
    ON a.question_id = b.question_id
    AND b.data_status = 'A'
    WHERE a.data_status = 'A'
    GROUP BY a.course_id
    ) k
    ON a.course_id = k.course_id
    LEFT JOIN
    (
    SELECT course_id,
    COUNT(1) AS course_question
    FROM shangshufang_customer.course_question
    WHERE data_status = 'A'
    GROUP BY course_id
    ) l
    ON a.course_id = l.course_id
    LEFT JOIN
    (
    SELECT course_id, COUNT(DISTINCT course_class) AS course_class_total_count
    FROM shangshufang_customer.course_plan
    GROUP BY course_id
    ) m
    ON a.course_id = m.course_id
    LEFT JOIN
    (
    SELECT course_id, COUNT(DISTINCT course_class) AS course_class_finish_count
    FROM shangshufang_customer.course_plan
    WHERE data_status = 'F'
    GROUP BY course_id
    ) n
    ON a.course_id = n.course_id
    ORDER BY a.data_status, a.update_time DESC;
  </select>

  <select id="searchTotalCount" resultType="java.lang.Integer">
    SELECT
    COUNT(1) AS TotalCount
    FROM shangshufang_customer.course a
    INNER JOIN shangshufang_base.technology b
    ON a.technology_id = b.technology_id
    WHERE a.data_status != '3'
    <if test="arg8 == true">
      AND a.university_code = #{arg0,jdbcType=INTEGER}
    </if>
    <if test="arg8 != true">
      AND a.university_code != #{arg0,jdbcType=INTEGER}
    </if>
    <if test="arg1 != 0">
      AND a.school_id = #{arg1,jdbcType=INTEGER}
    </if>
    <if test="arg2 != 0">
      AND a.teacher_id = #{arg2,jdbcType=INTEGER}
    </if>
    <if test="arg3 != 0">
      AND a.technology_id = #{arg3,jdbcType=INTEGER}
    </if>
    <if test="arg4 != null">
      AND a.course_time_begin &gt;= #{arg4,jdbcType=VARCHAR}
    </if>
    <if test="arg5 != null">
      AND a.data_status = #{arg5,jdbcType=VARCHAR}
    </if>
    <if test="arg6 != 0">
      AND b.direction_id = #{arg6,jdbcType=INTEGER}
    </if>
    <if test="arg7 != 0">
      AND b.category_id = #{arg7,jdbcType=INTEGER}
    </if>;
  </select>
  <select id="searchList" resultMap="BaseResultMap">
    SELECT
    A.course_id,
    A.university_code,
    B.university_name,
    A.school_id,
    C.school_name,
    A.technology_id,
    D.technology_name,
    D.technology_thumbnail_rectangle,
    A.course_name,
    A.teacher_id,
    E.full_name AS teacher_name,
    E.photo AS teacher_photo,
    DATE_FORMAT(A.course_time_begin, '%Y-%m-%d') AS course_time_begin,
    DATE_FORMAT(A.course_time_end, '%Y-%m-%d') AS course_time_end,
    A.course_introduction,
    F.course_technology_using_company_count,
    G.course_knowledge_count,
    H.technology_knowledge_count,
    I.course_knowledge_exercises_count,
    IFNULL(J.course_sing_up_count, 0) AS course_sing_up_count,
    IFNULL(K.course_question_finish, 0) AS course_question_finish,
    IFNULL(L.course_question, 0) AS course_question,
    CONCAT(TRUNCATE(TRUNCATE(IFNULL(N.course_class_finish_count, 0) / IFNULL(M.course_class_total_count, 0), 2) * 100,
    0), '%') AS course_process,
    A.data_status,
    CASE WHEN A.data_status = '0' THEN '未开始'
    WHEN A.data_status = '1' THEN '进行中'
    WHEN A.data_status = '2' THEN '已结束'
    WHEN A.data_status = '3' THEN '已删除'
    WHEN A.data_status = '4' THEN '已暂停'
    ELSE '未知数据状态'
    END AS data_status_text,
    E.full_name AS create_user,
    DATE_FORMAT(A.create_time, '%Y-%m-%d %H:%i:%s') AS create_time,
    E.full_name AS update_user,
    DATE_FORMAT(A.update_time, '%Y-%m-%d %H:%i:%s') AS update_time
    FROM
    (
    SELECT
    a.course_id,
    a.university_code,
    a.school_id,
    a.technology_id,
    a.course_name,
    a.teacher_id,
    a.course_time_begin,
    a.course_time_end,
    a.course_introduction,
    a.data_status,
    a.create_time,
    a.update_time
    FROM shangshufang_customer.course a
    INNER JOIN shangshufang_base.technology b
    ON a.technology_id = b.technology_id
    WHERE a.data_status != '3'
    <if test="arg0 != 0">
      <if test="arg10 == true">
        AND a.university_code = #{arg0,jdbcType=INTEGER}
      </if>
      <if test="arg10 != true">
        AND a.university_code != #{arg0,jdbcType=INTEGER}
      </if>
    </if>
    <if test="arg1 != 0">
      AND a.school_id = #{arg1,jdbcType=INTEGER}
    </if>
    <if test="arg2 != 0">
      AND a.teacher_id = #{arg2,jdbcType=INTEGER}
    </if>
    <if test="arg3 != 0">
      AND a.technology_id = #{arg3,jdbcType=INTEGER}
    </if>
    <if test="arg4 != null">
      AND a.course_time_begin &gt;= #{arg4,jdbcType=VARCHAR}
    </if>
    <if test="arg5 != null">
      AND a.data_status = #{arg5,jdbcType=VARCHAR}
    </if>
    <if test="arg8 != 0">
      AND b.direction_id = #{arg8,jdbcType=INTEGER}
    </if>
    <if test="arg9 != 0">
      AND b.category_id = #{arg9,jdbcType=INTEGER}
    </if>
    ORDER BY a.data_status, a.update_time DESC
    LIMIT #{arg6,jdbcType=INTEGER}, #{arg7,jdbcType=INTEGER}
    ) A
    INNER JOIN shangshufang_customer.university B
    ON A.university_code = B.university_code
    INNER JOIN shangshufang_customer.school C
    ON A.university_code = C.university_code
    AND A.school_id = C.school_id
    INNER JOIN shangshufang_base.technology D
    ON A.technology_id = D.technology_id
    INNER JOIN shangshufang_customer.university_customer E
    ON A.university_code = E.university_code
    AND A.school_id = E.school_id
    AND A.teacher_id = E.customer_id
    INNER JOIN
    (
    SELECT
    technology_id,
    COUNT(DISTINCT company_id) AS course_technology_using_company_count
    FROM shangshufang_customer.technology_using
    GROUP BY technology_id
    ) F
    ON A.technology_id = F.technology_id
    INNER JOIN
    (
    SELECT
    university_code,
    school_id,
    course_id,
    technology_id,
    COUNT(DISTINCT knowledge_id) AS course_knowledge_count
    FROM shangshufang_customer.course_plan
    GROUP BY university_code, school_id, course_id, technology_id
    ) G
    ON A.university_code = G.university_code
    AND A.school_id = G.school_id
    AND A.course_id = G.course_id
    AND A.technology_id = G.technology_id
    INNER JOIN
    (
    SELECT
    technology_id,
    COUNT(1) AS technology_knowledge_count
    FROM shangshufang_base.technology_knowledge
    WHERE data_status = 'A'
    GROUP BY technology_id
    ) H
    ON A.technology_id = H.technology_id
    LEFT JOIN
    (

    SELECT
    A.course_id,
    COUNT(1) AS course_knowledge_exercises_count
    FROM shangshufang_customer.course A
    INNER JOIN shangshufang_customer.course_plan B
    ON A.university_code = B.university_code
    AND A.school_id = B.school_id
    AND A.course_id = B.course_id
    AND A.technology_id = B.technology_id
    INNER JOIN shangshufang_base.technology_knowledge_exercises C
    ON B.technology_id = C.technology_id
    AND B.knowledge_id = C.knowledge_id
    AND C.data_status = 'A'
    INNER JOIN shangshufang_base.technology d
    ON A.technology_id = d.technology_id
    WHERE A.data_status != '3'
    <if test="arg10 == true">
      AND A.university_code = #{arg0,jdbcType=INTEGER}
    </if>
    <if test="arg10 != true">
      AND A.university_code != #{arg0,jdbcType=INTEGER}
    </if>
    <if test="arg1 != 0">
      AND A.school_id = #{arg1,jdbcType=INTEGER}
    </if>
    <if test="arg2 != 0">
      AND A.teacher_id = #{arg2,jdbcType=INTEGER}
    </if>
    <if test="arg3 != 0">
      AND A.technology_id = #{arg3,jdbcType=INTEGER}
    </if>
    <if test="arg4 != null">
      AND A.course_time_begin &gt;= #{arg4,jdbcType=VARCHAR}
    </if>
    <if test="arg5 != null">
      AND A.data_status = #{arg5,jdbcType=VARCHAR}
    </if>
    <if test="arg8 != 0">
      AND d.direction_id = #{arg8,jdbcType=INTEGER}
    </if>
    <if test="arg9 != 0">
      AND d.category_id = #{arg9,jdbcType=INTEGER}
    </if>
    GROUP BY A.course_id
    ) I
    ON A.course_id = I.course_id
    LEFT JOIN
    (
    SELECT course_id, COUNT(1) AS course_sing_up_count
    FROM shangshufang_customer.course_sign_up
    GROUP BY course_id
    ) J
    ON A.course_id = J.course_id
    LEFT JOIN
    (
    SELECT
    A.course_id,
    COUNT(DISTINCT A.question_id) AS course_question_finish
    FROM shangshufang_customer.course_question A
    INNER JOIN shangshufang_customer.course_question_leave_message B
    ON A.question_id = B.question_id
    AND B.data_status = 'A'
    WHERE A.data_status = 'A'
    GROUP BY A.course_id
    ) K
    ON A.course_id = K.course_id
    LEFT JOIN
    (
    SELECT
    course_id,
    COUNT(1) AS course_question
    FROM shangshufang_customer.course_question
    WHERE data_status = 'A'
    GROUP BY course_id
    ) L
    ON A.course_id = L.course_id
    LEFT JOIN
    (
    SELECT course_id, COUNT(DISTINCT course_class) AS course_class_total_count
    FROM shangshufang_customer.course_plan
    GROUP BY course_id
    ) M
    ON A.course_id = M.course_id
    LEFT JOIN
    (
    SELECT course_id, COUNT(DISTINCT course_class) AS course_class_finish_count
    FROM shangshufang_customer.course_plan
    WHERE data_status = 'F'
    GROUP BY course_id
    ) N
    ON A.course_id = N.course_id
    ORDER BY a.data_status, a.update_time DESC;
  </select>

  <select id="searchStartedTotalCount" resultType="java.lang.Integer">
    SELECT
    COUNT(1) AS TotalCount
    FROM shangshufang_customer.course a
    INNER JOIN shangshufang_base.technology b
    ON a.technology_id = b.technology_id
    WHERE a.data_status != '3'
    <if test="arg0 != 0">
      <if test="arg8 == true">
        AND a.university_code = #{arg0,jdbcType=INTEGER}
      </if>
      <if test="arg8 != true">
        AND a.university_code != #{arg0,jdbcType=INTEGER}
      </if>
    </if>
    <if test="arg1 != 0">
      AND a.school_id = #{arg1,jdbcType=INTEGER}
    </if>
    <if test="arg2 != 0">
      AND a.teacher_id = #{arg2,jdbcType=INTEGER}
    </if>
    <if test="arg3 != 0">
      AND a.technology_id = #{arg3,jdbcType=INTEGER}
    </if>
    <if test="arg4 != null">
      AND a.course_time_begin &lt;= #{arg4,jdbcType=VARCHAR}
    </if>
    <if test="arg5 != null">
      AND a.data_status = #{arg5,jdbcType=VARCHAR}
    </if>
    <if test="arg6 != 0">
      AND b.direction_id = #{arg6,jdbcType=INTEGER}
    </if>
    <if test="arg7 != 0">
      AND b.category_id = #{arg7,jdbcType=INTEGER}
    </if>;
  </select>
  <select id="searchStartedList" resultMap="BaseResultMap">
    SELECT
    A.course_id,
    A.university_code,
    B.university_name,
    A.school_id,
    C.school_name,
    A.technology_id,
    D.technology_name,
    D.technology_thumbnail_rectangle,
    A.course_name,
    A.teacher_id,
    E.full_name AS teacher_name,
    E.photo AS teacher_photo,
    DATE_FORMAT(A.course_time_begin, '%Y-%m-%d') AS course_time_begin,
    DATE_FORMAT(A.course_time_end, '%Y-%m-%d') AS course_time_end,
    A.course_introduction,
    F.course_technology_using_company_count,
    G.course_knowledge_count,
    H.technology_knowledge_count,
    I.course_knowledge_exercises_count,
    IFNULL(J.course_sing_up_count, 0) AS course_sing_up_count,
    IFNULL(K.course_question_finish, 0) AS course_question_finish,
    IFNULL(L.course_question, 0) AS course_question,
    CONCAT(TRUNCATE(TRUNCATE(IFNULL(N.course_class_finish_count, 0) / IFNULL(M.course_class_total_count, 0), 2) * 100,
    0), '%') AS course_process,
    A.data_status,
    CASE WHEN A.data_status = '0' THEN '未开始'
    WHEN A.data_status = '1' THEN '进行中'
    WHEN A.data_status = '2' THEN '已结束'
    WHEN A.data_status = '3' THEN '已删除'
    WHEN A.data_status = '4' THEN '已暂停'
    ELSE '未知数据状态'
    END AS data_status_text,
    E.full_name AS create_user,
    DATE_FORMAT(A.create_time, '%Y-%m-%d %H:%i:%s') AS create_time,
    E.full_name AS update_user,
    DATE_FORMAT(A.update_time, '%Y-%m-%d %H:%i:%s') AS update_time
    FROM
    (
    SELECT
    a.course_id,
    a.university_code,
    a.school_id,
    a.technology_id,
    a.course_name,
    a.teacher_id,
    a.course_time_begin,
    a.course_time_end,
    a.course_introduction,
    a.data_status,
    a.create_time,
    a.update_time
    FROM shangshufang_customer.course a
    INNER JOIN shangshufang_base.technology b
    ON a.technology_id = b.technology_id
    WHERE a.data_status != '3'
    <if test="arg0 != 0">
      <if test="arg10 == true">
        AND a.university_code = #{arg0,jdbcType=INTEGER}
      </if>
      <if test="arg10 != true">
        AND a.university_code != #{arg0,jdbcType=INTEGER}
      </if>
    </if>
    <if test="arg1 != 0">
      AND a.school_id = #{arg1,jdbcType=INTEGER}
    </if>
    <if test="arg2 != 0">
      AND a.teacher_id = #{arg2,jdbcType=INTEGER}
    </if>
    <if test="arg3 != 0">
      AND a.technology_id = #{arg3,jdbcType=INTEGER}
    </if>
    <if test="arg4 != null">
      AND a.course_time_begin &lt;= #{arg4,jdbcType=VARCHAR}
    </if>
    <if test="arg5 != null">
      AND a.data_status = #{arg5,jdbcType=VARCHAR}
    </if>
    <if test="arg8 != 0">
      AND b.direction_id = #{arg8,jdbcType=INTEGER}
    </if>
    <if test="arg9 != 0">
      AND b.category_id = #{arg9,jdbcType=INTEGER}
    </if>
    ORDER BY a.data_status, a.update_time DESC
    LIMIT #{arg6,jdbcType=INTEGER}, #{arg7,jdbcType=INTEGER}
    ) A
    INNER JOIN shangshufang_customer.university B
    ON A.university_code = B.university_code
    INNER JOIN shangshufang_customer.school C
    ON A.university_code = C.university_code
    AND A.school_id = C.school_id
    INNER JOIN shangshufang_base.technology D
    ON A.technology_id = D.technology_id
    INNER JOIN shangshufang_customer.university_customer E
    ON A.university_code = E.university_code
    AND A.school_id = E.school_id
    AND A.teacher_id = E.customer_id
    INNER JOIN
    (
    SELECT
    technology_id,
    COUNT(DISTINCT company_id) AS course_technology_using_company_count
    FROM shangshufang_customer.technology_using
    GROUP BY technology_id
    ) F
    ON A.technology_id = F.technology_id
    INNER JOIN
    (
    SELECT
    university_code,
    school_id,
    course_id,
    technology_id,
    COUNT(DISTINCT knowledge_id) AS course_knowledge_count
    FROM shangshufang_customer.course_plan
    GROUP BY university_code, school_id, course_id, technology_id
    ) G
    ON A.university_code = G.university_code
    AND A.school_id = G.school_id
    AND A.course_id = G.course_id
    AND A.technology_id = G.technology_id
    INNER JOIN
    (
    SELECT
    technology_id,
    COUNT(1) AS technology_knowledge_count
    FROM shangshufang_base.technology_knowledge
    WHERE data_status = 'A'
    GROUP BY technology_id
    ) H
    ON A.technology_id = H.technology_id
    LEFT JOIN
    (
    SELECT
    A.course_id,
    COUNT(1) AS course_knowledge_exercises_count
    FROM shangshufang_customer.course A
    INNER JOIN shangshufang_customer.course_plan B
    ON A.university_code = B.university_code
    AND A.school_id = B.school_id
    AND A.course_id = B.course_id
    AND A.technology_id = B.technology_id
    INNER JOIN shangshufang_base.technology_knowledge_exercises C
    ON B.technology_id = C.technology_id
    AND B.knowledge_id = C.knowledge_id
    AND C.data_status = 'A'
    INNER JOIN shangshufang_base.technology d
    ON A.technology_id = d.technology_id
    WHERE A.data_status != '3'
    <if test="arg10 == true">
      AND A.university_code = #{arg0,jdbcType=INTEGER}
    </if>
    <if test="arg10 != true">
      AND A.university_code != #{arg0,jdbcType=INTEGER}
    </if>
    <if test="arg1 != 0">
      AND A.school_id = #{arg1,jdbcType=INTEGER}
    </if>
    <if test="arg2 != 0">
      AND A.teacher_id = #{arg2,jdbcType=INTEGER}
    </if>
    <if test="arg3 != 0">
      AND A.technology_id = #{arg3,jdbcType=INTEGER}
    </if>
    <if test="arg4 != null">
      AND A.course_time_begin &lt;= #{arg4,jdbcType=VARCHAR}
    </if>
    <if test="arg5 != null">
      AND A.data_status = #{arg5,jdbcType=VARCHAR}
    </if>
    <if test="arg8 != 0">
      AND d.direction_id = #{arg8,jdbcType=INTEGER}
    </if>
    <if test="arg9 != 0">
      AND d.category_id = #{arg9,jdbcType=INTEGER}
    </if>
    GROUP BY A.course_id
    ) I
    ON A.course_id = I.course_id
    LEFT JOIN
    (
    SELECT course_id, COUNT(1) AS course_sing_up_count
    FROM shangshufang_customer.course_sign_up
    GROUP BY course_id
    ) J
    ON A.course_id = J.course_id
    LEFT JOIN
    (
    SELECT
    A.course_id,
    COUNT(DISTINCT A.question_id) AS course_question_finish
    FROM shangshufang_customer.course_question A
    INNER JOIN shangshufang_customer.course_question_leave_message B
    ON A.question_id = B.question_id
    AND B.data_status = 'A'
    WHERE A.data_status = 'A'
    GROUP BY A.course_id
    ) K
    ON A.course_id = K.course_id
    LEFT JOIN
    (
    SELECT
    course_id,
    COUNT(1) AS course_question
    FROM shangshufang_customer.course_question
    WHERE data_status = 'A'
    GROUP BY course_id
    ) L
    ON A.course_id = L.course_id
    LEFT JOIN
    (
    SELECT course_id, COUNT(DISTINCT course_class) AS course_class_total_count
    FROM shangshufang_customer.course_plan
    GROUP BY course_id
    ) M
    ON A.course_id = M.course_id
    LEFT JOIN
    (
    SELECT course_id, COUNT(DISTINCT course_class) AS course_class_finish_count
    FROM shangshufang_customer.course_plan
    WHERE data_status = 'F'
    GROUP BY course_id
    ) N
    ON A.course_id = N.course_id
    ORDER BY a.data_status, a.update_time DESC;
  </select>

  <select id="searchSimpleTotalCount" resultType="java.lang.Integer">
    SELECT COUNT(1) AS total_count
    FROM shangshufang_customer.course
    WHERE data_status != '3'
      AND university_code = #{arg0,jdbcType=INTEGER}
      AND school_id = #{arg1,jdbcType=INTEGER}
      AND teacher_id = #{arg2,jdbcType=INTEGER}
      AND technology_id = #{arg3,jdbcType=INTEGER};
  </select>
  <select id="searchSimpleList" resultMap="BaseResultMap">
    SELECT university_code,
           school_id,
           technology_id,
           course_id,
           course_name,
           DATE_FORMAT(course_time_begin, '%Y-%m-%d') AS course_time_begin,
           DATE_FORMAT(course_time_end, '%Y-%m-%d')   AS course_time_end
    FROM shangshufang_customer.course
    WHERE data_status != '3'
      AND university_code = #{arg0,jdbcType=INTEGER}
      AND school_id = #{arg1,jdbcType=INTEGER}
      AND teacher_id = #{arg2,jdbcType=INTEGER}
      AND technology_id = #{arg3,jdbcType=INTEGER};
  </select>
  <select id="search" resultMap="BaseResultMap">
    SELECT
    A.course_id,
    A.university_code,
    B.university_name,
    A.school_id,
    C.school_name,
    A.technology_id,
    D.language_id,
    D.technology_name,
    D.technology_thumbnail_rectangle,
    A.course_name,
    A.teacher_id,
    E.full_name AS teacher_name,
    E.photo AS teacher_photo,
    DATE_FORMAT(A.course_time_begin, '%Y-%m-%d') AS course_time_begin,
    DATE_FORMAT(A.course_time_end, '%Y-%m-%d') AS course_time_end,
    A.course_introduction,
    F.course_technology_using_company_count,
    G.course_knowledge_count,
    H.technology_knowledge_count,
    I.course_knowledge_exercises_count,
    IFNULL(J.course_sing_up_count, 0) AS course_sing_up_count,
    IFNULL(K.course_question_finish, 0) AS course_question_finish,
    IFNULL(L.course_question, 0) AS course_question,
    CONCAT(TRUNCATE(TRUNCATE(IFNULL(N.course_class_finish_count, 0) / IFNULL(M.course_class_total_count, 0), 2) * 100,
    0), '%') AS course_process,
    A.data_status,
    CASE WHEN A.data_status = '0' THEN '未开始'
    WHEN A.data_status = '1' THEN '进行中'
    WHEN A.data_status = '2' THEN '已结束'
    WHEN A.data_status = '3' THEN '已删除'
    WHEN A.data_status = '4' THEN '已暂停'
    ELSE '未知数据状态'
    END AS data_status_text,
    E.full_name AS create_user,
    DATE_FORMAT(A.create_time, '%Y-%m-%d %H:%i:%s') AS create_time,
    E.full_name AS update_user,
    DATE_FORMAT(A.update_time, '%Y-%m-%d %H:%i:%s') AS update_time
    FROM
    (
    SELECT
    course_id,
    university_code,
    school_id,
    technology_id,
    course_name,
    teacher_id,
    course_time_begin,
    course_time_end,
    course_introduction,
    data_status,
    create_time,
    update_time
    FROM shangshufang_customer.course
    WHERE data_status != '3'
    AND university_code = #{arg0,jdbcType=INTEGER}
    AND school_id = #{arg1,jdbcType=INTEGER}
    AND course_id = #{arg2,jdbcType=INTEGER}
    <if test="arg3 != null">
      AND data_status = #{arg3,jdbcType=VARCHAR}
    </if>
    ) A
    INNER JOIN shangshufang_customer.university B
    ON A.university_code = B.university_code
    INNER JOIN shangshufang_customer.school C
    ON A.university_code = C.university_code
    AND A.school_id = C.school_id
    INNER JOIN shangshufang_base.technology D
    ON A.technology_id = D.technology_id
    INNER JOIN shangshufang_customer.university_customer E
    ON A.university_code = E.university_code
    AND A.school_id = E.school_id
    AND A.teacher_id = E.customer_id
    LEFT JOIN
    (
    SELECT
    technology_id,
    COUNT(DISTINCT company_id) AS course_technology_using_company_count
    FROM shangshufang_customer.technology_using
    GROUP BY technology_id
    ) F
    ON A.technology_id = F.technology_id
    LEFT JOIN
    (
    SELECT
    university_code,
    school_id,
    course_id,
    technology_id,
    COUNT(DISTINCT knowledge_id) AS course_knowledge_count
    FROM shangshufang_customer.course_plan
    GROUP BY university_code, school_id, course_id, technology_id
    ) G
    ON A.university_code = G.university_code
    AND A.school_id = G.school_id
    AND A.course_id = G.course_id
    AND A.technology_id = G.technology_id
    LEFT JOIN
    (
    SELECT
    technology_id,
    COUNT(1) AS technology_knowledge_count
    FROM shangshufang_base.technology_knowledge
    WHERE data_status = 'A'
    GROUP BY technology_id
    ) H
    ON A.technology_id = H.technology_id
    LEFT JOIN
    (
    SELECT
    A.course_id,
    COUNT(1) AS course_knowledge_exercises_count
    FROM shangshufang_customer.course A
    INNER JOIN shangshufang_customer.course_plan B
    ON A.university_code = B.university_code
    AND A.school_id = B.school_id
    AND A.course_id = B.course_id
    AND A.technology_id = B.technology_id
    INNER JOIN shangshufang_base.technology_knowledge_exercises C
    ON B.technology_id = C.technology_id
    AND B.knowledge_id = C.knowledge_id
    AND C.data_status = 'A'
    WHERE A.data_status != '3'
    AND A.university_code = #{arg0,jdbcType=INTEGER}
    AND A.school_id = #{arg1,jdbcType=INTEGER}
    AND A.course_id = #{arg2,jdbcType=INTEGER}
    <if test="arg3 != null">
      AND A.data_status = #{arg3,jdbcType=VARCHAR}
    </if>
    GROUP BY A.course_id
    ) I
    ON A.course_id = I.course_id
    LEFT JOIN
    (
    SELECT course_id, COUNT(1) AS course_sing_up_count
    FROM shangshufang_customer.course_sign_up
    GROUP BY course_id
    ) J
    ON A.course_id = J.course_id
    LEFT JOIN
    (
    SELECT
    A.course_id,
    COUNT(DISTINCT A.question_id) AS course_question_finish
    FROM shangshufang_customer.course_question A
    INNER JOIN shangshufang_customer.course_question_leave_message B
    ON A.question_id = B.question_id
    AND B.data_status = 'A'
    WHERE A.data_status = 'A'
    AND A.course_university_code = #{arg0,jdbcType=INTEGER}
    AND A.course_school_id = #{arg1,jdbcType=INTEGER}
    AND A.course_id = #{arg2,jdbcType=INTEGER}
    GROUP BY A.course_id
    ) K
    ON A.course_id = K.course_id
    LEFT JOIN
    (
    SELECT
    course_id,
    COUNT(1) AS course_question
    FROM shangshufang_customer.course_question
    WHERE course_university_code = #{arg0,jdbcType=INTEGER}
    AND course_school_id = #{arg1,jdbcType=INTEGER}
    AND course_id = #{arg2,jdbcType=INTEGER}
    AND data_status = 'A'
    GROUP BY course_id
    ) L
    ON A.course_id = L.course_id
    LEFT JOIN
    (
    SELECT course_id, COUNT(DISTINCT course_class) AS course_class_total_count
    FROM shangshufang_customer.course_plan
    GROUP BY course_id
    ) M
    ON A.course_id = M.course_id
    LEFT JOIN
    (
    SELECT course_id, COUNT(DISTINCT course_class) AS course_class_finish_count
    FROM shangshufang_customer.course_plan
    WHERE data_status = 'F'
    GROUP BY course_id
    ) N
    ON A.course_id = N.course_id;
  </select>
  <select id="checkCourseExist" resultType="java.lang.Integer">
    SELECT COUNT(1) AS totalcount
    FROM shangshufang_customer.course
    WHERE university_code = #{arg0,jdbcType=INTEGER}
      AND school_id = #{arg1,jdbcType=INTEGER}
      AND course_name = #{arg2,jdbcType=VARCHAR}
      AND (
        (course_time_begin &gt;= #{arg3,jdbcType=VARCHAR} AND course_time_end &lt;= #{arg4,jdbcType=VARCHAR})
        OR
        (course_time_begin &gt;= #{arg3,jdbcType=VARCHAR} AND course_time_end &gt;= #{arg4,jdbcType=VARCHAR})
        OR
        (course_time_begin &lt;= #{arg3,jdbcType=VARCHAR} AND course_time_end &gt;= #{arg3,jdbcType=VARCHAR} AND
         course_time_end &gt;= #{arg4,jdbcType=VARCHAR})
        OR
        (course_time_begin &lt;= #{arg3,jdbcType=VARCHAR} AND course_time_end &gt;= #{arg3,jdbcType=VARCHAR} AND
         course_time_end &lt;= #{arg4,jdbcType=VARCHAR})
      );
  </select>
  <insert id="insert" useGeneratedKeys="true" keyProperty="courseID"
          parameterType="com.shangshufang.apiservice.entity.CourseEntity">
    INSERT INTO shangshufang_customer.course (university_code,
                                              school_id,
                                              technology_id,
                                              course_name,
                                              teacher_id,
                                              course_time_begin,
                                              course_time_end,
                                              course_introduction,
                                              data_status,
                                              create_user,
                                              update_user)
    VALUES (#{universityCode, jdbcType=INTEGER},
            #{schoolID, jdbcType=INTEGER},
            #{technologyID, jdbcType=INTEGER},
            #{courseName, jdbcType=VARCHAR},
            #{teacherID, jdbcType=INTEGER},
            #{courseTimeBegin, jdbcType=VARCHAR},
            #{courseTimeEnd, jdbcType=VARCHAR},
            #{courseIntroduction, jdbcType=VARCHAR},
            #{dataStatus, jdbcType=VARCHAR},
            #{createUser, jdbcType=VARCHAR},
            #{updateUser, jdbcType=VARCHAR})
  </insert>
  <update id="update" parameterType="com.shangshufang.apiservice.entity.CourseEntity">
    UPDATE shangshufang_customer.course
    SET course_name         = #{courseName,jdbcType=VARCHAR},
        course_time_begin   = #{courseTimeBegin,jdbcType=VARCHAR},
        course_time_end     = #{courseTimeEnd,jdbcType=VARCHAR},
        course_introduction = #{courseIntroduction,jdbcType=VARCHAR},
        update_user         = #{updateUser,jdbcType=VARCHAR}
    WHERE university_code = #{universityCode,jdbcType=INTEGER}
      AND school_id = #{schoolID,jdbcType=INTEGER}
      AND teacher_id = #{teacherID,jdbcType=INTEGER}
      AND course_id = #{courseID,jdbcType=INTEGER};
  </update>
  <update id="updateDataStatus" parameterType="com.shangshufang.apiservice.entity.CourseEntity">
    UPDATE shangshufang_customer.course
    SET data_status = #{dataStatus,jdbcType=VARCHAR},
        update_user = #{updateUser,jdbcType=INTEGER}
    WHERE university_code = #{universityCode,jdbcType=INTEGER}
      AND school_id = #{schoolID,jdbcType=INTEGER}
      AND teacher_id = #{teacherID,jdbcType=INTEGER}
      AND course_id = #{courseID,jdbcType=INTEGER};
  </update>
  <update id="updateCourseToStart">
    UPDATE shangshufang_customer.course
    SET data_status = '1',
        update_user = 0
    WHERE DATE_FORMAT(course_time_begin, '%Y-%m-%d') &lt;= date_format(now(), '%Y-%m-%d')
      AND data_status = '0';
  </update>
</mapper>