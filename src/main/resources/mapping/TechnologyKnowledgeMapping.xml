<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.shangshufang.apiservice.mapper.TechnologyKnowledgeMapper" >
  <resultMap id="BaseResultMap" type="com.shangshufang.apiservice.entity.TechnologyKnowledgeEntity" >
    <id column="knowledge_id" property="knowledgeID" jdbcType="INTEGER" />
    <result column="technology_id" property="technologyID" jdbcType="INTEGER" />
    <result column="technology_name" property="technologyName" jdbcType="VARCHAR" />
    <result column="learning_phase_id" property="learningPhaseID" jdbcType="INTEGER" />
    <result column="learning_phase_name" property="learningPhaseName" jdbcType="VARCHAR" />
    <result column="knowledge_name" property="knowledgeName" jdbcType="VARCHAR" />
    <result column="using_company_count" property="usingCompanyCount" jdbcType="INTEGER" />

    <result column="choice_exercises_count" property="choiceExercisesCount" jdbcType="INTEGER" />
    <result column="blank_exercises_count" property="blankExercisesCount" jdbcType="INTEGER" />
    <result column="program_exercises_count" property="programExercisesCount" jdbcType="INTEGER" />

    <result column="custom_choice_exercises_count" property="customChoiceExercisesCount" jdbcType="INTEGER" />
    <result column="custom_blank_exercises_count" property="customBlankExercisesCount" jdbcType="INTEGER" />
    <result column="custom_program_exercises_count" property="customProgramExercisesCount" jdbcType="INTEGER" />

    <result column="data_status" property="dataStatus" jdbcType="VARCHAR" />
    <result column="data_status_text" property="dataStatusText" jdbcType="VARCHAR" />
    <result column="create_user" property="createUser" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_user" property="updateUser" jdbcType="INTEGER" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <select id="searchTotalCount" resultType="java.lang.Integer">
    SELECT
    COUNT(1) AS TotalCount
    FROM shangshufang_base.technology_knowledge
    <where>
      <if test="technologyID != 0">
        AND technology_id = #{technologyID,jdbcType=INTEGER}
      </if>
      <if test="learningPhaseID != 0">
        AND learning_phase_id = #{learningPhaseID,jdbcType=INTEGER}
      </if>
      <if test="dataStatus != null">
        AND data_status = #{dataStatus,jdbcType=VARCHAR}
      </if>
    </where>;
  </select>
  <select id="searchList" resultMap="BaseResultMap">
    SELECT A.knowledge_id,
          A.technology_id,
          B.technology_name,
          A.learning_phase_id,
          C.learning_phase_name,
          A.knowledge_name,
          A.data_status,
          CASE
          WHEN A.data_status = 'P' THEN '未激活'
          WHEN A.data_status = 'A' THEN '正常'
          WHEN A.data_status = 'D' THEN '禁用'
          ELSE '未知数据状态'
          END                                         AS data_status_text,
          IFNULL(E.program_exercises_count, 0)        AS program_exercises_count,
          IFNULL(f.choice_exercises_count, 0)         AS choice_exercises_count,
          IFNULL(g.blank_exercises_count, 0)          AS blank_exercises_count,

          IFNULL(h.custom_choice_exercises_count, 0)  AS custom_choice_exercises_count,
          IFNULL(i.custom_blank_exercises_count, 0)   AS custom_blank_exercises_count,
          IFNULL(j.custom_program_exercises_count, 0) AS custom_program_exercises_count,

          k.admin_name                                    AS create_user,
          DATE_FORMAT(A.create_time, '%Y-%m-%d %H:%i:%s') AS create_time,
          l.admin_name                                    AS update_user,
          DATE_FORMAT(A.update_time, '%Y-%m-%d %H:%i:%s') AS update_time
    FROM shangshufang_base.technology_knowledge A
    INNER JOIN shangshufang_base.technology B
    ON A.technology_id = B.technology_id
    INNER JOIN shangshufang_base.learning_phase C
    ON A.learning_phase_id = C.learning_phase_id
    LEFT JOIN
    (
      SELECT
        technology_id,
        learning_phase_id,
        knowledge_id,
        COUNT(1) AS using_company_count
      FROM shangshufang_customer.technology_knowledge_using
      <where>
        <if test="technologyID != 0">
          technology_id = #{technologyID,jdbcType=INTEGER}
        </if>
        <if test="learningPhaseID != 0">
          AND learning_phase_id = #{learningPhaseID,jdbcType=INTEGER}
        </if>
      </where>
      GROUP BY technology_id, learning_phase_id, knowledge_id
    ) D
    ON A.technology_id = D.technology_id
    AND A.learning_phase_id = D.learning_phase_id
    AND A.knowledge_id = D.knowledge_id
    LEFT JOIN
    (
      SELECT technology_id,
      knowledge_id,
      COUNT(1) AS program_exercises_count
      FROM shangshufang_base.technology_knowledge_exercises
      <where>
        <if test="technologyID != 0">
          technology_id = #{technologyID,jdbcType=INTEGER}
        </if>
        <if test="learningPhaseID != 0">
          AND learning_phase_id = #{learningPhaseID,jdbcType=INTEGER}
        </if>
      </where>
      GROUP BY technology_id, knowledge_id
    ) E
    ON A.technology_id = E.technology_id
    AND A.knowledge_id = E.knowledge_id
    LEFT JOIN
    (
      SELECT technology_id,
      knowledge_id,
      COUNT(1) AS choice_exercises_count
      FROM shangshufang_base.exercise_warehouse_knowledge_choice_question
      WHERE data_status = 'A'
      <if test="technologyID != 0">
        AND technology_id = #{technologyID,jdbcType=INTEGER}
      </if>
      GROUP BY technology_id, knowledge_id
    ) f
    ON A.technology_id = f.technology_id
    AND A.knowledge_id = f.knowledge_id
    LEFT JOIN
    (
      SELECT technology_id,
             knowledge_id,
      COUNT(1) AS blank_exercises_count
      FROM shangshufang_base.exercise_warehouse_knowledge_blank_question
      WHERE data_status = 'A'
      <if test="technologyID != 0">
        AND technology_id = #{technologyID,jdbcType=INTEGER}
      </if>
      GROUP BY technology_id, knowledge_id
    ) g
    ON A.technology_id = g.technology_id
    AND A.knowledge_id = g.knowledge_id
    LEFT JOIN
    (
    SELECT technology_id,
    knowledge_id,
    COUNT(1) AS custom_choice_exercises_count
    FROM shangshufang_customer.university_exercise_knowledge_choice
    <where>
      <if test="technologyID != 0">
        technology_id = #{technologyID,jdbcType=INTEGER}
      </if>
    </where>
    GROUP BY technology_id, knowledge_id
    ) h
    ON A.technology_id = h.technology_id
    AND A.knowledge_id = h.knowledge_id
    LEFT JOIN
    (
    SELECT technology_id,
    knowledge_id,
    COUNT(1) AS custom_blank_exercises_count
    FROM shangshufang_customer.university_exercise_knowledge_blank
    <where>
      <if test="technologyID != 0">
        technology_id = #{technologyID,jdbcType=INTEGER}
      </if>
    </where>
    GROUP BY technology_id, knowledge_id
    ) i
    ON A.technology_id = i.technology_id
    AND A.knowledge_id = i.knowledge_id
    LEFT JOIN
    (
    SELECT technology_id,
    knowledge_id,
    COUNT(1) AS custom_program_exercises_count
    FROM shangshufang_customer.university_exercise_knowledge_program
    <where>
      <if test="technologyID != 0">
        technology_id = #{technologyID,jdbcType=INTEGER}
      </if>
    </where>
    GROUP BY technology_id, knowledge_id
    ) j
    ON A.technology_id = j.technology_id
    AND A.knowledge_id = j.knowledge_id

    LEFT JOIN shangshufang_base.system_admin k
    ON A.create_user = k.admin_id
    LEFT JOIN shangshufang_base.system_admin l
    ON A.update_user = l.admin_id
    <where>
      <if test="technologyID != 0">
        A.technology_id = #{technologyID,jdbcType=INTEGER}
      </if>
      <if test="learningPhaseID != 0">
        AND A.learning_phase_id = #{learningPhaseID,jdbcType=INTEGER}
      </if>
      <if test="dataStatus != null">
        AND A.data_status = #{dataStatus,jdbcType=VARCHAR}
      </if>
    </where>
    ORDER BY A.knowledge_id, A.learning_phase_id
    LIMIT #{startIndex,jdbcType=INTEGER}, #{pageSize,jdbcType=INTEGER};
  </select>

  <select id="search" resultMap="BaseResultMap">
    SELECT a.technology_id,
           b.technology_name,
           a.knowledge_id,
           a.knowledge_name,
           a.learning_phase_id,
           c.learning_phase_name
    FROM shangshufang_base.technology_knowledge a
    LEFT JOIN shangshufang_base.technology b
    ON a.technology_id = b.technology_id
    LEFT JOIN shangshufang_base.learning_phase c
    ON a.learning_phase_id = c.learning_phase_id
    WHERE a.technology_id = #{technologyID,jdbcType=INTEGER}
      AND a.knowledge_id = #{knowledgeID,jdbcType=INTEGER}
  </select>

  <select id="searchSimpleList" resultMap="BaseResultMap">
    SELECT
    A.knowledge_id,
    A.technology_id,
    B.technology_name,
    A.knowledge_name,
    A.data_status,
    CASE WHEN A.data_status = 'P' THEN '未激活'
    WHEN A.data_status = 'A' THEN '正常'
    WHEN A.data_status = 'D' THEN '禁用'
    ELSE '未知数据状态'
    END AS data_status_text,
    C.admin_name AS create_user,
    DATE_FORMAT(A.create_time, '%Y-%m-%d %H:%i:%s') AS create_time,
    D.admin_name AS update_user,
    DATE_FORMAT(A.update_time, '%Y-%m-%d %H:%i:%s') AS update_time
    FROM shangshufang_base.technology_knowledge A
    INNER JOIN shangshufang_base.technology B
    ON A.technology_id = B.technology_id
    INNER JOIN shangshufang_base.system_admin C
    ON A.create_user = C.admin_id
    INNER JOIN shangshufang_base.system_admin D
    ON A.update_user = D.admin_id
    WHERE A.technology_id = #{arg0,jdbcType=INTEGER}
    AND B.data_status = 'A'
    ORDER BY A.knowledge_id;
  </select>
  <select id="checkKnowledgeNameExist" resultType="java.lang.Integer">
    SELECT
      COUNT(1) AS TotalCount
    FROM shangshufang_base.technology_knowledge
    WHERE technology_id = #{arg0,jdbcType=INTEGER}
    AND knowledge_name = #{arg1,jdbcType=VARCHAR};
  </select>
  <insert id="insert" parameterType="com.shangshufang.apiservice.entity.TechnologyKnowledgeEntity" >
    INSERT INTO shangshufang_base.technology_knowledge (
      technology_id,
      learning_phase_id,
      knowledge_name,
      create_user,
      update_user
    )
    VALUES (
      #{technologyID, jdbcType=INTEGER},
      #{learningPhaseID, jdbcType=INTEGER},
      #{knowledgeName, jdbcType=VARCHAR},
      #{createUser, jdbcType=VARCHAR},
      #{updateUser, jdbcType=VARCHAR}
    )
  </insert>
  <update id="update" parameterType="com.shangshufang.apiservice.entity.TechnologyKnowledgeEntity" >
    UPDATE shangshufang_base.technology_knowledge SET
      knowledge_name = #{knowledgeName,jdbcType=VARCHAR},
      update_user = #{updateUser,jdbcType=VARCHAR}
    WHERE technology_id = #{technologyID,jdbcType=INTEGER}
    AND learning_phase_id = #{learningPhaseID,jdbcType=INTEGER}
    AND knowledge_id = #{knowledgeID,jdbcType=INTEGER};
  </update>
  <update id="updateDataStatus" parameterType="com.shangshufang.apiservice.entity.TechnologyKnowledgeEntity" >
    UPDATE shangshufang_base.technology_knowledge SET
      data_status = #{dataStatus,jdbcType=VARCHAR},
      update_user = #{updateUser,jdbcType=VARCHAR}
    WHERE technology_id = #{technologyID,jdbcType=INTEGER}
    AND learning_phase_id = #{learningPhaseID,jdbcType=INTEGER}
    AND knowledge_id = #{knowledgeID,jdbcType=INTEGER};
  </update>
  <delete id="delete" parameterType="java.lang.Integer" >
    DELETE FROM shangshufang_base.technology_knowledge
    WHERE technology_id = #{arg0,jdbcType=INTEGER}
    AND learning_phase_id = #{arg1,jdbcType=INTEGER}
    AND knowledge_id = #{arg2,jdbcType=INTEGER};
  </delete>
</mapper>