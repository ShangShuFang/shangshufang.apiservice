<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.shangshufang.apiservice.mapper.StudentCourseExercisesDetailMapper">
    <resultMap id="BaseResultMap" type="com.shangshufang.apiservice.entity.StudentCourseExercisesDetailEntity">
        <id column="course_exercises_detail_id" property="courseExercisesDetailID" jdbcType="INTEGER"/>
        <result column="course_exercises_id" property="courseExercisesID" jdbcType="INTEGER"/>
        <result column="technology_id" property="technologyID" jdbcType="INTEGER"/>
        <result column="technology_name" property="technologyName" jdbcType="VARCHAR"/>
        <result column="knowledge_id" property="knowledgeID" jdbcType="INTEGER"/>
        <result column="knowledge_name" property="knowledgeName" jdbcType="VARCHAR"/>
        <result column="exercises_id" property="exercisesID" jdbcType="INTEGER"/>
        <result column="exercises_title" property="exercisesTitle" jdbcType="VARCHAR"/>
        <result column="exercises_type" property="exercisesType" jdbcType="INTEGER"/>
        <result column="exercises_source_type" property="exercisesSourceType" jdbcType="INTEGER"/>
        <result column="exercises_source" property="exercisesSource" jdbcType="VARCHAR"/>
        <result column="program_exercises_code_uri" property="programExercisesCodeUri" jdbcType="VARCHAR"/>
        <result column="correct_result" property="correctResult" jdbcType="VARCHAR"/>
        <result column="corrector" property="corrector" jdbcType="VARCHAR"/>
        <result column="create_user" property="createUser" jdbcType="INTEGER"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="update_user" property="updateUser" jdbcType="INTEGER"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
    </resultMap>

    <resultMap id="KnowledgeResultMap" type="com.shangshufang.apiservice.entity.TechnologyKnowledgeEntity">
        <id column="knowledge_id" property="knowledgeID" jdbcType="INTEGER"/>
        <result column="technology_id" property="technologyID" jdbcType="INTEGER"/>
        <result column="technology_name" property="technologyName" jdbcType="VARCHAR"/>
        <result column="knowledge_name" property="knowledgeName" jdbcType="VARCHAR"/>
    </resultMap>

    <select id="searchKnowledgeCorrectingTotalCount" resultType="java.lang.Integer">
        SELECT
            COUNT(1) AS total_count
        FROM shangshufang_customer.student_course_exercises_detail
        WHERE course_exercises_id = #{courseExercisesID, jdbcType=INTEGER}
          AND technology_id = #{technologyID, jdbcType=INTEGER}
          AND knowledge_id = #{knowledgeID, jdbcType=INTEGER}
          AND correct_result IN ('W');
    </select>

    <select id="searchKnowledgeIncorrectTotalCount" resultType="java.lang.Integer">
        SELECT
            COUNT(1) AS total_count
        FROM shangshufang_customer.student_course_exercises_detail
        WHERE course_exercises_id = #{courseExercisesID, jdbcType=INTEGER}
          AND technology_id = #{technologyID, jdbcType=INTEGER}
          AND knowledge_id = #{knowledgeID, jdbcType=INTEGER}
          AND correct_result IN ('R', 'N');
    </select>

    <select id="searchWeaknessKnowledgeTotalCount" resultType="java.lang.Integer">
        SELECT COUNT(1) AS total_count
        FROM
         (
             SELECT DISTINCT b.technology_id,
                             b.knowledge_id
             FROM shangshufang_customer.student_course_exercises a
                      LEFT JOIN shangshufang_customer.student_course_exercises_detail b
                                ON a.course_exercises_id = b.course_exercises_id
             WHERE a.student_id = #{studentID, jdbcType=INTEGER}
               AND b.technology_id = #{technologyID, jdbcType=INTEGER}
               AND (b.correct_result = 'R' OR b.correct_result = 'N')
         ) A
    </select>

    <select id="searchLearnedKnowledgeTotalCount" resultType="java.lang.Integer">
        SELECT COUNT(1) AS total_count
        FROM
            (
                SELECT DISTINCT b.technology_id,
                                b.knowledge_id
                FROM shangshufang_customer.student_course_exercises a
                         LEFT JOIN shangshufang_customer.student_course_exercises_detail b
                                   ON a.course_exercises_id = b.course_exercises_id
                WHERE a.student_id = #{studentID, jdbcType=INTEGER}
                  AND b.technology_id = #{technologyID, jdbcType=INTEGER}
            ) a
                LEFT JOIN
            (
                SELECT DISTINCT b.technology_id,
                                b.knowledge_id
                FROM shangshufang_customer.student_course_exercises a
                         LEFT JOIN shangshufang_customer.student_course_exercises_detail b
                                   ON a.course_exercises_id = b.course_exercises_id
                WHERE a.student_id = #{studentID, jdbcType=INTEGER}
                  AND b.technology_id = #{technologyID, jdbcType=INTEGER}
                  AND b.correct_result != 'Y'
            ) b
            ON a.technology_id = b.technology_id
                AND a.knowledge_id = b.knowledge_id
        WHERE b.knowledge_id IS NULL;
    </select>

    <select id="searchStudentWeaknessKnowledgeList" resultMap="KnowledgeResultMap">
        SELECT a.technology_id,
               a.knowledge_id,
               b.knowledge_name
        FROM
             (
                 SELECT a.technology_id, a.knowledge_id
                 FROM
                     (
                         SELECT DISTINCT b.technology_id,
                                         b.knowledge_id
                         FROM shangshufang_customer.student_course_exercises a
                                  LEFT JOIN shangshufang_customer.student_course_exercises_detail b
                                            ON a.course_exercises_id = b.course_exercises_id
                         WHERE a.student_id = #{studentID, jdbcType=INTEGER}
                           AND b.technology_id = #{technologyID, jdbcType=INTEGER}
                           AND (b.correct_result = 'R' OR b.correct_result = 'N')
                     ) a
                 LIMIT #{startIndex,jdbcType=INTEGER}, #{pageSize,jdbcType=INTEGER}
             ) a
        LEFT JOIN shangshufang_base.technology_knowledge b
                  ON a.technology_id = b.technology_id
                      AND a.knowledge_id = b.knowledge_id;
    </select>

    <select id="searchStudentLearnedKnowledgeList" resultMap="KnowledgeResultMap">
        SELECT a.technology_id,
               a.knowledge_id,
               b.knowledge_name
        FROM
           (
               SELECT a.technology_id, a.knowledge_id
               FROM (
                        SELECT DISTINCT b.technology_id,
                                        b.knowledge_id
                        FROM shangshufang_customer.student_course_exercises a
                                 LEFT JOIN shangshufang_customer.student_course_exercises_detail b
                                           ON a.course_exercises_id = b.course_exercises_id
                        WHERE a.student_id = #{studentID, jdbcType=INTEGER}
                          AND b.technology_id = #{technologyID, jdbcType=INTEGER}
                    ) a
                        LEFT JOIN
                    (
                        SELECT DISTINCT b.technology_id,
                                        b.knowledge_id
                        FROM shangshufang_customer.student_course_exercises a
                                 LEFT JOIN shangshufang_customer.student_course_exercises_detail b
                                           ON a.course_exercises_id = b.course_exercises_id
                        WHERE a.student_id = #{studentID, jdbcType=INTEGER}
                          AND b.technology_id = #{technologyID, jdbcType=INTEGER}
                          AND b.correct_result != 'Y'
                    ) b
                    ON a.technology_id = b.technology_id
                        AND a.knowledge_id = b.knowledge_id
               WHERE b.knowledge_id IS NULL
               LIMIT #{startIndex,jdbcType=INTEGER}, #{pageSize,jdbcType=INTEGER}
           ) a
        LEFT JOIN shangshufang_base.technology_knowledge b
            ON a.technology_id = b.technology_id
                AND a.knowledge_id = b.knowledge_id;
    </select>

    <select id="searchStudentNoLearnKnowledgeList" resultMap="KnowledgeResultMap">
        SELECT a.knowledge_id,
               a.knowledge_name
        FROM (
                 SELECT knowledge_id, knowledge_name
                 FROM shangshufang_base.technology_knowledge
                 WHERE technology_id = #{technologyID, jdbcType=INTEGER}
             ) a
                 LEFT JOIN
             (
                 SELECT a.knowledge_id
                 FROM (
                          SELECT DISTINCT b.technology_id,
                                          b.knowledge_id
                          FROM shangshufang_customer.student_course_exercises a
                                   LEFT JOIN shangshufang_customer.student_course_exercises_detail b
                                             ON a.course_exercises_id = b.course_exercises_id
                          WHERE a.student_id = #{studentID, jdbcType=INTEGER}
                            AND b.technology_id = #{technologyID, jdbcType=INTEGER}
                      ) a
                          LEFT JOIN
                      (
                          SELECT DISTINCT b.technology_id,
                                          b.knowledge_id
                          FROM shangshufang_customer.student_course_exercises a
                                   LEFT JOIN shangshufang_customer.student_course_exercises_detail b
                                             ON a.course_exercises_id = b.course_exercises_id
                          WHERE a.student_id = #{studentID, jdbcType=INTEGER}
                            AND b.technology_id = #{technologyID, jdbcType=INTEGER}
                            AND b.correct_result != 'Y'
                      ) b
                      ON a.technology_id = b.technology_id
                          AND a.knowledge_id = b.knowledge_id
                 WHERE b.knowledge_id IS NULL
             ) b
             ON a.knowledge_id = b.knowledge_id
                 LEFT JOIN
             (
                 SELECT a.knowledge_id
                 FROM (
                          SELECT DISTINCT b.technology_id,
                                          b.knowledge_id
                          FROM shangshufang_customer.student_course_exercises a
                                   LEFT JOIN shangshufang_customer.student_course_exercises_detail b
                                             ON a.course_exercises_id = b.course_exercises_id
                          WHERE a.student_id = #{studentID, jdbcType=INTEGER}
                            AND b.technology_id = #{technologyID, jdbcType=INTEGER}
                            AND (b.correct_result = 'R' OR b.correct_result = 'N')
                      ) a
             ) c
             ON a.knowledge_id = c.knowledge_id
        WHERE b.knowledge_id IS NULL AND c.knowledge_id IS NULL
        LIMIT #{startIndex,jdbcType=INTEGER}, #{pageSize,jdbcType=INTEGER};
    </select>

    <select id="searchChoiceList" resultMap="BaseResultMap">
        -- 取得企业题库中的选择题
        SELECT a.course_exercises_detail_id,
               a.course_exercises_id,
               a.technology_id,
               c.technology_name,
               a.knowledge_id,
               d.knowledge_name,
               a.exercises_id,
               b.exercises_title,
               a.exercises_type,
               a.exercises_source_type,
               b.exercises_source,
               a.correct_result,
               a.corrector,
               a.create_user,
               a.create_time,
               a.update_user,
               a.update_time
        FROM shangshufang_customer.student_course_exercises_detail a
                 LEFT JOIN shangshufang_base.exercise_warehouse_knowledge_choice_question b
                           ON a.exercises_id = b.exercises_id
                               AND a.technology_id = b.technology_id
                               AND a.knowledge_id = b.knowledge_id
                 LEFT JOIN shangshufang_base.technology c
                           ON a.technology_id = c.technology_id
                 LEFT JOIN shangshufang_base.technology_knowledge d
                           ON a.technology_id = d.technology_id
                               AND a.knowledge_id = d.knowledge_id
        WHERE a.exercises_source_type = 0 -- 企业题库
          AND a.exercises_type IN (0, 1)  -- 选择题
          AND a.course_exercises_id = #{courseExercisesID, jdbcType=INTEGER}
        UNION
        -- 取得自定义题库中的选择题
        SELECT a.course_exercises_detail_id,
               a.course_exercises_id,
               a.technology_id,
               c.technology_name,
               a.knowledge_id,
               d.knowledge_name,
               a.exercises_id,
               b.exercises_title,
               a.exercises_type,
               a.exercises_source_type,
               concat(e.university_name, f.school_name, g.full_name) AS exercises_source,
               a.correct_result,
               a.corrector,
               a.create_user,
               a.create_time,
               a.update_user,
               a.update_time
        FROM shangshufang_customer.student_course_exercises_detail a
                 LEFT JOIN shangshufang_customer.university_exercise_knowledge_choice b
                           ON a.technology_id = b.technology_id
                               AND a.knowledge_id = b.knowledge_id
                               AND a.exercises_id = b.exercises_id
                 LEFT JOIN shangshufang_base.technology c
                           ON a.technology_id = c.technology_id
                 LEFT JOIN shangshufang_base.technology_knowledge d
                           ON a.technology_id = d.technology_id
                               AND a.knowledge_id = d.knowledge_id
                 LEFT JOIN shangshufang_customer.university e
                           ON b.university_code = e.university_code
                 LEFT JOIN shangshufang_customer.school f
                           ON b.university_code = f.university_code
                               AND b.school_id = f.school_id
                 LEFT JOIN shangshufang_customer.university_customer g
                           ON b.university_code = e.university_code
                               AND b.school_id = g.school_id
                               AND b.teacher_id = g.customer_id
        WHERE a.exercises_source_type = 1 -- 自定义题库
          AND a.exercises_type IN (0, 1)  -- 选择题
          AND a.course_exercises_id = #{courseExercisesID, jdbcType=INTEGER};
    </select>

    <select id="searchBlankList" resultMap="BaseResultMap">
        -- 取得企业题库中的填空题
        SELECT a.course_exercises_detail_id,
               a.course_exercises_id,
               a.technology_id,
               c.technology_name,
               a.knowledge_id,
               d.knowledge_name,
               a.exercises_id,
               b.exercises_title,
               a.exercises_type,
               a.exercises_source_type,
               b.exercises_source,
               a.correct_result,
               a.corrector,
               a.create_user,
               a.create_time,
               a.update_user,
               a.update_time
        FROM shangshufang_customer.student_course_exercises_detail a
                 LEFT JOIN shangshufang_base.exercise_warehouse_knowledge_blank_question b
                           ON a.exercises_id = b.exercises_id
                               AND a.technology_id = b.technology_id
                               AND a.knowledge_id = b.knowledge_id
                 LEFT JOIN shangshufang_base.technology c
                           ON a.technology_id = c.technology_id
                 LEFT JOIN shangshufang_base.technology_knowledge d
                           ON a.technology_id = d.technology_id
                               AND a.knowledge_id = d.knowledge_id
        WHERE a.exercises_source_type = 0 -- 企业题库
          AND a.exercises_type = 2        -- 填空题
          AND a.course_exercises_id = #{courseExercisesID, jdbcType=INTEGER}
        UNION
        -- 取得自定义题库中的填空题
        SELECT a.course_exercises_detail_id,
               a.course_exercises_id,
               a.technology_id,
               c.technology_name,
               a.knowledge_id,
               d.knowledge_name,
               a.exercises_id,
               b.exercises_title,
               a.exercises_type,
               a.exercises_source_type,
               concat(e.university_name, f.school_name, g.full_name) AS exercises_source,
               a.correct_result,
               a.corrector,
               a.create_user,
               a.create_time,
               a.update_user,
               a.update_time
        FROM shangshufang_customer.student_course_exercises_detail a
                 LEFT JOIN shangshufang_customer.university_exercise_knowledge_blank b
                           ON a.technology_id = b.technology_id
                               AND a.knowledge_id = b.knowledge_id
                               AND a.exercises_id = b.exercises_id
                 LEFT JOIN shangshufang_base.technology c
                           ON a.technology_id = c.technology_id
                 LEFT JOIN shangshufang_base.technology_knowledge d
                           ON a.technology_id = d.technology_id
                               AND a.knowledge_id = d.knowledge_id
                 LEFT JOIN shangshufang_customer.university e
                           ON b.university_code = e.university_code
                 LEFT JOIN shangshufang_customer.school f
                           ON b.university_code = f.university_code
                               AND b.school_id = f.school_id
                 LEFT JOIN shangshufang_customer.university_customer g
                           ON b.university_code = e.university_code
                               AND b.school_id = g.school_id
                               AND b.teacher_id = g.customer_id
        WHERE a.exercises_source_type = 1 -- 自定义题库
          AND a.exercises_type = 2        -- 填空题
          AND a.course_exercises_id = #{courseExercisesID, jdbcType=INTEGER};
    </select>

    <select id="searchProgramList" resultMap="BaseResultMap">
        -- 取得企业题库的编程题
        SELECT a.course_exercises_detail_id,
               a.course_exercises_id,
               a.technology_id,
               c.technology_name,
               a.knowledge_id,
               d.knowledge_name,
               a.exercises_id,
               b.document_url AS exercises_title,
               a.exercises_type,
               a.exercises_source_type,
               ''             AS exercises_source,
               a.correct_result,
               a.corrector,
               a.create_user,
               a.create_time,
               a.update_user,
               a.update_time
        FROM shangshufang_customer.student_course_exercises_detail a
                 LEFT JOIN shangshufang_base.technology_knowledge_exercises b
                           ON a.exercises_id = b.exercises_id
                               AND a.technology_id = b.technology_id
                               AND a.knowledge_id = b.knowledge_id
                 LEFT JOIN shangshufang_base.technology c
                           ON a.technology_id = c.technology_id
                 LEFT JOIN shangshufang_base.technology_knowledge d
                           ON a.technology_id = d.technology_id
                               AND a.knowledge_id = d.knowledge_id
        WHERE a.exercises_source_type = 0 -- 企业题库
          AND a.exercises_type = 3        -- 编程题
          AND a.course_exercises_id = #{courseExercisesID, jdbcType=INTEGER}
        UNION
        -- 取得自定义编程题
        SELECT a.course_exercises_detail_id,
               a.course_exercises_id,
               a.technology_id,
               c.technology_name,
               a.knowledge_id,
               d.knowledge_name,
               a.exercises_id,
               b.exercises_title,
               a.exercises_type,
               a.exercises_source_type,
               concat(e.university_name, f.school_name, g.full_name) AS exercises_source,
               a.correct_result,
               a.corrector,
               a.create_user,
               a.create_time,
               a.update_user,
               a.update_time
        FROM shangshufang_customer.student_course_exercises_detail a
                 LEFT JOIN shangshufang_customer.university_exercise_knowledge_program b
                           ON a.technology_id = b.technology_id
                               AND a.knowledge_id = b.knowledge_id
                               AND a.exercises_id = b.exercises_id
                 LEFT JOIN shangshufang_base.technology c
                           ON a.technology_id = c.technology_id
                 LEFT JOIN shangshufang_base.technology_knowledge d
                           ON a.technology_id = d.technology_id
                               AND a.knowledge_id = d.knowledge_id
                 LEFT JOIN shangshufang_customer.university e
                           ON b.university_code = e.university_code
                 LEFT JOIN shangshufang_customer.school f
                           ON b.university_code = f.university_code
                               AND b.school_id = f.school_id
                 LEFT JOIN shangshufang_customer.university_customer g
                           ON b.university_code = e.university_code
                               AND b.school_id = g.school_id
                               AND b.teacher_id = g.customer_id
        WHERE a.exercises_source_type = 1 -- 自定义题库
          AND a.exercises_type = 3        -- 编程题
          AND a.course_exercises_id = #{courseExercisesID, jdbcType=INTEGER};
    </select>

    <insert id="insert" parameterType="com.shangshufang.apiservice.entity.StudentCourseExercisesDetailEntity">
        INSERT INTO shangshufang_customer.student_course_exercises_detail (course_exercises_id,
                                                                           technology_id,
                                                                           knowledge_id,
                                                                           exercises_id,
                                                                           exercises_type,
                                                                           exercises_source_type,
                                                                           create_user,
                                                                           update_user)
        VALUES (#{courseExercisesID, jdbcType=INTEGER},
                #{technologyID, jdbcType=INTEGER},
                #{knowledgeID, jdbcType=INTEGER},
                #{exercisesID, jdbcType=INTEGER},
                #{exercisesType, jdbcType=INTEGER},
                #{exercisesSourceType, jdbcType=INTEGER},
                #{createUser, jdbcType=VARCHAR},
                #{updateUser, jdbcType=VARCHAR})
    </insert>

    <update id="updateDataStatus" parameterType="com.shangshufang.apiservice.entity.StudentCourseExercisesDetailEntity">
        UPDATE shangshufang_customer.student_course_exercises_detail
        SET correct_result = #{correctResult,jdbcType=VARCHAR},
            update_user    = #{updateUser,jdbcType=VARCHAR}
        WHERE course_exercises_detail_id = #{courseExercisesDetailID,jdbcType=INTEGER};
    </update>

</mapper>