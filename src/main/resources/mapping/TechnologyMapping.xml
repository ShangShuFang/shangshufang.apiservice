<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.shangshufang.apiservice.mapper.TechnologyMapper" >
  <resultMap id="BaseResultMap" type="com.shangshufang.apiservice.entity.TechnologyEntity" >
    <id column="technology_id" property="technologyID" jdbcType="INTEGER" />
    <result column="language_id" property="languageID" jdbcType="INTEGER" />
    <result column="language_name" property="languageName" jdbcType="VARCHAR" />
    <result column="direction_id" property="directionID" jdbcType="INTEGER" />
    <result column="direction_name" property="directionName" jdbcType="VARCHAR" />
    <result column="category_id" property="categoryID" jdbcType="INTEGER" />
    <result column="category_name" property="categoryName" jdbcType="VARCHAR" />
    <result column="technology_name" property="technologyName" jdbcType="VARCHAR" />
    <result column="technology_stars" property="technologyStars" jdbcType="INTEGER" />
    <result column="technology_thumbnail_square" property="technologyThumbnailSquare" jdbcType="VARCHAR" />
    <result column="technology_thumbnail_rectangle" property="technologyThumbnailRectangle" jdbcType="VARCHAR" />
    <result column="technology_memo" property="technologyMemo" jdbcType="VARCHAR" />
    <result column="difficulty_level" property="difficultyLevel" jdbcType="VARCHAR" />
    <result column="difficulty_level_text" property="difficultyLevelText" jdbcType="VARCHAR" />
    <result column="knowledge_count" property="knowledgeCount" jdbcType="INTEGER" />
    <result column="using_company_count" property="usingCompanyCount" jdbcType="INTEGER" />
    <result column="data_status" property="dataStatus" jdbcType="VARCHAR" />
    <result column="data_status_text" property="dataStatusText" jdbcType="VARCHAR" />
    <result column="create_user" property="createUser" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_user" property="updateUser" jdbcType="INTEGER" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <select id="searchTotalCount" resultType="java.lang.Integer">
    SELECT
    COUNT(1) AS TotalCount
    FROM shangshufang_base.technology
    WHERE 1 = 1
    <if test="arg0 != 0">
      AND direction_id = #{arg0,jdbcType=INTEGER}
    </if>
    <if test="arg1 != 0">
      AND category_id = #{arg1,jdbcType=INTEGER}
    </if>
    <if test="arg2 != null">
      AND data_status = #{arg2,jdbcType=VARCHAR}
    </if>;
  </select>
  <select id="searchList" resultMap="BaseResultMap">
    SELECT
      A.technology_id,
      A.technology_name,
      A.technology_stars,
      A.technology_thumbnail_square,
      A.technology_thumbnail_rectangle,
      A.technology_memo,
      A.language_id,
      E.language_name,
      A.direction_id,
      F.direction_name,
      A.category_id,
      G.technology_category_name AS category_name,
      A.difficulty_level,
      CASE WHEN A.difficulty_level = 'J' THEN '初级'
          WHEN A.difficulty_level = 'M' THEN '中级'
          WHEN A.difficulty_level = 'S' THEN '高级'
      ELSE '未知数据状态'
      END AS difficulty_level_text,
      D.knowledge_count,
      A.data_status,
      CASE WHEN A.data_status = 'P' THEN '未激活'
          WHEN A.data_status = 'A' THEN '正常'
          WHEN A.data_status = 'D' THEN '禁用'
      ELSE '未知数据状态'
      END AS data_status_text,
      B.admin_name AS create_user,
      DATE_FORMAT(A.create_time, '%Y-%m-%d %H:%i:%s') AS create_time,
      C.admin_name AS update_user,
      DATE_FORMAT(A.update_time, '%Y-%m-%d %H:%i:%s') AS update_time
    FROM shangshufang_base.technology A
    INNER JOIN shangshufang_base.system_admin B
    ON A.create_user = B.admin_id
    INNER JOIN shangshufang_base.system_admin C
    ON A.update_user = C.admin_id
    LEFT JOIN
    (
      SELECT
        technology_id,
        COUNT(1) AS knowledge_count
      FROM shangshufang_base.technology_knowledge
      WHERE data_status = 'A'
      GROUP BY technology_id
    ) D
    ON A.technology_id = D.technology_id
    INNER JOIN shangshufang_base.programming_language E
    ON A.language_id = E.language_id
    LEFT JOIN shangshufang_base.direction F
    ON A.direction_id = F.direction_id
    LEFT JOIN shangshufang_base.technology_category G
    ON a.category_id = G.technology_category_id
    WHERE 1 = 1
    <if test="arg2 != 0">
      AND A.direction_id = #{arg2,jdbcType=INTEGER}
    </if>
    <if test="arg3 != 0">
      AND A.category_id = #{arg3,jdbcType=INTEGER}
    </if>
    <if test="arg4 != null">
      AND A.data_status = #{arg4,jdbcType=VARCHAR}
    </if>
    ORDER BY A.create_time DESC
    LIMIT #{arg0,jdbcType=INTEGER}, #{arg1,jdbcType=INTEGER};
  </select>

  <select id="searchSimpleList" resultMap="BaseResultMap">
    SELECT  technology_id,
            technology_name,
            technology_stars,
            technology_thumbnail_square,
            technology_thumbnail_rectangle,
            technology_memo,
            language_id
    FROM shangshufang_base.technology
    WHERE 1 = 1
    <if test="arg0 != 0">
      AND direction_id = #{arg0,jdbcType=INTEGER}
    </if>
    <if test="arg1 != 0">
      AND category_id = #{arg1,jdbcType=INTEGER}
    </if>
    <if test="arg2 != null">
      AND data_status = #{arg2,jdbcType=VARCHAR}
    </if>
    ORDER BY direction_id, category_id, update_time DESC;
  </select>

  <select id="searchList4Client" resultMap="BaseResultMap">
    SELECT
      A.technology_id,
      A.technology_name,
      A.technology_stars,
      A.technology_thumbnail_square,
      A.technology_thumbnail_rectangle,
      A.technology_memo,
      A.language_id,
      A.direction_id,
      C.direction_name,
      A.category_id,
      D.technology_category_name AS category_name,
      A.difficulty_level,
      CASE WHEN A.difficulty_level = 'J' THEN '初级'
      WHEN A.difficulty_level = 'M' THEN '中级'
      WHEN A.difficulty_level = 'S' THEN '高级'
      ELSE '未知数据状态'
      END AS difficulty_level_text,
      B.knowledge_count,
      E.using_company_count,
      F.language_name
    FROM shangshufang_base.technology A
    LEFT JOIN
    (
      SELECT
        technology_id,
        COUNT(1) AS knowledge_count
      FROM shangshufang_base.technology_knowledge
      WHERE data_status = 'A'
      GROUP BY technology_id
    ) B
    ON A.technology_id = B.technology_id
    LEFT JOIN shangshufang_base.direction C
    ON A.direction_id = C.direction_id
    LEFT JOIN shangshufang_base.technology_category D
    ON A.category_id = D.technology_category_id
    LEFT JOIN
    (
      SELECT
        technology_id,
        COUNT(1) AS using_company_count
      FROM shangshufang_customer.technology_using A
      INNER JOIN shangshufang_customer.company B
      ON A.company_id = B.company_id
      AND B.data_status = 'A'
    GROUP BY technology_id
    ) E
    ON A.technology_id = E.technology_id
    INNER JOIN shangshufang_base.programming_language F
    ON A.language_id = F.language_id
    WHERE 1 = 1
    <if test="arg2 != 0">
      AND A.direction_id = #{arg2,jdbcType=INTEGER}
    </if>
    <if test="arg3 != 0">
      AND A.category_id = #{arg3,jdbcType=INTEGER}
    </if>
    <if test="arg4 != null">
      AND A.data_status = #{arg4,jdbcType=VARCHAR}
    </if>
    ORDER BY A.technology_stars DESC
    LIMIT #{arg0,jdbcType=INTEGER}, #{arg1,jdbcType=INTEGER};
  </select>

  <select id="searchByID" resultMap="BaseResultMap">
    SELECT
      A.technology_id,
      A.technology_name,
      A.technology_stars,
      A.technology_thumbnail_square,
      A.technology_thumbnail_rectangle,
      A.technology_memo,
      D.knowledge_count,
      A.direction_id,
      E.direction_name,
      A.category_id,
      A.difficulty_level,
      CASE WHEN A.difficulty_level = 'J' THEN '初级'
           WHEN A.difficulty_level = 'M' THEN '中级'
           WHEN A.difficulty_level = 'S' THEN '高级'
           ELSE '未知数据状态'
      END AS difficulty_level_text,
      F.technology_category_name AS category_name,
      G.using_company_count,
      A.data_status,
      CASE WHEN A.data_status = 'P' THEN '未激活'
          WHEN A.data_status = 'A' THEN '正常'
          WHEN A.data_status = 'D' THEN '禁用'
      ELSE '未知数据状态'
      END AS data_status_text,
      B.admin_name AS create_user,
      DATE_FORMAT(A.create_time, '%Y-%m-%d %H:%i:%s') AS create_time,
      C.admin_name AS update_user,
      DATE_FORMAT(A.update_time, '%Y-%m-%d %H:%i:%s') AS update_time
    FROM shangshufang_base.technology A
    INNER JOIN shangshufang_base.system_admin B
    ON A.create_user = B.admin_id
    INNER JOIN shangshufang_base.system_admin C
    ON A.update_user = C.admin_id
    LEFT JOIN
    (
    SELECT
      technology_id,
      COUNT(1) AS knowledge_count
    FROM shangshufang_base.technology_knowledge
    WHERE data_status = 'A'
    GROUP BY technology_id
    ) D
    ON A.technology_id = D.technology_id
    LEFT JOIN shangshufang_base.direction E
              ON A.direction_id = E.direction_id
    LEFT JOIN shangshufang_base.technology_category F
              ON a.category_id = F.technology_category_id
    LEFT JOIN
         (
           SELECT
             technology_id,
             COUNT(1) AS using_company_count
           FROM shangshufang_customer.technology_using A
                  INNER JOIN shangshufang_customer.company B
                             ON A.company_id = B.company_id
                               AND B.data_status = 'A'
           GROUP BY technology_id
         ) G
         ON A.technology_id = G.technology_id
    WHERE A.technology_id = #{arg0,jdbcType=INTEGER};
  </select>

  <select id="searchSimple" resultMap="BaseResultMap">
    SELECT technology_id,
           technology_name,
           technology_stars,
           technology_thumbnail_square,
           technology_thumbnail_rectangle,
           technology_memo,
           language_id,
           direction_id,
           category_id,
           difficulty_level,
           data_status,
           create_time,
           create_user,
           update_user,
           update_time
    FROM shangshufang_base.technology
    WHERE technology_id = #{technologyID,jdbcType=INTEGER}
      AND data_status = 'A';
  </select>

  <select id="searchStudentLearning" resultMap="BaseResultMap">
    SELECT A.technology_id,
           B.technology_name,
           B.technology_thumbnail_square,
           B.technology_thumbnail_rectangle
    FROM
    (
        SELECT DISTINCT technology_id
        FROM shangshufang_customer.university_student_exercises
        WHERE student_university_code = #{arg0,jdbcType=INTEGER}
          AND student_school_id = #{arg1,jdbcType=INTEGER}
          AND student_id = #{arg2,jdbcType=INTEGER}
    ) A
    INNER JOIN shangshufang_base.technology B
    ON A.technology_id = B.technology_id;
  </select>

  <select id="checkTechnologyNameExist" resultType="java.lang.Integer">
    SELECT
      COUNT(1) AS TotalCount
    FROM shangshufang_base.technology
    WHERE technology_name = #{arg0,jdbcType=VARCHAR};
  </select>

  <insert id="insert" useGeneratedKeys="true" keyProperty="technologyID" parameterType="com.shangshufang.apiservice.entity.TechnologyEntity" >
    INSERT INTO shangshufang_base.technology (
      language_id,
      technology_name,
      technology_stars,
      direction_id,
      category_id,
      difficulty_level,
      technology_memo,
      create_user,
      update_user
    )
    VALUES (
      #{languageID, jdbcType=INTEGER},
      #{technologyName, jdbcType=VARCHAR},
      #{technologyStars, jdbcType=INTEGER},
      #{directionID, jdbcType=INTEGER},
      #{categoryID, jdbcType=INTEGER},
      #{difficultyLevel, jdbcType=VARCHAR},
      #{technologyMemo, jdbcType=VARCHAR},
      #{createUser, jdbcType=VARCHAR},
      #{updateUser, jdbcType=VARCHAR}
    )
  </insert>

  <update id="update" parameterType="com.shangshufang.apiservice.entity.TechnologyEntity" >
    UPDATE shangshufang_base.technology SET
      technology_name = #{technologyName,jdbcType=VARCHAR},
      technology_stars = #{technologyStars,jdbcType=INTEGER},
      direction_id = #{directionID,jdbcType=INTEGER},
      category_id = #{categoryID,jdbcType=INTEGER},
      difficulty_level = #{difficultyLevel,jdbcType=INTEGER},
      technology_memo = #{technologyMemo,jdbcType=VARCHAR},
      update_user = #{updateUser,jdbcType=VARCHAR}
    WHERE technology_id = #{technologyID,jdbcType=INTEGER};
  </update>

  <update id="updateDataStatus" parameterType="com.shangshufang.apiservice.entity.TechnologyEntity" >
    UPDATE shangshufang_base.technology SET
      data_status = #{dataStatus,jdbcType=VARCHAR},
      update_user = #{updateUser,jdbcType=VARCHAR}
    WHERE technology_id = #{technologyID,jdbcType=INTEGER};
  </update>

  <update id="updateThumbnail" parameterType="com.shangshufang.apiservice.entity.TechnologyEntity" >
    UPDATE shangshufang_base.technology
    SET technology_thumbnail_square = #{technologyThumbnailSquare,jdbcType=VARCHAR},
        technology_thumbnail_rectangle = #{technologyThumbnailRectangle,jdbcType=VARCHAR},
        update_user = #{updateUser,jdbcType=VARCHAR}
    WHERE technology_id = #{technologyID,jdbcType=INTEGER};
  </update>

  <delete id="delete" parameterType="java.lang.Integer" >
    DELETE FROM shangshufang_base.technology
    WHERE technology_id = #{technologyID,jdbcType=INTEGER};
  </delete>
</mapper>