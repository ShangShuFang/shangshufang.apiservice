<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.shangshufang.apiservice.mapper.ExercisesMapper" >
  <resultMap id="SingleResultMap" type="com.shangshufang.apiservice.entity.ExercisesSingleEntity" >
    <id column="exercises_id" property="exercisesID" jdbcType="INTEGER" />
    <result column="exercises_name" property="exercisesName" jdbcType="VARCHAR" />
    <result column="exercises_code" property="exercisesCode" jdbcType="VARCHAR" />
    <result column="exercises_type" property="exercisesType" jdbcType="VARCHAR" />
    <result column="technology_id" property="technologyID" jdbcType="INTEGER" />
    <result column="technology_name" property="technologyName" jdbcType="VARCHAR" />
    <result column="learning_phase_id" property="learningPhaseID" jdbcType="INTEGER" />
    <result column="learning_phase_name" property="learningPhaseName" jdbcType="VARCHAR" />
    <result column="knowledge_id" property="knowledgeID" jdbcType="INTEGER" />
    <result column="knowledge_name" property="knowledgeName" jdbcType="VARCHAR" />
    <result column="data_status" property="dataStatus" jdbcType="VARCHAR" />
    <result column="data_status_text" property="dataStatusText" jdbcType="VARCHAR" />
    <result column="create_user" property="createUser" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_user" property="updateUser" jdbcType="INTEGER" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <resultMap id="CourseResultMap" type="com.shangshufang.apiservice.entity.CourseExercisesEntity" >
    <id column="course_class" property="courseClass" jdbcType="INTEGER" />
    <result column="exercises_id" property="exercisesID" jdbcType="INTEGER" />
    <result column="exercises_name" property="exercisesName" jdbcType="VARCHAR" />
    <result column="exercises_code" property="exercisesCode" jdbcType="VARCHAR" />
    <result column="exercises_type" property="exercisesType" jdbcType="VARCHAR" />
    <result column="technology_id" property="technologyID" jdbcType="INTEGER" />
    <result column="technology_name" property="technologyName" jdbcType="VARCHAR" />
    <result column="learning_phase_id" property="learningPhaseID" jdbcType="INTEGER" />
    <result column="learning_phase_name" property="learningPhaseName" jdbcType="VARCHAR" />
    <result column="knowledge_id" property="knowledgeID" jdbcType="INTEGER" />
    <result column="knowledge_name" property="knowledgeName" jdbcType="VARCHAR" />
    <result column="data_status" property="dataStatus" jdbcType="VARCHAR" />
    <result column="data_status_text" property="dataStatusText" jdbcType="VARCHAR" />
    <result column="create_user" property="createUser" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_user" property="updateUser" jdbcType="INTEGER" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <select id="searchSingleTotalCount" resultType="java.lang.Integer">
    SELECT
    COUNT(1) AS total_count
    FROM
    (
      SELECT exercises_id
      FROM shangshufang_base.exercises1
      WHERE exercises_type = 'S'
    ) A
    INNER JOIN
    (
      SELECT DISTINCT exercises_id
      FROM shangshufang_base.exercises_knowledge1
      WHERE exercises_type = 'S'
      <if test="arg0 != 0">
        AND technology_id = #{arg0,jdbcType=INTEGER}
      </if>
      <if test="arg1 != 0">
        AND learning_phase_id = #{arg1,jdbcType=INTEGER}
      </if>
    ) B
    ON A.exercises_id = B.exercises_id;
  </select>
  <select id="searchSingleList" resultMap="SingleResultMap">
    SELECT
      A.exercises_id,
      A.exercises_name,
      A.exercises_code,
      A.exercises_type,
      A.data_status,
      CASE WHEN A.data_status = 'P' THEN '待审批'
          WHEN A.data_status = 'A' THEN '正常'
          WHEN A.data_status = 'D' THEN '冻结'
          ELSE '未知数据状态'
      END AS data_status_text,
      B.technology_id,
      B.technology_name,
      B.learning_phase_id,
      B.learning_phase_name,
      B.knowledge_id,
      B.knowledge_name,
      C.admin_name AS create_user,
      DATE_FORMAT(A.create_time, '%Y-%m-%d %H:%i:%s') AS create_time,
      D.admin_name AS update_user,
      DATE_FORMAT(A.update_time, '%Y-%m-%d %H:%i:%s') AS update_time
    FROM
    (
      SELECT
        exercises_id,
        exercises_name,
        exercises_code,
        exercises_type,
        data_status,
        create_user,
        create_time,
        update_user,
        update_time
      FROM shangshufang_base.exercises1
      WHERE exercises_type = 'S'
    ) A
    INNER JOIN
    (
      SELECT
        N1.exercises_id,
        N1.technology_id,
        N2.technology_name,
        N1.learning_phase_id,
        N3.learning_phase_name,
        N1.knowledge_id,
        N4.knowledge_name
      FROM shangshufang_base.exercises_knowledge1 N1
      INNER JOIN shangshufang_base.technology N2
      ON N1.technology_id = N2.technology_id
      INNER JOIN shangshufang_base.learning_phase N3
      ON N1.learning_phase_id = N3.learning_phase_id
      INNER JOIN shangshufang_base.technology_knowledge N4
      ON N1.technology_id = N4.technology_id
      AND N1.learning_phase_id = N4.learning_phase_id
      AND N1.knowledge_id = N4.knowledge_id
      AND N4.data_status = 'A'
      WHERE exercises_type = 'S'
      <if test="arg2 != 0">
        AND N1.technology_id = #{arg2,jdbcType=INTEGER}
      </if>
      <if test="arg3 != 0">
        AND N1.learning_phase_id = #{arg3,jdbcType=INTEGER}
      </if>
    ) B
    ON A.exercises_id = B.exercises_id
    INNER JOIN shangshufang_base.system_admin C
    ON A.create_user = C.admin_id
    INNER JOIN shangshufang_base.system_admin D
    ON A.update_user = D.admin_id
    ORDER BY A.update_time DESC
    LIMIT #{arg0,jdbcType=INTEGER}, #{arg1,jdbcType=INTEGER};
  </select>

  <select id="searchCourseExercisesList" resultMap="CourseResultMap">
    SELECT
      A.course_class,
      A.technology_id,
      B.technology_name,
      A.learning_phase_id,
      C.learning_phase_name,
      A.knowledge_id,
      D.knowledge_name,
      E.exercises_id,
      F.exercises_name,
      F.exercises_code,
      F.exercises_type,
      A.data_status
    FROM shangshufang_customer.course_plan A
    INNER JOIN shangshufang_base.technology B
      ON A.technology_id = B.technology_id
    INNER JOIN shangshufang_base.learning_phase C
      ON A.learning_phase_id = C.learning_phase_id
    INNER JOIN shangshufang_base.technology_knowledge D
      ON A.technology_id = D.technology_id
      AND A.learning_phase_id = D.learning_phase_id
      AND A.knowledge_id = D.knowledge_id
      AND D.data_status = 'A'
    LEFT JOIN shangshufang_base.exercises_knowledge1 E
      ON A.technology_id = E.technology_id
      AND A.learning_phase_id = E.learning_phase_id
      AND A.knowledge_id = E.knowledge_id
      AND E.exercises_type = 'S'
    LEFT JOIN shangshufang_base.exercises1 F
      ON E.exercises_id = F.exercises_id
      AND F.data_status = 'A'
    WHERE A.university_code = #{arg0,jdbcType=INTEGER}
      AND A.school_id = #{arg1,jdbcType=INTEGER}
      AND A.course_id = #{arg2,jdbcType=INTEGER}
    ORDER BY A.course_class;
  </select>

  <select id="searchClassExercisesList" resultMap="CourseResultMap">
    SELECT
      A.course_class,
      A.technology_id,
      B.technology_name,
      A.learning_phase_id,
      C.learning_phase_name,
      A.knowledge_id,
      D.knowledge_name,
      E.exercises_id,
      F.exercises_name,
      F.exercises_code,
      F.exercises_type,
      A.data_status
    FROM shangshufang_customer.course_plan A
    INNER JOIN shangshufang_base.technology B
      ON A.technology_id = B.technology_id
    INNER JOIN shangshufang_base.learning_phase C
      ON A.learning_phase_id = C.learning_phase_id
    INNER JOIN shangshufang_base.technology_knowledge D
      ON A.technology_id = D.technology_id
      AND A.learning_phase_id = D.learning_phase_id
      AND A.knowledge_id = D.knowledge_id
      AND D.data_status = 'A'
    LEFT JOIN shangshufang_base.exercises_knowledge1 E
      ON A.technology_id = E.technology_id
      AND A.learning_phase_id = E.learning_phase_id
      AND A.knowledge_id = E.knowledge_id
      AND E.exercises_type = 'S'
    LEFT JOIN shangshufang_base.exercises1 F
      ON E.exercises_id = F.exercises_id
      AND F.data_status = 'A'
    WHERE A.university_code = #{arg0,jdbcType=INTEGER}
      AND A.school_id = #{arg1,jdbcType=INTEGER}
      AND A.course_id = #{arg2,jdbcType=INTEGER}
      AND A.course_class = #{arg3,jdbcType=INTEGER};
  </select>

  <select id="search" resultMap="SingleResultMap">
    SELECT
      exercises_id,
      exercises_name,
      exercises_code,
      exercises_type
    FROM shangshufang_base.exercises1
    WHERE exercises_id = #{arg0,jdbcType=INTEGER};
  </select>
  <select id="checkExercisesCodeExist" resultType="java.lang.Integer">
    SELECT
      COUNT(1) AS TotalCount
    FROM shangshufang_base.exercises1
    WHERE exercises_code = #{arg0,jdbcType=VARCHAR};
  </select>
  <insert id="insert" useGeneratedKeys="true" keyProperty="exercisesID" parameterType="com.shangshufang.apiservice.entity.ExercisesSingleEntity" >
    INSERT INTO shangshufang_base.exercises1 (
      exercises_name,
      exercises_code,
      exercises_type,
      create_user,
      update_user
    )
    VALUES (
      #{exercisesName, jdbcType=VARCHAR},
      #{exercisesCode, jdbcType=VARCHAR},
      #{exercisesType, jdbcType=VARCHAR},
      #{createUser, jdbcType=VARCHAR},
      #{updateUser, jdbcType=VARCHAR}
    )
  </insert>
  <update id="update" parameterType="com.shangshufang.apiservice.entity.ExercisesSingleEntity" >
    UPDATE shangshufang_base.exercises1 SET
      exercises_name = #{exercisesName,jdbcType=VARCHAR},
      update_user = #{updateUser,jdbcType=VARCHAR}
    WHERE exercises_id = #{exercisesID,jdbcType=VARCHAR};
  </update>
  <update id="updateDataStatus" parameterType="com.shangshufang.apiservice.entity.ExercisesSingleEntity" >
    UPDATE shangshufang_base.exercises1 SET
      data_status = #{dataStatus,jdbcType=VARCHAR},
      update_user = #{updateUser,jdbcType=INTEGER}
    WHERE exercises_id = #{exercisesID,jdbcType=INTEGER};
  </update>
  <delete id="delete" parameterType="java.lang.Integer" >
    DELETE FROM shangshufang_base.exercises1
    WHERE exercises_id = #{arg0,jdbcType=INTEGER};
  </delete>
</mapper>