[2020-06-06 22:22:46,421][http-nio-8081-exec-5][ERROR][com.shangshufang.apiservice.service.impl.UniversityStudentExercisesServiceImpl:101] org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-20, 10' at line 128
### The error may exist in file [/Users/zhangqiang/Documents/04-Project/ShangShuFang/SourceCode/shangshufang.apiservice/target/classes/mapping/UniversityStudentExercisesMapping.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT       A.student_exercises_id,       A.student_university_code,       B.university_name AS student_university_name,       A.student_school_id,       C.school_name AS student_school_name,       A.student_id,       F.full_name AS student_name,       F.photo AS student_photo,       F.cellphone,       F.enrollment_year,       N.ability_level,       N.position_site,       A.course_university_code,       D.university_name AS course_university_name,       A.course_school_id,       E.school_name AS course_school_name,       A.course_id,       G.course_name,       A.course_class,       A.technology_id,       I.technology_name,       A.learning_phase_id,       J.learning_phase_name,       A.knowledge_id,       K.knowledge_name,       A.exercises_document_id,       H.document_url AS exercises_document_url,       H.answer_url AS exercises_answer_url,       A.source_code_git_url,       A.data_status,       CASE WHEN A.data_status = 'P' THEN '未练习'       WHEN A.data_status = 'W' THEN '待批改'       WHEN A.data_status = 'R' THEN '待修改'       WHEN A.data_status = 'S' THEN '已通过'       ELSE '未知数据状态'       END AS data_status_text,       M.reviewer_id,       M.reviewer_name_teacher,       M.reviewer_name_student,       M.reviewer_type,       DATE_FORMAT(M.update_time, '%Y-%m-%d %H:%i:%s') AS review_time,       DATE_FORMAT(A.create_time, '%Y-%m-%d %H:%i:%s') AS create_time,       DATE_FORMAT(A.update_time, '%Y-%m-%d %H:%i:%s') AS update_time     FROM shangshufang_customer.university_student_exercises A     INNER JOIN shangshufang_customer.university B     ON A.student_university_code = B.university_code     INNER JOIN shangshufang_customer.school C     ON A.student_university_code = C.university_code     AND A.student_school_id = C.school_id     INNER JOIN shangshufang_customer.university D     ON A.course_university_code = D.university_code     INNER JOIN shangshufang_customer.school E     ON A.course_university_code = E.university_code     AND A.course_school_id = E.school_id     INNER JOIN shangshufang_customer.university_student F     ON A.student_id = F.student_id     INNER JOIN shangshufang_customer.course G     ON A.course_university_code = G.university_code     AND A.course_school_id = G.school_id     AND A.course_id = G.course_id     INNER JOIN shangshufang_base.technology_knowledge_exercises H     ON A.technology_id = H.technology_id     AND A.knowledge_id = H.knowledge_id     AND A.exercises_document_id = H.exercises_id     INNER JOIN shangshufang_base.technology I     ON A.technology_id = I.technology_id     INNER JOIN shangshufang_base.learning_phase J     ON A.learning_phase_id = J.learning_phase_id     INNER JOIN shangshufang_base.technology_knowledge K     ON A.technology_id = K.technology_id     AND A.learning_phase_id = K.learning_phase_id     AND A.knowledge_id = K.knowledge_id     AND K.data_status = 'A'     LEFT JOIN     (     SELECT     C.student_exercises_id,     C.reviewer_id,     C.reviewer_type,     D.full_name AS reviewer_name_teacher,     E.full_name AS reviewer_name_student,     C.update_time     FROM     (     SELECT     A.review_id,     A.student_exercises_id,     A.update_time,     B.reviewer_id,     B.reviewer_university_code,     B.reviewer_school_id,     B.reviewer_type     FROM     (     SELECT     student_exercises_id,     MAX(review_id) AS review_id,     MAX(update_time) AS update_time     FROM shangshufang_customer.university_student_exercises_review     GROUP BY student_exercises_id     ) A     INNER JOIN shangshufang_customer.university_student_exercises_review B     ON A.review_id = B.review_id     AND A.student_exercises_id = B.student_exercises_id     ) C     LEFT JOIN shangshufang_customer.university_customer D     ON C.reviewer_university_code = D.university_code     AND C.reviewer_school_id = D.school_id     AND C.reviewer_id = D.customer_id     AND C.reviewer_type = 'T'     LEFT JOIN shangshufang_customer.university_student E     ON C.reviewer_university_code = E.university_code     AND C.reviewer_school_id = E.school_id     AND C.reviewer_id = E.student_id     AND C.reviewer_type = 'S'     ) M     ON A.student_exercises_id = M.student_exercises_id     INNER JOIN shangshufang_customer.university_student_ability_analysis N     ON A.student_id = N.student_id     WHERE a.technology_id = ?     AND a.student_university_code = ?     AND a.student_school_id = ?     AND a.student_id = ?            ORDER BY A.course_class, A.knowledge_id, A.exercises_document_id, A.update_time DESC     LIMIT ?, ?;
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-20, 10' at line 128
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-20, 10' at line 128
[2020-06-06 22:22:46,421][http-nio-8081-exec-6][ERROR][com.shangshufang.apiservice.service.impl.UniversityStudentExercisesServiceImpl:101] org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-10, 10' at line 128
### The error may exist in file [/Users/zhangqiang/Documents/04-Project/ShangShuFang/SourceCode/shangshufang.apiservice/target/classes/mapping/UniversityStudentExercisesMapping.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT       A.student_exercises_id,       A.student_university_code,       B.university_name AS student_university_name,       A.student_school_id,       C.school_name AS student_school_name,       A.student_id,       F.full_name AS student_name,       F.photo AS student_photo,       F.cellphone,       F.enrollment_year,       N.ability_level,       N.position_site,       A.course_university_code,       D.university_name AS course_university_name,       A.course_school_id,       E.school_name AS course_school_name,       A.course_id,       G.course_name,       A.course_class,       A.technology_id,       I.technology_name,       A.learning_phase_id,       J.learning_phase_name,       A.knowledge_id,       K.knowledge_name,       A.exercises_document_id,       H.document_url AS exercises_document_url,       H.answer_url AS exercises_answer_url,       A.source_code_git_url,       A.data_status,       CASE WHEN A.data_status = 'P' THEN '未练习'       WHEN A.data_status = 'W' THEN '待批改'       WHEN A.data_status = 'R' THEN '待修改'       WHEN A.data_status = 'S' THEN '已通过'       ELSE '未知数据状态'       END AS data_status_text,       M.reviewer_id,       M.reviewer_name_teacher,       M.reviewer_name_student,       M.reviewer_type,       DATE_FORMAT(M.update_time, '%Y-%m-%d %H:%i:%s') AS review_time,       DATE_FORMAT(A.create_time, '%Y-%m-%d %H:%i:%s') AS create_time,       DATE_FORMAT(A.update_time, '%Y-%m-%d %H:%i:%s') AS update_time     FROM shangshufang_customer.university_student_exercises A     INNER JOIN shangshufang_customer.university B     ON A.student_university_code = B.university_code     INNER JOIN shangshufang_customer.school C     ON A.student_university_code = C.university_code     AND A.student_school_id = C.school_id     INNER JOIN shangshufang_customer.university D     ON A.course_university_code = D.university_code     INNER JOIN shangshufang_customer.school E     ON A.course_university_code = E.university_code     AND A.course_school_id = E.school_id     INNER JOIN shangshufang_customer.university_student F     ON A.student_id = F.student_id     INNER JOIN shangshufang_customer.course G     ON A.course_university_code = G.university_code     AND A.course_school_id = G.school_id     AND A.course_id = G.course_id     INNER JOIN shangshufang_base.technology_knowledge_exercises H     ON A.technology_id = H.technology_id     AND A.knowledge_id = H.knowledge_id     AND A.exercises_document_id = H.exercises_id     INNER JOIN shangshufang_base.technology I     ON A.technology_id = I.technology_id     INNER JOIN shangshufang_base.learning_phase J     ON A.learning_phase_id = J.learning_phase_id     INNER JOIN shangshufang_base.technology_knowledge K     ON A.technology_id = K.technology_id     AND A.learning_phase_id = K.learning_phase_id     AND A.knowledge_id = K.knowledge_id     AND K.data_status = 'A'     LEFT JOIN     (     SELECT     C.student_exercises_id,     C.reviewer_id,     C.reviewer_type,     D.full_name AS reviewer_name_teacher,     E.full_name AS reviewer_name_student,     C.update_time     FROM     (     SELECT     A.review_id,     A.student_exercises_id,     A.update_time,     B.reviewer_id,     B.reviewer_university_code,     B.reviewer_school_id,     B.reviewer_type     FROM     (     SELECT     student_exercises_id,     MAX(review_id) AS review_id,     MAX(update_time) AS update_time     FROM shangshufang_customer.university_student_exercises_review     GROUP BY student_exercises_id     ) A     INNER JOIN shangshufang_customer.university_student_exercises_review B     ON A.review_id = B.review_id     AND A.student_exercises_id = B.student_exercises_id     ) C     LEFT JOIN shangshufang_customer.university_customer D     ON C.reviewer_university_code = D.university_code     AND C.reviewer_school_id = D.school_id     AND C.reviewer_id = D.customer_id     AND C.reviewer_type = 'T'     LEFT JOIN shangshufang_customer.university_student E     ON C.reviewer_university_code = E.university_code     AND C.reviewer_school_id = E.school_id     AND C.reviewer_id = E.student_id     AND C.reviewer_type = 'S'     ) M     ON A.student_exercises_id = M.student_exercises_id     INNER JOIN shangshufang_customer.university_student_ability_analysis N     ON A.student_id = N.student_id     WHERE a.technology_id = ?     AND a.student_university_code = ?     AND a.student_school_id = ?     AND a.student_id = ?            ORDER BY A.course_class, A.knowledge_id, A.exercises_document_id, A.update_time DESC     LIMIT ?, ?;
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-10, 10' at line 128
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-10, 10' at line 128
[2020-06-06 22:22:57,863][http-nio-8081-exec-3][ERROR][com.shangshufang.apiservice.service.impl.UniversityStudentExercisesServiceImpl:101] org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-30, 10' at line 128
### The error may exist in file [/Users/zhangqiang/Documents/04-Project/ShangShuFang/SourceCode/shangshufang.apiservice/target/classes/mapping/UniversityStudentExercisesMapping.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT       A.student_exercises_id,       A.student_university_code,       B.university_name AS student_university_name,       A.student_school_id,       C.school_name AS student_school_name,       A.student_id,       F.full_name AS student_name,       F.photo AS student_photo,       F.cellphone,       F.enrollment_year,       N.ability_level,       N.position_site,       A.course_university_code,       D.university_name AS course_university_name,       A.course_school_id,       E.school_name AS course_school_name,       A.course_id,       G.course_name,       A.course_class,       A.technology_id,       I.technology_name,       A.learning_phase_id,       J.learning_phase_name,       A.knowledge_id,       K.knowledge_name,       A.exercises_document_id,       H.document_url AS exercises_document_url,       H.answer_url AS exercises_answer_url,       A.source_code_git_url,       A.data_status,       CASE WHEN A.data_status = 'P' THEN '未练习'       WHEN A.data_status = 'W' THEN '待批改'       WHEN A.data_status = 'R' THEN '待修改'       WHEN A.data_status = 'S' THEN '已通过'       ELSE '未知数据状态'       END AS data_status_text,       M.reviewer_id,       M.reviewer_name_teacher,       M.reviewer_name_student,       M.reviewer_type,       DATE_FORMAT(M.update_time, '%Y-%m-%d %H:%i:%s') AS review_time,       DATE_FORMAT(A.create_time, '%Y-%m-%d %H:%i:%s') AS create_time,       DATE_FORMAT(A.update_time, '%Y-%m-%d %H:%i:%s') AS update_time     FROM shangshufang_customer.university_student_exercises A     INNER JOIN shangshufang_customer.university B     ON A.student_university_code = B.university_code     INNER JOIN shangshufang_customer.school C     ON A.student_university_code = C.university_code     AND A.student_school_id = C.school_id     INNER JOIN shangshufang_customer.university D     ON A.course_university_code = D.university_code     INNER JOIN shangshufang_customer.school E     ON A.course_university_code = E.university_code     AND A.course_school_id = E.school_id     INNER JOIN shangshufang_customer.university_student F     ON A.student_id = F.student_id     INNER JOIN shangshufang_customer.course G     ON A.course_university_code = G.university_code     AND A.course_school_id = G.school_id     AND A.course_id = G.course_id     INNER JOIN shangshufang_base.technology_knowledge_exercises H     ON A.technology_id = H.technology_id     AND A.knowledge_id = H.knowledge_id     AND A.exercises_document_id = H.exercises_id     INNER JOIN shangshufang_base.technology I     ON A.technology_id = I.technology_id     INNER JOIN shangshufang_base.learning_phase J     ON A.learning_phase_id = J.learning_phase_id     INNER JOIN shangshufang_base.technology_knowledge K     ON A.technology_id = K.technology_id     AND A.learning_phase_id = K.learning_phase_id     AND A.knowledge_id = K.knowledge_id     AND K.data_status = 'A'     LEFT JOIN     (     SELECT     C.student_exercises_id,     C.reviewer_id,     C.reviewer_type,     D.full_name AS reviewer_name_teacher,     E.full_name AS reviewer_name_student,     C.update_time     FROM     (     SELECT     A.review_id,     A.student_exercises_id,     A.update_time,     B.reviewer_id,     B.reviewer_university_code,     B.reviewer_school_id,     B.reviewer_type     FROM     (     SELECT     student_exercises_id,     MAX(review_id) AS review_id,     MAX(update_time) AS update_time     FROM shangshufang_customer.university_student_exercises_review     GROUP BY student_exercises_id     ) A     INNER JOIN shangshufang_customer.university_student_exercises_review B     ON A.review_id = B.review_id     AND A.student_exercises_id = B.student_exercises_id     ) C     LEFT JOIN shangshufang_customer.university_customer D     ON C.reviewer_university_code = D.university_code     AND C.reviewer_school_id = D.school_id     AND C.reviewer_id = D.customer_id     AND C.reviewer_type = 'T'     LEFT JOIN shangshufang_customer.university_student E     ON C.reviewer_university_code = E.university_code     AND C.reviewer_school_id = E.school_id     AND C.reviewer_id = E.student_id     AND C.reviewer_type = 'S'     ) M     ON A.student_exercises_id = M.student_exercises_id     INNER JOIN shangshufang_customer.university_student_ability_analysis N     ON A.student_id = N.student_id     WHERE a.technology_id = ?     AND a.student_university_code = ?     AND a.student_school_id = ?     AND a.student_id = ?            ORDER BY A.course_class, A.knowledge_id, A.exercises_document_id, A.update_time DESC     LIMIT ?, ?;
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-30, 10' at line 128
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-30, 10' at line 128
[2020-06-06 22:22:57,863][http-nio-8081-exec-4][ERROR][com.shangshufang.apiservice.service.impl.UniversityStudentExercisesServiceImpl:101] org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-10, 10' at line 128
### The error may exist in file [/Users/zhangqiang/Documents/04-Project/ShangShuFang/SourceCode/shangshufang.apiservice/target/classes/mapping/UniversityStudentExercisesMapping.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT       A.student_exercises_id,       A.student_university_code,       B.university_name AS student_university_name,       A.student_school_id,       C.school_name AS student_school_name,       A.student_id,       F.full_name AS student_name,       F.photo AS student_photo,       F.cellphone,       F.enrollment_year,       N.ability_level,       N.position_site,       A.course_university_code,       D.university_name AS course_university_name,       A.course_school_id,       E.school_name AS course_school_name,       A.course_id,       G.course_name,       A.course_class,       A.technology_id,       I.technology_name,       A.learning_phase_id,       J.learning_phase_name,       A.knowledge_id,       K.knowledge_name,       A.exercises_document_id,       H.document_url AS exercises_document_url,       H.answer_url AS exercises_answer_url,       A.source_code_git_url,       A.data_status,       CASE WHEN A.data_status = 'P' THEN '未练习'       WHEN A.data_status = 'W' THEN '待批改'       WHEN A.data_status = 'R' THEN '待修改'       WHEN A.data_status = 'S' THEN '已通过'       ELSE '未知数据状态'       END AS data_status_text,       M.reviewer_id,       M.reviewer_name_teacher,       M.reviewer_name_student,       M.reviewer_type,       DATE_FORMAT(M.update_time, '%Y-%m-%d %H:%i:%s') AS review_time,       DATE_FORMAT(A.create_time, '%Y-%m-%d %H:%i:%s') AS create_time,       DATE_FORMAT(A.update_time, '%Y-%m-%d %H:%i:%s') AS update_time     FROM shangshufang_customer.university_student_exercises A     INNER JOIN shangshufang_customer.university B     ON A.student_university_code = B.university_code     INNER JOIN shangshufang_customer.school C     ON A.student_university_code = C.university_code     AND A.student_school_id = C.school_id     INNER JOIN shangshufang_customer.university D     ON A.course_university_code = D.university_code     INNER JOIN shangshufang_customer.school E     ON A.course_university_code = E.university_code     AND A.course_school_id = E.school_id     INNER JOIN shangshufang_customer.university_student F     ON A.student_id = F.student_id     INNER JOIN shangshufang_customer.course G     ON A.course_university_code = G.university_code     AND A.course_school_id = G.school_id     AND A.course_id = G.course_id     INNER JOIN shangshufang_base.technology_knowledge_exercises H     ON A.technology_id = H.technology_id     AND A.knowledge_id = H.knowledge_id     AND A.exercises_document_id = H.exercises_id     INNER JOIN shangshufang_base.technology I     ON A.technology_id = I.technology_id     INNER JOIN shangshufang_base.learning_phase J     ON A.learning_phase_id = J.learning_phase_id     INNER JOIN shangshufang_base.technology_knowledge K     ON A.technology_id = K.technology_id     AND A.learning_phase_id = K.learning_phase_id     AND A.knowledge_id = K.knowledge_id     AND K.data_status = 'A'     LEFT JOIN     (     SELECT     C.student_exercises_id,     C.reviewer_id,     C.reviewer_type,     D.full_name AS reviewer_name_teacher,     E.full_name AS reviewer_name_student,     C.update_time     FROM     (     SELECT     A.review_id,     A.student_exercises_id,     A.update_time,     B.reviewer_id,     B.reviewer_university_code,     B.reviewer_school_id,     B.reviewer_type     FROM     (     SELECT     student_exercises_id,     MAX(review_id) AS review_id,     MAX(update_time) AS update_time     FROM shangshufang_customer.university_student_exercises_review     GROUP BY student_exercises_id     ) A     INNER JOIN shangshufang_customer.university_student_exercises_review B     ON A.review_id = B.review_id     AND A.student_exercises_id = B.student_exercises_id     ) C     LEFT JOIN shangshufang_customer.university_customer D     ON C.reviewer_university_code = D.university_code     AND C.reviewer_school_id = D.school_id     AND C.reviewer_id = D.customer_id     AND C.reviewer_type = 'T'     LEFT JOIN shangshufang_customer.university_student E     ON C.reviewer_university_code = E.university_code     AND C.reviewer_school_id = E.school_id     AND C.reviewer_id = E.student_id     AND C.reviewer_type = 'S'     ) M     ON A.student_exercises_id = M.student_exercises_id     INNER JOIN shangshufang_customer.university_student_ability_analysis N     ON A.student_id = N.student_id     WHERE a.technology_id = ?     AND a.student_university_code = ?     AND a.student_school_id = ?     AND a.student_id = ?            ORDER BY A.course_class, A.knowledge_id, A.exercises_document_id, A.update_time DESC     LIMIT ?, ?;
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-10, 10' at line 128
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-10, 10' at line 128
[2020-06-06 22:22:57,865][http-nio-8081-exec-1][ERROR][com.shangshufang.apiservice.service.impl.UniversityStudentExercisesServiceImpl:101] org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-20, 10' at line 128
### The error may exist in file [/Users/zhangqiang/Documents/04-Project/ShangShuFang/SourceCode/shangshufang.apiservice/target/classes/mapping/UniversityStudentExercisesMapping.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT       A.student_exercises_id,       A.student_university_code,       B.university_name AS student_university_name,       A.student_school_id,       C.school_name AS student_school_name,       A.student_id,       F.full_name AS student_name,       F.photo AS student_photo,       F.cellphone,       F.enrollment_year,       N.ability_level,       N.position_site,       A.course_university_code,       D.university_name AS course_university_name,       A.course_school_id,       E.school_name AS course_school_name,       A.course_id,       G.course_name,       A.course_class,       A.technology_id,       I.technology_name,       A.learning_phase_id,       J.learning_phase_name,       A.knowledge_id,       K.knowledge_name,       A.exercises_document_id,       H.document_url AS exercises_document_url,       H.answer_url AS exercises_answer_url,       A.source_code_git_url,       A.data_status,       CASE WHEN A.data_status = 'P' THEN '未练习'       WHEN A.data_status = 'W' THEN '待批改'       WHEN A.data_status = 'R' THEN '待修改'       WHEN A.data_status = 'S' THEN '已通过'       ELSE '未知数据状态'       END AS data_status_text,       M.reviewer_id,       M.reviewer_name_teacher,       M.reviewer_name_student,       M.reviewer_type,       DATE_FORMAT(M.update_time, '%Y-%m-%d %H:%i:%s') AS review_time,       DATE_FORMAT(A.create_time, '%Y-%m-%d %H:%i:%s') AS create_time,       DATE_FORMAT(A.update_time, '%Y-%m-%d %H:%i:%s') AS update_time     FROM shangshufang_customer.university_student_exercises A     INNER JOIN shangshufang_customer.university B     ON A.student_university_code = B.university_code     INNER JOIN shangshufang_customer.school C     ON A.student_university_code = C.university_code     AND A.student_school_id = C.school_id     INNER JOIN shangshufang_customer.university D     ON A.course_university_code = D.university_code     INNER JOIN shangshufang_customer.school E     ON A.course_university_code = E.university_code     AND A.course_school_id = E.school_id     INNER JOIN shangshufang_customer.university_student F     ON A.student_id = F.student_id     INNER JOIN shangshufang_customer.course G     ON A.course_university_code = G.university_code     AND A.course_school_id = G.school_id     AND A.course_id = G.course_id     INNER JOIN shangshufang_base.technology_knowledge_exercises H     ON A.technology_id = H.technology_id     AND A.knowledge_id = H.knowledge_id     AND A.exercises_document_id = H.exercises_id     INNER JOIN shangshufang_base.technology I     ON A.technology_id = I.technology_id     INNER JOIN shangshufang_base.learning_phase J     ON A.learning_phase_id = J.learning_phase_id     INNER JOIN shangshufang_base.technology_knowledge K     ON A.technology_id = K.technology_id     AND A.learning_phase_id = K.learning_phase_id     AND A.knowledge_id = K.knowledge_id     AND K.data_status = 'A'     LEFT JOIN     (     SELECT     C.student_exercises_id,     C.reviewer_id,     C.reviewer_type,     D.full_name AS reviewer_name_teacher,     E.full_name AS reviewer_name_student,     C.update_time     FROM     (     SELECT     A.review_id,     A.student_exercises_id,     A.update_time,     B.reviewer_id,     B.reviewer_university_code,     B.reviewer_school_id,     B.reviewer_type     FROM     (     SELECT     student_exercises_id,     MAX(review_id) AS review_id,     MAX(update_time) AS update_time     FROM shangshufang_customer.university_student_exercises_review     GROUP BY student_exercises_id     ) A     INNER JOIN shangshufang_customer.university_student_exercises_review B     ON A.review_id = B.review_id     AND A.student_exercises_id = B.student_exercises_id     ) C     LEFT JOIN shangshufang_customer.university_customer D     ON C.reviewer_university_code = D.university_code     AND C.reviewer_school_id = D.school_id     AND C.reviewer_id = D.customer_id     AND C.reviewer_type = 'T'     LEFT JOIN shangshufang_customer.university_student E     ON C.reviewer_university_code = E.university_code     AND C.reviewer_school_id = E.school_id     AND C.reviewer_id = E.student_id     AND C.reviewer_type = 'S'     ) M     ON A.student_exercises_id = M.student_exercises_id     INNER JOIN shangshufang_customer.university_student_ability_analysis N     ON A.student_id = N.student_id     WHERE a.technology_id = ?     AND a.student_university_code = ?     AND a.student_school_id = ?     AND a.student_id = ?            ORDER BY A.course_class, A.knowledge_id, A.exercises_document_id, A.update_time DESC     LIMIT ?, ?;
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-20, 10' at line 128
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-20, 10' at line 128
[2020-06-06 22:23:19,367][http-nio-8081-exec-10][ERROR][com.shangshufang.apiservice.service.impl.UniversityStudentExercisesServiceImpl:101] org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-20, 10' at line 128
### The error may exist in file [/Users/zhangqiang/Documents/04-Project/ShangShuFang/SourceCode/shangshufang.apiservice/target/classes/mapping/UniversityStudentExercisesMapping.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT       A.student_exercises_id,       A.student_university_code,       B.university_name AS student_university_name,       A.student_school_id,       C.school_name AS student_school_name,       A.student_id,       F.full_name AS student_name,       F.photo AS student_photo,       F.cellphone,       F.enrollment_year,       N.ability_level,       N.position_site,       A.course_university_code,       D.university_name AS course_university_name,       A.course_school_id,       E.school_name AS course_school_name,       A.course_id,       G.course_name,       A.course_class,       A.technology_id,       I.technology_name,       A.learning_phase_id,       J.learning_phase_name,       A.knowledge_id,       K.knowledge_name,       A.exercises_document_id,       H.document_url AS exercises_document_url,       H.answer_url AS exercises_answer_url,       A.source_code_git_url,       A.data_status,       CASE WHEN A.data_status = 'P' THEN '未练习'       WHEN A.data_status = 'W' THEN '待批改'       WHEN A.data_status = 'R' THEN '待修改'       WHEN A.data_status = 'S' THEN '已通过'       ELSE '未知数据状态'       END AS data_status_text,       M.reviewer_id,       M.reviewer_name_teacher,       M.reviewer_name_student,       M.reviewer_type,       DATE_FORMAT(M.update_time, '%Y-%m-%d %H:%i:%s') AS review_time,       DATE_FORMAT(A.create_time, '%Y-%m-%d %H:%i:%s') AS create_time,       DATE_FORMAT(A.update_time, '%Y-%m-%d %H:%i:%s') AS update_time     FROM shangshufang_customer.university_student_exercises A     INNER JOIN shangshufang_customer.university B     ON A.student_university_code = B.university_code     INNER JOIN shangshufang_customer.school C     ON A.student_university_code = C.university_code     AND A.student_school_id = C.school_id     INNER JOIN shangshufang_customer.university D     ON A.course_university_code = D.university_code     INNER JOIN shangshufang_customer.school E     ON A.course_university_code = E.university_code     AND A.course_school_id = E.school_id     INNER JOIN shangshufang_customer.university_student F     ON A.student_id = F.student_id     INNER JOIN shangshufang_customer.course G     ON A.course_university_code = G.university_code     AND A.course_school_id = G.school_id     AND A.course_id = G.course_id     INNER JOIN shangshufang_base.technology_knowledge_exercises H     ON A.technology_id = H.technology_id     AND A.knowledge_id = H.knowledge_id     AND A.exercises_document_id = H.exercises_id     INNER JOIN shangshufang_base.technology I     ON A.technology_id = I.technology_id     INNER JOIN shangshufang_base.learning_phase J     ON A.learning_phase_id = J.learning_phase_id     INNER JOIN shangshufang_base.technology_knowledge K     ON A.technology_id = K.technology_id     AND A.learning_phase_id = K.learning_phase_id     AND A.knowledge_id = K.knowledge_id     AND K.data_status = 'A'     LEFT JOIN     (     SELECT     C.student_exercises_id,     C.reviewer_id,     C.reviewer_type,     D.full_name AS reviewer_name_teacher,     E.full_name AS reviewer_name_student,     C.update_time     FROM     (     SELECT     A.review_id,     A.student_exercises_id,     A.update_time,     B.reviewer_id,     B.reviewer_university_code,     B.reviewer_school_id,     B.reviewer_type     FROM     (     SELECT     student_exercises_id,     MAX(review_id) AS review_id,     MAX(update_time) AS update_time     FROM shangshufang_customer.university_student_exercises_review     GROUP BY student_exercises_id     ) A     INNER JOIN shangshufang_customer.university_student_exercises_review B     ON A.review_id = B.review_id     AND A.student_exercises_id = B.student_exercises_id     ) C     LEFT JOIN shangshufang_customer.university_customer D     ON C.reviewer_university_code = D.university_code     AND C.reviewer_school_id = D.school_id     AND C.reviewer_id = D.customer_id     AND C.reviewer_type = 'T'     LEFT JOIN shangshufang_customer.university_student E     ON C.reviewer_university_code = E.university_code     AND C.reviewer_school_id = E.school_id     AND C.reviewer_id = E.student_id     AND C.reviewer_type = 'S'     ) M     ON A.student_exercises_id = M.student_exercises_id     INNER JOIN shangshufang_customer.university_student_ability_analysis N     ON A.student_id = N.student_id     WHERE a.technology_id = ?     AND a.student_university_code = ?     AND a.student_school_id = ?     AND a.student_id = ?            ORDER BY A.course_class, A.knowledge_id, A.exercises_document_id, A.update_time DESC     LIMIT ?, ?;
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-20, 10' at line 128
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-20, 10' at line 128
[2020-06-06 22:23:19,366][http-nio-8081-exec-2][ERROR][com.shangshufang.apiservice.service.impl.UniversityStudentExercisesServiceImpl:101] org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-40, 10' at line 128
### The error may exist in file [/Users/zhangqiang/Documents/04-Project/ShangShuFang/SourceCode/shangshufang.apiservice/target/classes/mapping/UniversityStudentExercisesMapping.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT       A.student_exercises_id,       A.student_university_code,       B.university_name AS student_university_name,       A.student_school_id,       C.school_name AS student_school_name,       A.student_id,       F.full_name AS student_name,       F.photo AS student_photo,       F.cellphone,       F.enrollment_year,       N.ability_level,       N.position_site,       A.course_university_code,       D.university_name AS course_university_name,       A.course_school_id,       E.school_name AS course_school_name,       A.course_id,       G.course_name,       A.course_class,       A.technology_id,       I.technology_name,       A.learning_phase_id,       J.learning_phase_name,       A.knowledge_id,       K.knowledge_name,       A.exercises_document_id,       H.document_url AS exercises_document_url,       H.answer_url AS exercises_answer_url,       A.source_code_git_url,       A.data_status,       CASE WHEN A.data_status = 'P' THEN '未练习'       WHEN A.data_status = 'W' THEN '待批改'       WHEN A.data_status = 'R' THEN '待修改'       WHEN A.data_status = 'S' THEN '已通过'       ELSE '未知数据状态'       END AS data_status_text,       M.reviewer_id,       M.reviewer_name_teacher,       M.reviewer_name_student,       M.reviewer_type,       DATE_FORMAT(M.update_time, '%Y-%m-%d %H:%i:%s') AS review_time,       DATE_FORMAT(A.create_time, '%Y-%m-%d %H:%i:%s') AS create_time,       DATE_FORMAT(A.update_time, '%Y-%m-%d %H:%i:%s') AS update_time     FROM shangshufang_customer.university_student_exercises A     INNER JOIN shangshufang_customer.university B     ON A.student_university_code = B.university_code     INNER JOIN shangshufang_customer.school C     ON A.student_university_code = C.university_code     AND A.student_school_id = C.school_id     INNER JOIN shangshufang_customer.university D     ON A.course_university_code = D.university_code     INNER JOIN shangshufang_customer.school E     ON A.course_university_code = E.university_code     AND A.course_school_id = E.school_id     INNER JOIN shangshufang_customer.university_student F     ON A.student_id = F.student_id     INNER JOIN shangshufang_customer.course G     ON A.course_university_code = G.university_code     AND A.course_school_id = G.school_id     AND A.course_id = G.course_id     INNER JOIN shangshufang_base.technology_knowledge_exercises H     ON A.technology_id = H.technology_id     AND A.knowledge_id = H.knowledge_id     AND A.exercises_document_id = H.exercises_id     INNER JOIN shangshufang_base.technology I     ON A.technology_id = I.technology_id     INNER JOIN shangshufang_base.learning_phase J     ON A.learning_phase_id = J.learning_phase_id     INNER JOIN shangshufang_base.technology_knowledge K     ON A.technology_id = K.technology_id     AND A.learning_phase_id = K.learning_phase_id     AND A.knowledge_id = K.knowledge_id     AND K.data_status = 'A'     LEFT JOIN     (     SELECT     C.student_exercises_id,     C.reviewer_id,     C.reviewer_type,     D.full_name AS reviewer_name_teacher,     E.full_name AS reviewer_name_student,     C.update_time     FROM     (     SELECT     A.review_id,     A.student_exercises_id,     A.update_time,     B.reviewer_id,     B.reviewer_university_code,     B.reviewer_school_id,     B.reviewer_type     FROM     (     SELECT     student_exercises_id,     MAX(review_id) AS review_id,     MAX(update_time) AS update_time     FROM shangshufang_customer.university_student_exercises_review     GROUP BY student_exercises_id     ) A     INNER JOIN shangshufang_customer.university_student_exercises_review B     ON A.review_id = B.review_id     AND A.student_exercises_id = B.student_exercises_id     ) C     LEFT JOIN shangshufang_customer.university_customer D     ON C.reviewer_university_code = D.university_code     AND C.reviewer_school_id = D.school_id     AND C.reviewer_id = D.customer_id     AND C.reviewer_type = 'T'     LEFT JOIN shangshufang_customer.university_student E     ON C.reviewer_university_code = E.university_code     AND C.reviewer_school_id = E.school_id     AND C.reviewer_id = E.student_id     AND C.reviewer_type = 'S'     ) M     ON A.student_exercises_id = M.student_exercises_id     INNER JOIN shangshufang_customer.university_student_ability_analysis N     ON A.student_id = N.student_id     WHERE a.technology_id = ?     AND a.student_university_code = ?     AND a.student_school_id = ?     AND a.student_id = ?            ORDER BY A.course_class, A.knowledge_id, A.exercises_document_id, A.update_time DESC     LIMIT ?, ?;
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-40, 10' at line 128
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-40, 10' at line 128
[2020-06-06 22:23:19,367][http-nio-8081-exec-3][ERROR][com.shangshufang.apiservice.service.impl.UniversityStudentExercisesServiceImpl:101] org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-30, 10' at line 128
### The error may exist in file [/Users/zhangqiang/Documents/04-Project/ShangShuFang/SourceCode/shangshufang.apiservice/target/classes/mapping/UniversityStudentExercisesMapping.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT       A.student_exercises_id,       A.student_university_code,       B.university_name AS student_university_name,       A.student_school_id,       C.school_name AS student_school_name,       A.student_id,       F.full_name AS student_name,       F.photo AS student_photo,       F.cellphone,       F.enrollment_year,       N.ability_level,       N.position_site,       A.course_university_code,       D.university_name AS course_university_name,       A.course_school_id,       E.school_name AS course_school_name,       A.course_id,       G.course_name,       A.course_class,       A.technology_id,       I.technology_name,       A.learning_phase_id,       J.learning_phase_name,       A.knowledge_id,       K.knowledge_name,       A.exercises_document_id,       H.document_url AS exercises_document_url,       H.answer_url AS exercises_answer_url,       A.source_code_git_url,       A.data_status,       CASE WHEN A.data_status = 'P' THEN '未练习'       WHEN A.data_status = 'W' THEN '待批改'       WHEN A.data_status = 'R' THEN '待修改'       WHEN A.data_status = 'S' THEN '已通过'       ELSE '未知数据状态'       END AS data_status_text,       M.reviewer_id,       M.reviewer_name_teacher,       M.reviewer_name_student,       M.reviewer_type,       DATE_FORMAT(M.update_time, '%Y-%m-%d %H:%i:%s') AS review_time,       DATE_FORMAT(A.create_time, '%Y-%m-%d %H:%i:%s') AS create_time,       DATE_FORMAT(A.update_time, '%Y-%m-%d %H:%i:%s') AS update_time     FROM shangshufang_customer.university_student_exercises A     INNER JOIN shangshufang_customer.university B     ON A.student_university_code = B.university_code     INNER JOIN shangshufang_customer.school C     ON A.student_university_code = C.university_code     AND A.student_school_id = C.school_id     INNER JOIN shangshufang_customer.university D     ON A.course_university_code = D.university_code     INNER JOIN shangshufang_customer.school E     ON A.course_university_code = E.university_code     AND A.course_school_id = E.school_id     INNER JOIN shangshufang_customer.university_student F     ON A.student_id = F.student_id     INNER JOIN shangshufang_customer.course G     ON A.course_university_code = G.university_code     AND A.course_school_id = G.school_id     AND A.course_id = G.course_id     INNER JOIN shangshufang_base.technology_knowledge_exercises H     ON A.technology_id = H.technology_id     AND A.knowledge_id = H.knowledge_id     AND A.exercises_document_id = H.exercises_id     INNER JOIN shangshufang_base.technology I     ON A.technology_id = I.technology_id     INNER JOIN shangshufang_base.learning_phase J     ON A.learning_phase_id = J.learning_phase_id     INNER JOIN shangshufang_base.technology_knowledge K     ON A.technology_id = K.technology_id     AND A.learning_phase_id = K.learning_phase_id     AND A.knowledge_id = K.knowledge_id     AND K.data_status = 'A'     LEFT JOIN     (     SELECT     C.student_exercises_id,     C.reviewer_id,     C.reviewer_type,     D.full_name AS reviewer_name_teacher,     E.full_name AS reviewer_name_student,     C.update_time     FROM     (     SELECT     A.review_id,     A.student_exercises_id,     A.update_time,     B.reviewer_id,     B.reviewer_university_code,     B.reviewer_school_id,     B.reviewer_type     FROM     (     SELECT     student_exercises_id,     MAX(review_id) AS review_id,     MAX(update_time) AS update_time     FROM shangshufang_customer.university_student_exercises_review     GROUP BY student_exercises_id     ) A     INNER JOIN shangshufang_customer.university_student_exercises_review B     ON A.review_id = B.review_id     AND A.student_exercises_id = B.student_exercises_id     ) C     LEFT JOIN shangshufang_customer.university_customer D     ON C.reviewer_university_code = D.university_code     AND C.reviewer_school_id = D.school_id     AND C.reviewer_id = D.customer_id     AND C.reviewer_type = 'T'     LEFT JOIN shangshufang_customer.university_student E     ON C.reviewer_university_code = E.university_code     AND C.reviewer_school_id = E.school_id     AND C.reviewer_id = E.student_id     AND C.reviewer_type = 'S'     ) M     ON A.student_exercises_id = M.student_exercises_id     INNER JOIN shangshufang_customer.university_student_ability_analysis N     ON A.student_id = N.student_id     WHERE a.technology_id = ?     AND a.student_university_code = ?     AND a.student_school_id = ?     AND a.student_id = ?            ORDER BY A.course_class, A.knowledge_id, A.exercises_document_id, A.update_time DESC     LIMIT ?, ?;
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-30, 10' at line 128
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-30, 10' at line 128
[2020-06-06 22:23:19,366][http-nio-8081-exec-5][ERROR][com.shangshufang.apiservice.service.impl.UniversityStudentExercisesServiceImpl:101] org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-10, 10' at line 128
### The error may exist in file [/Users/zhangqiang/Documents/04-Project/ShangShuFang/SourceCode/shangshufang.apiservice/target/classes/mapping/UniversityStudentExercisesMapping.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT       A.student_exercises_id,       A.student_university_code,       B.university_name AS student_university_name,       A.student_school_id,       C.school_name AS student_school_name,       A.student_id,       F.full_name AS student_name,       F.photo AS student_photo,       F.cellphone,       F.enrollment_year,       N.ability_level,       N.position_site,       A.course_university_code,       D.university_name AS course_university_name,       A.course_school_id,       E.school_name AS course_school_name,       A.course_id,       G.course_name,       A.course_class,       A.technology_id,       I.technology_name,       A.learning_phase_id,       J.learning_phase_name,       A.knowledge_id,       K.knowledge_name,       A.exercises_document_id,       H.document_url AS exercises_document_url,       H.answer_url AS exercises_answer_url,       A.source_code_git_url,       A.data_status,       CASE WHEN A.data_status = 'P' THEN '未练习'       WHEN A.data_status = 'W' THEN '待批改'       WHEN A.data_status = 'R' THEN '待修改'       WHEN A.data_status = 'S' THEN '已通过'       ELSE '未知数据状态'       END AS data_status_text,       M.reviewer_id,       M.reviewer_name_teacher,       M.reviewer_name_student,       M.reviewer_type,       DATE_FORMAT(M.update_time, '%Y-%m-%d %H:%i:%s') AS review_time,       DATE_FORMAT(A.create_time, '%Y-%m-%d %H:%i:%s') AS create_time,       DATE_FORMAT(A.update_time, '%Y-%m-%d %H:%i:%s') AS update_time     FROM shangshufang_customer.university_student_exercises A     INNER JOIN shangshufang_customer.university B     ON A.student_university_code = B.university_code     INNER JOIN shangshufang_customer.school C     ON A.student_university_code = C.university_code     AND A.student_school_id = C.school_id     INNER JOIN shangshufang_customer.university D     ON A.course_university_code = D.university_code     INNER JOIN shangshufang_customer.school E     ON A.course_university_code = E.university_code     AND A.course_school_id = E.school_id     INNER JOIN shangshufang_customer.university_student F     ON A.student_id = F.student_id     INNER JOIN shangshufang_customer.course G     ON A.course_university_code = G.university_code     AND A.course_school_id = G.school_id     AND A.course_id = G.course_id     INNER JOIN shangshufang_base.technology_knowledge_exercises H     ON A.technology_id = H.technology_id     AND A.knowledge_id = H.knowledge_id     AND A.exercises_document_id = H.exercises_id     INNER JOIN shangshufang_base.technology I     ON A.technology_id = I.technology_id     INNER JOIN shangshufang_base.learning_phase J     ON A.learning_phase_id = J.learning_phase_id     INNER JOIN shangshufang_base.technology_knowledge K     ON A.technology_id = K.technology_id     AND A.learning_phase_id = K.learning_phase_id     AND A.knowledge_id = K.knowledge_id     AND K.data_status = 'A'     LEFT JOIN     (     SELECT     C.student_exercises_id,     C.reviewer_id,     C.reviewer_type,     D.full_name AS reviewer_name_teacher,     E.full_name AS reviewer_name_student,     C.update_time     FROM     (     SELECT     A.review_id,     A.student_exercises_id,     A.update_time,     B.reviewer_id,     B.reviewer_university_code,     B.reviewer_school_id,     B.reviewer_type     FROM     (     SELECT     student_exercises_id,     MAX(review_id) AS review_id,     MAX(update_time) AS update_time     FROM shangshufang_customer.university_student_exercises_review     GROUP BY student_exercises_id     ) A     INNER JOIN shangshufang_customer.university_student_exercises_review B     ON A.review_id = B.review_id     AND A.student_exercises_id = B.student_exercises_id     ) C     LEFT JOIN shangshufang_customer.university_customer D     ON C.reviewer_university_code = D.university_code     AND C.reviewer_school_id = D.school_id     AND C.reviewer_id = D.customer_id     AND C.reviewer_type = 'T'     LEFT JOIN shangshufang_customer.university_student E     ON C.reviewer_university_code = E.university_code     AND C.reviewer_school_id = E.school_id     AND C.reviewer_id = E.student_id     AND C.reviewer_type = 'S'     ) M     ON A.student_exercises_id = M.student_exercises_id     INNER JOIN shangshufang_customer.university_student_ability_analysis N     ON A.student_id = N.student_id     WHERE a.technology_id = ?     AND a.student_university_code = ?     AND a.student_school_id = ?     AND a.student_id = ?            ORDER BY A.course_class, A.knowledge_id, A.exercises_document_id, A.update_time DESC     LIMIT ?, ?;
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-10, 10' at line 128
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-10, 10' at line 128
[2020-06-06 22:23:20,857][http-nio-8081-exec-10][ERROR][com.shangshufang.apiservice.service.impl.UniversityStudentExercisesServiceImpl:101] org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-30, 10' at line 128
### The error may exist in file [/Users/zhangqiang/Documents/04-Project/ShangShuFang/SourceCode/shangshufang.apiservice/target/classes/mapping/UniversityStudentExercisesMapping.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT       A.student_exercises_id,       A.student_university_code,       B.university_name AS student_university_name,       A.student_school_id,       C.school_name AS student_school_name,       A.student_id,       F.full_name AS student_name,       F.photo AS student_photo,       F.cellphone,       F.enrollment_year,       N.ability_level,       N.position_site,       A.course_university_code,       D.university_name AS course_university_name,       A.course_school_id,       E.school_name AS course_school_name,       A.course_id,       G.course_name,       A.course_class,       A.technology_id,       I.technology_name,       A.learning_phase_id,       J.learning_phase_name,       A.knowledge_id,       K.knowledge_name,       A.exercises_document_id,       H.document_url AS exercises_document_url,       H.answer_url AS exercises_answer_url,       A.source_code_git_url,       A.data_status,       CASE WHEN A.data_status = 'P' THEN '未练习'       WHEN A.data_status = 'W' THEN '待批改'       WHEN A.data_status = 'R' THEN '待修改'       WHEN A.data_status = 'S' THEN '已通过'       ELSE '未知数据状态'       END AS data_status_text,       M.reviewer_id,       M.reviewer_name_teacher,       M.reviewer_name_student,       M.reviewer_type,       DATE_FORMAT(M.update_time, '%Y-%m-%d %H:%i:%s') AS review_time,       DATE_FORMAT(A.create_time, '%Y-%m-%d %H:%i:%s') AS create_time,       DATE_FORMAT(A.update_time, '%Y-%m-%d %H:%i:%s') AS update_time     FROM shangshufang_customer.university_student_exercises A     INNER JOIN shangshufang_customer.university B     ON A.student_university_code = B.university_code     INNER JOIN shangshufang_customer.school C     ON A.student_university_code = C.university_code     AND A.student_school_id = C.school_id     INNER JOIN shangshufang_customer.university D     ON A.course_university_code = D.university_code     INNER JOIN shangshufang_customer.school E     ON A.course_university_code = E.university_code     AND A.course_school_id = E.school_id     INNER JOIN shangshufang_customer.university_student F     ON A.student_id = F.student_id     INNER JOIN shangshufang_customer.course G     ON A.course_university_code = G.university_code     AND A.course_school_id = G.school_id     AND A.course_id = G.course_id     INNER JOIN shangshufang_base.technology_knowledge_exercises H     ON A.technology_id = H.technology_id     AND A.knowledge_id = H.knowledge_id     AND A.exercises_document_id = H.exercises_id     INNER JOIN shangshufang_base.technology I     ON A.technology_id = I.technology_id     INNER JOIN shangshufang_base.learning_phase J     ON A.learning_phase_id = J.learning_phase_id     INNER JOIN shangshufang_base.technology_knowledge K     ON A.technology_id = K.technology_id     AND A.learning_phase_id = K.learning_phase_id     AND A.knowledge_id = K.knowledge_id     AND K.data_status = 'A'     LEFT JOIN     (     SELECT     C.student_exercises_id,     C.reviewer_id,     C.reviewer_type,     D.full_name AS reviewer_name_teacher,     E.full_name AS reviewer_name_student,     C.update_time     FROM     (     SELECT     A.review_id,     A.student_exercises_id,     A.update_time,     B.reviewer_id,     B.reviewer_university_code,     B.reviewer_school_id,     B.reviewer_type     FROM     (     SELECT     student_exercises_id,     MAX(review_id) AS review_id,     MAX(update_time) AS update_time     FROM shangshufang_customer.university_student_exercises_review     GROUP BY student_exercises_id     ) A     INNER JOIN shangshufang_customer.university_student_exercises_review B     ON A.review_id = B.review_id     AND A.student_exercises_id = B.student_exercises_id     ) C     LEFT JOIN shangshufang_customer.university_customer D     ON C.reviewer_university_code = D.university_code     AND C.reviewer_school_id = D.school_id     AND C.reviewer_id = D.customer_id     AND C.reviewer_type = 'T'     LEFT JOIN shangshufang_customer.university_student E     ON C.reviewer_university_code = E.university_code     AND C.reviewer_school_id = E.school_id     AND C.reviewer_id = E.student_id     AND C.reviewer_type = 'S'     ) M     ON A.student_exercises_id = M.student_exercises_id     INNER JOIN shangshufang_customer.university_student_ability_analysis N     ON A.student_id = N.student_id     WHERE a.technology_id = ?     AND a.student_university_code = ?     AND a.student_school_id = ?     AND a.student_id = ?            ORDER BY A.course_class, A.knowledge_id, A.exercises_document_id, A.update_time DESC     LIMIT ?, ?;
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-30, 10' at line 128
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-30, 10' at line 128
[2020-06-06 22:23:20,857][http-nio-8081-exec-9][ERROR][com.shangshufang.apiservice.service.impl.UniversityStudentExercisesServiceImpl:101] org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-50, 10' at line 128
### The error may exist in file [/Users/zhangqiang/Documents/04-Project/ShangShuFang/SourceCode/shangshufang.apiservice/target/classes/mapping/UniversityStudentExercisesMapping.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT       A.student_exercises_id,       A.student_university_code,       B.university_name AS student_university_name,       A.student_school_id,       C.school_name AS student_school_name,       A.student_id,       F.full_name AS student_name,       F.photo AS student_photo,       F.cellphone,       F.enrollment_year,       N.ability_level,       N.position_site,       A.course_university_code,       D.university_name AS course_university_name,       A.course_school_id,       E.school_name AS course_school_name,       A.course_id,       G.course_name,       A.course_class,       A.technology_id,       I.technology_name,       A.learning_phase_id,       J.learning_phase_name,       A.knowledge_id,       K.knowledge_name,       A.exercises_document_id,       H.document_url AS exercises_document_url,       H.answer_url AS exercises_answer_url,       A.source_code_git_url,       A.data_status,       CASE WHEN A.data_status = 'P' THEN '未练习'       WHEN A.data_status = 'W' THEN '待批改'       WHEN A.data_status = 'R' THEN '待修改'       WHEN A.data_status = 'S' THEN '已通过'       ELSE '未知数据状态'       END AS data_status_text,       M.reviewer_id,       M.reviewer_name_teacher,       M.reviewer_name_student,       M.reviewer_type,       DATE_FORMAT(M.update_time, '%Y-%m-%d %H:%i:%s') AS review_time,       DATE_FORMAT(A.create_time, '%Y-%m-%d %H:%i:%s') AS create_time,       DATE_FORMAT(A.update_time, '%Y-%m-%d %H:%i:%s') AS update_time     FROM shangshufang_customer.university_student_exercises A     INNER JOIN shangshufang_customer.university B     ON A.student_university_code = B.university_code     INNER JOIN shangshufang_customer.school C     ON A.student_university_code = C.university_code     AND A.student_school_id = C.school_id     INNER JOIN shangshufang_customer.university D     ON A.course_university_code = D.university_code     INNER JOIN shangshufang_customer.school E     ON A.course_university_code = E.university_code     AND A.course_school_id = E.school_id     INNER JOIN shangshufang_customer.university_student F     ON A.student_id = F.student_id     INNER JOIN shangshufang_customer.course G     ON A.course_university_code = G.university_code     AND A.course_school_id = G.school_id     AND A.course_id = G.course_id     INNER JOIN shangshufang_base.technology_knowledge_exercises H     ON A.technology_id = H.technology_id     AND A.knowledge_id = H.knowledge_id     AND A.exercises_document_id = H.exercises_id     INNER JOIN shangshufang_base.technology I     ON A.technology_id = I.technology_id     INNER JOIN shangshufang_base.learning_phase J     ON A.learning_phase_id = J.learning_phase_id     INNER JOIN shangshufang_base.technology_knowledge K     ON A.technology_id = K.technology_id     AND A.learning_phase_id = K.learning_phase_id     AND A.knowledge_id = K.knowledge_id     AND K.data_status = 'A'     LEFT JOIN     (     SELECT     C.student_exercises_id,     C.reviewer_id,     C.reviewer_type,     D.full_name AS reviewer_name_teacher,     E.full_name AS reviewer_name_student,     C.update_time     FROM     (     SELECT     A.review_id,     A.student_exercises_id,     A.update_time,     B.reviewer_id,     B.reviewer_university_code,     B.reviewer_school_id,     B.reviewer_type     FROM     (     SELECT     student_exercises_id,     MAX(review_id) AS review_id,     MAX(update_time) AS update_time     FROM shangshufang_customer.university_student_exercises_review     GROUP BY student_exercises_id     ) A     INNER JOIN shangshufang_customer.university_student_exercises_review B     ON A.review_id = B.review_id     AND A.student_exercises_id = B.student_exercises_id     ) C     LEFT JOIN shangshufang_customer.university_customer D     ON C.reviewer_university_code = D.university_code     AND C.reviewer_school_id = D.school_id     AND C.reviewer_id = D.customer_id     AND C.reviewer_type = 'T'     LEFT JOIN shangshufang_customer.university_student E     ON C.reviewer_university_code = E.university_code     AND C.reviewer_school_id = E.school_id     AND C.reviewer_id = E.student_id     AND C.reviewer_type = 'S'     ) M     ON A.student_exercises_id = M.student_exercises_id     INNER JOIN shangshufang_customer.university_student_ability_analysis N     ON A.student_id = N.student_id     WHERE a.technology_id = ?     AND a.student_university_code = ?     AND a.student_school_id = ?     AND a.student_id = ?            ORDER BY A.course_class, A.knowledge_id, A.exercises_document_id, A.update_time DESC     LIMIT ?, ?;
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-50, 10' at line 128
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-50, 10' at line 128
[2020-06-06 22:23:20,857][http-nio-8081-exec-4][ERROR][com.shangshufang.apiservice.service.impl.UniversityStudentExercisesServiceImpl:101] org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-10, 10' at line 128
### The error may exist in file [/Users/zhangqiang/Documents/04-Project/ShangShuFang/SourceCode/shangshufang.apiservice/target/classes/mapping/UniversityStudentExercisesMapping.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT       A.student_exercises_id,       A.student_university_code,       B.university_name AS student_university_name,       A.student_school_id,       C.school_name AS student_school_name,       A.student_id,       F.full_name AS student_name,       F.photo AS student_photo,       F.cellphone,       F.enrollment_year,       N.ability_level,       N.position_site,       A.course_university_code,       D.university_name AS course_university_name,       A.course_school_id,       E.school_name AS course_school_name,       A.course_id,       G.course_name,       A.course_class,       A.technology_id,       I.technology_name,       A.learning_phase_id,       J.learning_phase_name,       A.knowledge_id,       K.knowledge_name,       A.exercises_document_id,       H.document_url AS exercises_document_url,       H.answer_url AS exercises_answer_url,       A.source_code_git_url,       A.data_status,       CASE WHEN A.data_status = 'P' THEN '未练习'       WHEN A.data_status = 'W' THEN '待批改'       WHEN A.data_status = 'R' THEN '待修改'       WHEN A.data_status = 'S' THEN '已通过'       ELSE '未知数据状态'       END AS data_status_text,       M.reviewer_id,       M.reviewer_name_teacher,       M.reviewer_name_student,       M.reviewer_type,       DATE_FORMAT(M.update_time, '%Y-%m-%d %H:%i:%s') AS review_time,       DATE_FORMAT(A.create_time, '%Y-%m-%d %H:%i:%s') AS create_time,       DATE_FORMAT(A.update_time, '%Y-%m-%d %H:%i:%s') AS update_time     FROM shangshufang_customer.university_student_exercises A     INNER JOIN shangshufang_customer.university B     ON A.student_university_code = B.university_code     INNER JOIN shangshufang_customer.school C     ON A.student_university_code = C.university_code     AND A.student_school_id = C.school_id     INNER JOIN shangshufang_customer.university D     ON A.course_university_code = D.university_code     INNER JOIN shangshufang_customer.school E     ON A.course_university_code = E.university_code     AND A.course_school_id = E.school_id     INNER JOIN shangshufang_customer.university_student F     ON A.student_id = F.student_id     INNER JOIN shangshufang_customer.course G     ON A.course_university_code = G.university_code     AND A.course_school_id = G.school_id     AND A.course_id = G.course_id     INNER JOIN shangshufang_base.technology_knowledge_exercises H     ON A.technology_id = H.technology_id     AND A.knowledge_id = H.knowledge_id     AND A.exercises_document_id = H.exercises_id     INNER JOIN shangshufang_base.technology I     ON A.technology_id = I.technology_id     INNER JOIN shangshufang_base.learning_phase J     ON A.learning_phase_id = J.learning_phase_id     INNER JOIN shangshufang_base.technology_knowledge K     ON A.technology_id = K.technology_id     AND A.learning_phase_id = K.learning_phase_id     AND A.knowledge_id = K.knowledge_id     AND K.data_status = 'A'     LEFT JOIN     (     SELECT     C.student_exercises_id,     C.reviewer_id,     C.reviewer_type,     D.full_name AS reviewer_name_teacher,     E.full_name AS reviewer_name_student,     C.update_time     FROM     (     SELECT     A.review_id,     A.student_exercises_id,     A.update_time,     B.reviewer_id,     B.reviewer_university_code,     B.reviewer_school_id,     B.reviewer_type     FROM     (     SELECT     student_exercises_id,     MAX(review_id) AS review_id,     MAX(update_time) AS update_time     FROM shangshufang_customer.university_student_exercises_review     GROUP BY student_exercises_id     ) A     INNER JOIN shangshufang_customer.university_student_exercises_review B     ON A.review_id = B.review_id     AND A.student_exercises_id = B.student_exercises_id     ) C     LEFT JOIN shangshufang_customer.university_customer D     ON C.reviewer_university_code = D.university_code     AND C.reviewer_school_id = D.school_id     AND C.reviewer_id = D.customer_id     AND C.reviewer_type = 'T'     LEFT JOIN shangshufang_customer.university_student E     ON C.reviewer_university_code = E.university_code     AND C.reviewer_school_id = E.school_id     AND C.reviewer_id = E.student_id     AND C.reviewer_type = 'S'     ) M     ON A.student_exercises_id = M.student_exercises_id     INNER JOIN shangshufang_customer.university_student_ability_analysis N     ON A.student_id = N.student_id     WHERE a.technology_id = ?     AND a.student_university_code = ?     AND a.student_school_id = ?     AND a.student_id = ?            ORDER BY A.course_class, A.knowledge_id, A.exercises_document_id, A.update_time DESC     LIMIT ?, ?;
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-10, 10' at line 128
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-10, 10' at line 128
[2020-06-06 22:23:20,857][http-nio-8081-exec-2][ERROR][com.shangshufang.apiservice.service.impl.UniversityStudentExercisesServiceImpl:101] org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-60, 10' at line 128
### The error may exist in file [/Users/zhangqiang/Documents/04-Project/ShangShuFang/SourceCode/shangshufang.apiservice/target/classes/mapping/UniversityStudentExercisesMapping.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT       A.student_exercises_id,       A.student_university_code,       B.university_name AS student_university_name,       A.student_school_id,       C.school_name AS student_school_name,       A.student_id,       F.full_name AS student_name,       F.photo AS student_photo,       F.cellphone,       F.enrollment_year,       N.ability_level,       N.position_site,       A.course_university_code,       D.university_name AS course_university_name,       A.course_school_id,       E.school_name AS course_school_name,       A.course_id,       G.course_name,       A.course_class,       A.technology_id,       I.technology_name,       A.learning_phase_id,       J.learning_phase_name,       A.knowledge_id,       K.knowledge_name,       A.exercises_document_id,       H.document_url AS exercises_document_url,       H.answer_url AS exercises_answer_url,       A.source_code_git_url,       A.data_status,       CASE WHEN A.data_status = 'P' THEN '未练习'       WHEN A.data_status = 'W' THEN '待批改'       WHEN A.data_status = 'R' THEN '待修改'       WHEN A.data_status = 'S' THEN '已通过'       ELSE '未知数据状态'       END AS data_status_text,       M.reviewer_id,       M.reviewer_name_teacher,       M.reviewer_name_student,       M.reviewer_type,       DATE_FORMAT(M.update_time, '%Y-%m-%d %H:%i:%s') AS review_time,       DATE_FORMAT(A.create_time, '%Y-%m-%d %H:%i:%s') AS create_time,       DATE_FORMAT(A.update_time, '%Y-%m-%d %H:%i:%s') AS update_time     FROM shangshufang_customer.university_student_exercises A     INNER JOIN shangshufang_customer.university B     ON A.student_university_code = B.university_code     INNER JOIN shangshufang_customer.school C     ON A.student_university_code = C.university_code     AND A.student_school_id = C.school_id     INNER JOIN shangshufang_customer.university D     ON A.course_university_code = D.university_code     INNER JOIN shangshufang_customer.school E     ON A.course_university_code = E.university_code     AND A.course_school_id = E.school_id     INNER JOIN shangshufang_customer.university_student F     ON A.student_id = F.student_id     INNER JOIN shangshufang_customer.course G     ON A.course_university_code = G.university_code     AND A.course_school_id = G.school_id     AND A.course_id = G.course_id     INNER JOIN shangshufang_base.technology_knowledge_exercises H     ON A.technology_id = H.technology_id     AND A.knowledge_id = H.knowledge_id     AND A.exercises_document_id = H.exercises_id     INNER JOIN shangshufang_base.technology I     ON A.technology_id = I.technology_id     INNER JOIN shangshufang_base.learning_phase J     ON A.learning_phase_id = J.learning_phase_id     INNER JOIN shangshufang_base.technology_knowledge K     ON A.technology_id = K.technology_id     AND A.learning_phase_id = K.learning_phase_id     AND A.knowledge_id = K.knowledge_id     AND K.data_status = 'A'     LEFT JOIN     (     SELECT     C.student_exercises_id,     C.reviewer_id,     C.reviewer_type,     D.full_name AS reviewer_name_teacher,     E.full_name AS reviewer_name_student,     C.update_time     FROM     (     SELECT     A.review_id,     A.student_exercises_id,     A.update_time,     B.reviewer_id,     B.reviewer_university_code,     B.reviewer_school_id,     B.reviewer_type     FROM     (     SELECT     student_exercises_id,     MAX(review_id) AS review_id,     MAX(update_time) AS update_time     FROM shangshufang_customer.university_student_exercises_review     GROUP BY student_exercises_id     ) A     INNER JOIN shangshufang_customer.university_student_exercises_review B     ON A.review_id = B.review_id     AND A.student_exercises_id = B.student_exercises_id     ) C     LEFT JOIN shangshufang_customer.university_customer D     ON C.reviewer_university_code = D.university_code     AND C.reviewer_school_id = D.school_id     AND C.reviewer_id = D.customer_id     AND C.reviewer_type = 'T'     LEFT JOIN shangshufang_customer.university_student E     ON C.reviewer_university_code = E.university_code     AND C.reviewer_school_id = E.school_id     AND C.reviewer_id = E.student_id     AND C.reviewer_type = 'S'     ) M     ON A.student_exercises_id = M.student_exercises_id     INNER JOIN shangshufang_customer.university_student_ability_analysis N     ON A.student_id = N.student_id     WHERE a.technology_id = ?     AND a.student_university_code = ?     AND a.student_school_id = ?     AND a.student_id = ?            ORDER BY A.course_class, A.knowledge_id, A.exercises_document_id, A.update_time DESC     LIMIT ?, ?;
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-60, 10' at line 128
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-60, 10' at line 128
[2020-06-06 22:23:20,857][http-nio-8081-exec-6][ERROR][com.shangshufang.apiservice.service.impl.UniversityStudentExercisesServiceImpl:101] org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-20, 10' at line 128
### The error may exist in file [/Users/zhangqiang/Documents/04-Project/ShangShuFang/SourceCode/shangshufang.apiservice/target/classes/mapping/UniversityStudentExercisesMapping.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT       A.student_exercises_id,       A.student_university_code,       B.university_name AS student_university_name,       A.student_school_id,       C.school_name AS student_school_name,       A.student_id,       F.full_name AS student_name,       F.photo AS student_photo,       F.cellphone,       F.enrollment_year,       N.ability_level,       N.position_site,       A.course_university_code,       D.university_name AS course_university_name,       A.course_school_id,       E.school_name AS course_school_name,       A.course_id,       G.course_name,       A.course_class,       A.technology_id,       I.technology_name,       A.learning_phase_id,       J.learning_phase_name,       A.knowledge_id,       K.knowledge_name,       A.exercises_document_id,       H.document_url AS exercises_document_url,       H.answer_url AS exercises_answer_url,       A.source_code_git_url,       A.data_status,       CASE WHEN A.data_status = 'P' THEN '未练习'       WHEN A.data_status = 'W' THEN '待批改'       WHEN A.data_status = 'R' THEN '待修改'       WHEN A.data_status = 'S' THEN '已通过'       ELSE '未知数据状态'       END AS data_status_text,       M.reviewer_id,       M.reviewer_name_teacher,       M.reviewer_name_student,       M.reviewer_type,       DATE_FORMAT(M.update_time, '%Y-%m-%d %H:%i:%s') AS review_time,       DATE_FORMAT(A.create_time, '%Y-%m-%d %H:%i:%s') AS create_time,       DATE_FORMAT(A.update_time, '%Y-%m-%d %H:%i:%s') AS update_time     FROM shangshufang_customer.university_student_exercises A     INNER JOIN shangshufang_customer.university B     ON A.student_university_code = B.university_code     INNER JOIN shangshufang_customer.school C     ON A.student_university_code = C.university_code     AND A.student_school_id = C.school_id     INNER JOIN shangshufang_customer.university D     ON A.course_university_code = D.university_code     INNER JOIN shangshufang_customer.school E     ON A.course_university_code = E.university_code     AND A.course_school_id = E.school_id     INNER JOIN shangshufang_customer.university_student F     ON A.student_id = F.student_id     INNER JOIN shangshufang_customer.course G     ON A.course_university_code = G.university_code     AND A.course_school_id = G.school_id     AND A.course_id = G.course_id     INNER JOIN shangshufang_base.technology_knowledge_exercises H     ON A.technology_id = H.technology_id     AND A.knowledge_id = H.knowledge_id     AND A.exercises_document_id = H.exercises_id     INNER JOIN shangshufang_base.technology I     ON A.technology_id = I.technology_id     INNER JOIN shangshufang_base.learning_phase J     ON A.learning_phase_id = J.learning_phase_id     INNER JOIN shangshufang_base.technology_knowledge K     ON A.technology_id = K.technology_id     AND A.learning_phase_id = K.learning_phase_id     AND A.knowledge_id = K.knowledge_id     AND K.data_status = 'A'     LEFT JOIN     (     SELECT     C.student_exercises_id,     C.reviewer_id,     C.reviewer_type,     D.full_name AS reviewer_name_teacher,     E.full_name AS reviewer_name_student,     C.update_time     FROM     (     SELECT     A.review_id,     A.student_exercises_id,     A.update_time,     B.reviewer_id,     B.reviewer_university_code,     B.reviewer_school_id,     B.reviewer_type     FROM     (     SELECT     student_exercises_id,     MAX(review_id) AS review_id,     MAX(update_time) AS update_time     FROM shangshufang_customer.university_student_exercises_review     GROUP BY student_exercises_id     ) A     INNER JOIN shangshufang_customer.university_student_exercises_review B     ON A.review_id = B.review_id     AND A.student_exercises_id = B.student_exercises_id     ) C     LEFT JOIN shangshufang_customer.university_customer D     ON C.reviewer_university_code = D.university_code     AND C.reviewer_school_id = D.school_id     AND C.reviewer_id = D.customer_id     AND C.reviewer_type = 'T'     LEFT JOIN shangshufang_customer.university_student E     ON C.reviewer_university_code = E.university_code     AND C.reviewer_school_id = E.school_id     AND C.reviewer_id = E.student_id     AND C.reviewer_type = 'S'     ) M     ON A.student_exercises_id = M.student_exercises_id     INNER JOIN shangshufang_customer.university_student_ability_analysis N     ON A.student_id = N.student_id     WHERE a.technology_id = ?     AND a.student_university_code = ?     AND a.student_school_id = ?     AND a.student_id = ?            ORDER BY A.course_class, A.knowledge_id, A.exercises_document_id, A.update_time DESC     LIMIT ?, ?;
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-20, 10' at line 128
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-20, 10' at line 128
[2020-06-06 22:23:20,879][http-nio-8081-exec-1][ERROR][com.shangshufang.apiservice.service.impl.UniversityStudentExercisesServiceImpl:101] org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-40, 10' at line 128
### The error may exist in file [/Users/zhangqiang/Documents/04-Project/ShangShuFang/SourceCode/shangshufang.apiservice/target/classes/mapping/UniversityStudentExercisesMapping.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT       A.student_exercises_id,       A.student_university_code,       B.university_name AS student_university_name,       A.student_school_id,       C.school_name AS student_school_name,       A.student_id,       F.full_name AS student_name,       F.photo AS student_photo,       F.cellphone,       F.enrollment_year,       N.ability_level,       N.position_site,       A.course_university_code,       D.university_name AS course_university_name,       A.course_school_id,       E.school_name AS course_school_name,       A.course_id,       G.course_name,       A.course_class,       A.technology_id,       I.technology_name,       A.learning_phase_id,       J.learning_phase_name,       A.knowledge_id,       K.knowledge_name,       A.exercises_document_id,       H.document_url AS exercises_document_url,       H.answer_url AS exercises_answer_url,       A.source_code_git_url,       A.data_status,       CASE WHEN A.data_status = 'P' THEN '未练习'       WHEN A.data_status = 'W' THEN '待批改'       WHEN A.data_status = 'R' THEN '待修改'       WHEN A.data_status = 'S' THEN '已通过'       ELSE '未知数据状态'       END AS data_status_text,       M.reviewer_id,       M.reviewer_name_teacher,       M.reviewer_name_student,       M.reviewer_type,       DATE_FORMAT(M.update_time, '%Y-%m-%d %H:%i:%s') AS review_time,       DATE_FORMAT(A.create_time, '%Y-%m-%d %H:%i:%s') AS create_time,       DATE_FORMAT(A.update_time, '%Y-%m-%d %H:%i:%s') AS update_time     FROM shangshufang_customer.university_student_exercises A     INNER JOIN shangshufang_customer.university B     ON A.student_university_code = B.university_code     INNER JOIN shangshufang_customer.school C     ON A.student_university_code = C.university_code     AND A.student_school_id = C.school_id     INNER JOIN shangshufang_customer.university D     ON A.course_university_code = D.university_code     INNER JOIN shangshufang_customer.school E     ON A.course_university_code = E.university_code     AND A.course_school_id = E.school_id     INNER JOIN shangshufang_customer.university_student F     ON A.student_id = F.student_id     INNER JOIN shangshufang_customer.course G     ON A.course_university_code = G.university_code     AND A.course_school_id = G.school_id     AND A.course_id = G.course_id     INNER JOIN shangshufang_base.technology_knowledge_exercises H     ON A.technology_id = H.technology_id     AND A.knowledge_id = H.knowledge_id     AND A.exercises_document_id = H.exercises_id     INNER JOIN shangshufang_base.technology I     ON A.technology_id = I.technology_id     INNER JOIN shangshufang_base.learning_phase J     ON A.learning_phase_id = J.learning_phase_id     INNER JOIN shangshufang_base.technology_knowledge K     ON A.technology_id = K.technology_id     AND A.learning_phase_id = K.learning_phase_id     AND A.knowledge_id = K.knowledge_id     AND K.data_status = 'A'     LEFT JOIN     (     SELECT     C.student_exercises_id,     C.reviewer_id,     C.reviewer_type,     D.full_name AS reviewer_name_teacher,     E.full_name AS reviewer_name_student,     C.update_time     FROM     (     SELECT     A.review_id,     A.student_exercises_id,     A.update_time,     B.reviewer_id,     B.reviewer_university_code,     B.reviewer_school_id,     B.reviewer_type     FROM     (     SELECT     student_exercises_id,     MAX(review_id) AS review_id,     MAX(update_time) AS update_time     FROM shangshufang_customer.university_student_exercises_review     GROUP BY student_exercises_id     ) A     INNER JOIN shangshufang_customer.university_student_exercises_review B     ON A.review_id = B.review_id     AND A.student_exercises_id = B.student_exercises_id     ) C     LEFT JOIN shangshufang_customer.university_customer D     ON C.reviewer_university_code = D.university_code     AND C.reviewer_school_id = D.school_id     AND C.reviewer_id = D.customer_id     AND C.reviewer_type = 'T'     LEFT JOIN shangshufang_customer.university_student E     ON C.reviewer_university_code = E.university_code     AND C.reviewer_school_id = E.school_id     AND C.reviewer_id = E.student_id     AND C.reviewer_type = 'S'     ) M     ON A.student_exercises_id = M.student_exercises_id     INNER JOIN shangshufang_customer.university_student_ability_analysis N     ON A.student_id = N.student_id     WHERE a.technology_id = ?     AND a.student_university_code = ?     AND a.student_school_id = ?     AND a.student_id = ?            ORDER BY A.course_class, A.knowledge_id, A.exercises_document_id, A.update_time DESC     LIMIT ?, ?;
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-40, 10' at line 128
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-40, 10' at line 128
[2020-06-06 22:23:20,880][http-nio-8081-exec-5][ERROR][com.shangshufang.apiservice.service.impl.UniversityStudentExercisesServiceImpl:101] org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-80, 10' at line 128
### The error may exist in file [/Users/zhangqiang/Documents/04-Project/ShangShuFang/SourceCode/shangshufang.apiservice/target/classes/mapping/UniversityStudentExercisesMapping.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT       A.student_exercises_id,       A.student_university_code,       B.university_name AS student_university_name,       A.student_school_id,       C.school_name AS student_school_name,       A.student_id,       F.full_name AS student_name,       F.photo AS student_photo,       F.cellphone,       F.enrollment_year,       N.ability_level,       N.position_site,       A.course_university_code,       D.university_name AS course_university_name,       A.course_school_id,       E.school_name AS course_school_name,       A.course_id,       G.course_name,       A.course_class,       A.technology_id,       I.technology_name,       A.learning_phase_id,       J.learning_phase_name,       A.knowledge_id,       K.knowledge_name,       A.exercises_document_id,       H.document_url AS exercises_document_url,       H.answer_url AS exercises_answer_url,       A.source_code_git_url,       A.data_status,       CASE WHEN A.data_status = 'P' THEN '未练习'       WHEN A.data_status = 'W' THEN '待批改'       WHEN A.data_status = 'R' THEN '待修改'       WHEN A.data_status = 'S' THEN '已通过'       ELSE '未知数据状态'       END AS data_status_text,       M.reviewer_id,       M.reviewer_name_teacher,       M.reviewer_name_student,       M.reviewer_type,       DATE_FORMAT(M.update_time, '%Y-%m-%d %H:%i:%s') AS review_time,       DATE_FORMAT(A.create_time, '%Y-%m-%d %H:%i:%s') AS create_time,       DATE_FORMAT(A.update_time, '%Y-%m-%d %H:%i:%s') AS update_time     FROM shangshufang_customer.university_student_exercises A     INNER JOIN shangshufang_customer.university B     ON A.student_university_code = B.university_code     INNER JOIN shangshufang_customer.school C     ON A.student_university_code = C.university_code     AND A.student_school_id = C.school_id     INNER JOIN shangshufang_customer.university D     ON A.course_university_code = D.university_code     INNER JOIN shangshufang_customer.school E     ON A.course_university_code = E.university_code     AND A.course_school_id = E.school_id     INNER JOIN shangshufang_customer.university_student F     ON A.student_id = F.student_id     INNER JOIN shangshufang_customer.course G     ON A.course_university_code = G.university_code     AND A.course_school_id = G.school_id     AND A.course_id = G.course_id     INNER JOIN shangshufang_base.technology_knowledge_exercises H     ON A.technology_id = H.technology_id     AND A.knowledge_id = H.knowledge_id     AND A.exercises_document_id = H.exercises_id     INNER JOIN shangshufang_base.technology I     ON A.technology_id = I.technology_id     INNER JOIN shangshufang_base.learning_phase J     ON A.learning_phase_id = J.learning_phase_id     INNER JOIN shangshufang_base.technology_knowledge K     ON A.technology_id = K.technology_id     AND A.learning_phase_id = K.learning_phase_id     AND A.knowledge_id = K.knowledge_id     AND K.data_status = 'A'     LEFT JOIN     (     SELECT     C.student_exercises_id,     C.reviewer_id,     C.reviewer_type,     D.full_name AS reviewer_name_teacher,     E.full_name AS reviewer_name_student,     C.update_time     FROM     (     SELECT     A.review_id,     A.student_exercises_id,     A.update_time,     B.reviewer_id,     B.reviewer_university_code,     B.reviewer_school_id,     B.reviewer_type     FROM     (     SELECT     student_exercises_id,     MAX(review_id) AS review_id,     MAX(update_time) AS update_time     FROM shangshufang_customer.university_student_exercises_review     GROUP BY student_exercises_id     ) A     INNER JOIN shangshufang_customer.university_student_exercises_review B     ON A.review_id = B.review_id     AND A.student_exercises_id = B.student_exercises_id     ) C     LEFT JOIN shangshufang_customer.university_customer D     ON C.reviewer_university_code = D.university_code     AND C.reviewer_school_id = D.school_id     AND C.reviewer_id = D.customer_id     AND C.reviewer_type = 'T'     LEFT JOIN shangshufang_customer.university_student E     ON C.reviewer_university_code = E.university_code     AND C.reviewer_school_id = E.school_id     AND C.reviewer_id = E.student_id     AND C.reviewer_type = 'S'     ) M     ON A.student_exercises_id = M.student_exercises_id     INNER JOIN shangshufang_customer.university_student_ability_analysis N     ON A.student_id = N.student_id     WHERE a.technology_id = ?     AND a.student_university_code = ?     AND a.student_school_id = ?     AND a.student_id = ?            ORDER BY A.course_class, A.knowledge_id, A.exercises_document_id, A.update_time DESC     LIMIT ?, ?;
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-80, 10' at line 128
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-80, 10' at line 128
[2020-06-06 22:23:20,897][http-nio-8081-exec-4][ERROR][com.shangshufang.apiservice.service.impl.UniversityStudentExercisesServiceImpl:101] org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-120, 10' at line 128
### The error may exist in file [/Users/zhangqiang/Documents/04-Project/ShangShuFang/SourceCode/shangshufang.apiservice/target/classes/mapping/UniversityStudentExercisesMapping.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT       A.student_exercises_id,       A.student_university_code,       B.university_name AS student_university_name,       A.student_school_id,       C.school_name AS student_school_name,       A.student_id,       F.full_name AS student_name,       F.photo AS student_photo,       F.cellphone,       F.enrollment_year,       N.ability_level,       N.position_site,       A.course_university_code,       D.university_name AS course_university_name,       A.course_school_id,       E.school_name AS course_school_name,       A.course_id,       G.course_name,       A.course_class,       A.technology_id,       I.technology_name,       A.learning_phase_id,       J.learning_phase_name,       A.knowledge_id,       K.knowledge_name,       A.exercises_document_id,       H.document_url AS exercises_document_url,       H.answer_url AS exercises_answer_url,       A.source_code_git_url,       A.data_status,       CASE WHEN A.data_status = 'P' THEN '未练习'       WHEN A.data_status = 'W' THEN '待批改'       WHEN A.data_status = 'R' THEN '待修改'       WHEN A.data_status = 'S' THEN '已通过'       ELSE '未知数据状态'       END AS data_status_text,       M.reviewer_id,       M.reviewer_name_teacher,       M.reviewer_name_student,       M.reviewer_type,       DATE_FORMAT(M.update_time, '%Y-%m-%d %H:%i:%s') AS review_time,       DATE_FORMAT(A.create_time, '%Y-%m-%d %H:%i:%s') AS create_time,       DATE_FORMAT(A.update_time, '%Y-%m-%d %H:%i:%s') AS update_time     FROM shangshufang_customer.university_student_exercises A     INNER JOIN shangshufang_customer.university B     ON A.student_university_code = B.university_code     INNER JOIN shangshufang_customer.school C     ON A.student_university_code = C.university_code     AND A.student_school_id = C.school_id     INNER JOIN shangshufang_customer.university D     ON A.course_university_code = D.university_code     INNER JOIN shangshufang_customer.school E     ON A.course_university_code = E.university_code     AND A.course_school_id = E.school_id     INNER JOIN shangshufang_customer.university_student F     ON A.student_id = F.student_id     INNER JOIN shangshufang_customer.course G     ON A.course_university_code = G.university_code     AND A.course_school_id = G.school_id     AND A.course_id = G.course_id     INNER JOIN shangshufang_base.technology_knowledge_exercises H     ON A.technology_id = H.technology_id     AND A.knowledge_id = H.knowledge_id     AND A.exercises_document_id = H.exercises_id     INNER JOIN shangshufang_base.technology I     ON A.technology_id = I.technology_id     INNER JOIN shangshufang_base.learning_phase J     ON A.learning_phase_id = J.learning_phase_id     INNER JOIN shangshufang_base.technology_knowledge K     ON A.technology_id = K.technology_id     AND A.learning_phase_id = K.learning_phase_id     AND A.knowledge_id = K.knowledge_id     AND K.data_status = 'A'     LEFT JOIN     (     SELECT     C.student_exercises_id,     C.reviewer_id,     C.reviewer_type,     D.full_name AS reviewer_name_teacher,     E.full_name AS reviewer_name_student,     C.update_time     FROM     (     SELECT     A.review_id,     A.student_exercises_id,     A.update_time,     B.reviewer_id,     B.reviewer_university_code,     B.reviewer_school_id,     B.reviewer_type     FROM     (     SELECT     student_exercises_id,     MAX(review_id) AS review_id,     MAX(update_time) AS update_time     FROM shangshufang_customer.university_student_exercises_review     GROUP BY student_exercises_id     ) A     INNER JOIN shangshufang_customer.university_student_exercises_review B     ON A.review_id = B.review_id     AND A.student_exercises_id = B.student_exercises_id     ) C     LEFT JOIN shangshufang_customer.university_customer D     ON C.reviewer_university_code = D.university_code     AND C.reviewer_school_id = D.school_id     AND C.reviewer_id = D.customer_id     AND C.reviewer_type = 'T'     LEFT JOIN shangshufang_customer.university_student E     ON C.reviewer_university_code = E.university_code     AND C.reviewer_school_id = E.school_id     AND C.reviewer_id = E.student_id     AND C.reviewer_type = 'S'     ) M     ON A.student_exercises_id = M.student_exercises_id     INNER JOIN shangshufang_customer.university_student_ability_analysis N     ON A.student_id = N.student_id     WHERE a.technology_id = ?     AND a.student_university_code = ?     AND a.student_school_id = ?     AND a.student_id = ?            ORDER BY A.course_class, A.knowledge_id, A.exercises_document_id, A.update_time DESC     LIMIT ?, ?;
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-120, 10' at line 128
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-120, 10' at line 128
[2020-06-06 22:23:20,897][http-nio-8081-exec-8][ERROR][com.shangshufang.apiservice.service.impl.UniversityStudentExercisesServiceImpl:101] org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-90, 10' at line 128
### The error may exist in file [/Users/zhangqiang/Documents/04-Project/ShangShuFang/SourceCode/shangshufang.apiservice/target/classes/mapping/UniversityStudentExercisesMapping.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT       A.student_exercises_id,       A.student_university_code,       B.university_name AS student_university_name,       A.student_school_id,       C.school_name AS student_school_name,       A.student_id,       F.full_name AS student_name,       F.photo AS student_photo,       F.cellphone,       F.enrollment_year,       N.ability_level,       N.position_site,       A.course_university_code,       D.university_name AS course_university_name,       A.course_school_id,       E.school_name AS course_school_name,       A.course_id,       G.course_name,       A.course_class,       A.technology_id,       I.technology_name,       A.learning_phase_id,       J.learning_phase_name,       A.knowledge_id,       K.knowledge_name,       A.exercises_document_id,       H.document_url AS exercises_document_url,       H.answer_url AS exercises_answer_url,       A.source_code_git_url,       A.data_status,       CASE WHEN A.data_status = 'P' THEN '未练习'       WHEN A.data_status = 'W' THEN '待批改'       WHEN A.data_status = 'R' THEN '待修改'       WHEN A.data_status = 'S' THEN '已通过'       ELSE '未知数据状态'       END AS data_status_text,       M.reviewer_id,       M.reviewer_name_teacher,       M.reviewer_name_student,       M.reviewer_type,       DATE_FORMAT(M.update_time, '%Y-%m-%d %H:%i:%s') AS review_time,       DATE_FORMAT(A.create_time, '%Y-%m-%d %H:%i:%s') AS create_time,       DATE_FORMAT(A.update_time, '%Y-%m-%d %H:%i:%s') AS update_time     FROM shangshufang_customer.university_student_exercises A     INNER JOIN shangshufang_customer.university B     ON A.student_university_code = B.university_code     INNER JOIN shangshufang_customer.school C     ON A.student_university_code = C.university_code     AND A.student_school_id = C.school_id     INNER JOIN shangshufang_customer.university D     ON A.course_university_code = D.university_code     INNER JOIN shangshufang_customer.school E     ON A.course_university_code = E.university_code     AND A.course_school_id = E.school_id     INNER JOIN shangshufang_customer.university_student F     ON A.student_id = F.student_id     INNER JOIN shangshufang_customer.course G     ON A.course_university_code = G.university_code     AND A.course_school_id = G.school_id     AND A.course_id = G.course_id     INNER JOIN shangshufang_base.technology_knowledge_exercises H     ON A.technology_id = H.technology_id     AND A.knowledge_id = H.knowledge_id     AND A.exercises_document_id = H.exercises_id     INNER JOIN shangshufang_base.technology I     ON A.technology_id = I.technology_id     INNER JOIN shangshufang_base.learning_phase J     ON A.learning_phase_id = J.learning_phase_id     INNER JOIN shangshufang_base.technology_knowledge K     ON A.technology_id = K.technology_id     AND A.learning_phase_id = K.learning_phase_id     AND A.knowledge_id = K.knowledge_id     AND K.data_status = 'A'     LEFT JOIN     (     SELECT     C.student_exercises_id,     C.reviewer_id,     C.reviewer_type,     D.full_name AS reviewer_name_teacher,     E.full_name AS reviewer_name_student,     C.update_time     FROM     (     SELECT     A.review_id,     A.student_exercises_id,     A.update_time,     B.reviewer_id,     B.reviewer_university_code,     B.reviewer_school_id,     B.reviewer_type     FROM     (     SELECT     student_exercises_id,     MAX(review_id) AS review_id,     MAX(update_time) AS update_time     FROM shangshufang_customer.university_student_exercises_review     GROUP BY student_exercises_id     ) A     INNER JOIN shangshufang_customer.university_student_exercises_review B     ON A.review_id = B.review_id     AND A.student_exercises_id = B.student_exercises_id     ) C     LEFT JOIN shangshufang_customer.university_customer D     ON C.reviewer_university_code = D.university_code     AND C.reviewer_school_id = D.school_id     AND C.reviewer_id = D.customer_id     AND C.reviewer_type = 'T'     LEFT JOIN shangshufang_customer.university_student E     ON C.reviewer_university_code = E.university_code     AND C.reviewer_school_id = E.school_id     AND C.reviewer_id = E.student_id     AND C.reviewer_type = 'S'     ) M     ON A.student_exercises_id = M.student_exercises_id     INNER JOIN shangshufang_customer.university_student_ability_analysis N     ON A.student_id = N.student_id     WHERE a.technology_id = ?     AND a.student_university_code = ?     AND a.student_school_id = ?     AND a.student_id = ?            ORDER BY A.course_class, A.knowledge_id, A.exercises_document_id, A.update_time DESC     LIMIT ?, ?;
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-90, 10' at line 128
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-90, 10' at line 128
[2020-06-06 22:23:20,897][http-nio-8081-exec-2][ERROR][com.shangshufang.apiservice.service.impl.UniversityStudentExercisesServiceImpl:101] org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-130, 10' at line 128
### The error may exist in file [/Users/zhangqiang/Documents/04-Project/ShangShuFang/SourceCode/shangshufang.apiservice/target/classes/mapping/UniversityStudentExercisesMapping.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT       A.student_exercises_id,       A.student_university_code,       B.university_name AS student_university_name,       A.student_school_id,       C.school_name AS student_school_name,       A.student_id,       F.full_name AS student_name,       F.photo AS student_photo,       F.cellphone,       F.enrollment_year,       N.ability_level,       N.position_site,       A.course_university_code,       D.university_name AS course_university_name,       A.course_school_id,       E.school_name AS course_school_name,       A.course_id,       G.course_name,       A.course_class,       A.technology_id,       I.technology_name,       A.learning_phase_id,       J.learning_phase_name,       A.knowledge_id,       K.knowledge_name,       A.exercises_document_id,       H.document_url AS exercises_document_url,       H.answer_url AS exercises_answer_url,       A.source_code_git_url,       A.data_status,       CASE WHEN A.data_status = 'P' THEN '未练习'       WHEN A.data_status = 'W' THEN '待批改'       WHEN A.data_status = 'R' THEN '待修改'       WHEN A.data_status = 'S' THEN '已通过'       ELSE '未知数据状态'       END AS data_status_text,       M.reviewer_id,       M.reviewer_name_teacher,       M.reviewer_name_student,       M.reviewer_type,       DATE_FORMAT(M.update_time, '%Y-%m-%d %H:%i:%s') AS review_time,       DATE_FORMAT(A.create_time, '%Y-%m-%d %H:%i:%s') AS create_time,       DATE_FORMAT(A.update_time, '%Y-%m-%d %H:%i:%s') AS update_time     FROM shangshufang_customer.university_student_exercises A     INNER JOIN shangshufang_customer.university B     ON A.student_university_code = B.university_code     INNER JOIN shangshufang_customer.school C     ON A.student_university_code = C.university_code     AND A.student_school_id = C.school_id     INNER JOIN shangshufang_customer.university D     ON A.course_university_code = D.university_code     INNER JOIN shangshufang_customer.school E     ON A.course_university_code = E.university_code     AND A.course_school_id = E.school_id     INNER JOIN shangshufang_customer.university_student F     ON A.student_id = F.student_id     INNER JOIN shangshufang_customer.course G     ON A.course_university_code = G.university_code     AND A.course_school_id = G.school_id     AND A.course_id = G.course_id     INNER JOIN shangshufang_base.technology_knowledge_exercises H     ON A.technology_id = H.technology_id     AND A.knowledge_id = H.knowledge_id     AND A.exercises_document_id = H.exercises_id     INNER JOIN shangshufang_base.technology I     ON A.technology_id = I.technology_id     INNER JOIN shangshufang_base.learning_phase J     ON A.learning_phase_id = J.learning_phase_id     INNER JOIN shangshufang_base.technology_knowledge K     ON A.technology_id = K.technology_id     AND A.learning_phase_id = K.learning_phase_id     AND A.knowledge_id = K.knowledge_id     AND K.data_status = 'A'     LEFT JOIN     (     SELECT     C.student_exercises_id,     C.reviewer_id,     C.reviewer_type,     D.full_name AS reviewer_name_teacher,     E.full_name AS reviewer_name_student,     C.update_time     FROM     (     SELECT     A.review_id,     A.student_exercises_id,     A.update_time,     B.reviewer_id,     B.reviewer_university_code,     B.reviewer_school_id,     B.reviewer_type     FROM     (     SELECT     student_exercises_id,     MAX(review_id) AS review_id,     MAX(update_time) AS update_time     FROM shangshufang_customer.university_student_exercises_review     GROUP BY student_exercises_id     ) A     INNER JOIN shangshufang_customer.university_student_exercises_review B     ON A.review_id = B.review_id     AND A.student_exercises_id = B.student_exercises_id     ) C     LEFT JOIN shangshufang_customer.university_customer D     ON C.reviewer_university_code = D.university_code     AND C.reviewer_school_id = D.school_id     AND C.reviewer_id = D.customer_id     AND C.reviewer_type = 'T'     LEFT JOIN shangshufang_customer.university_student E     ON C.reviewer_university_code = E.university_code     AND C.reviewer_school_id = E.school_id     AND C.reviewer_id = E.student_id     AND C.reviewer_type = 'S'     ) M     ON A.student_exercises_id = M.student_exercises_id     INNER JOIN shangshufang_customer.university_student_ability_analysis N     ON A.student_id = N.student_id     WHERE a.technology_id = ?     AND a.student_university_code = ?     AND a.student_school_id = ?     AND a.student_id = ?            ORDER BY A.course_class, A.knowledge_id, A.exercises_document_id, A.update_time DESC     LIMIT ?, ?;
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-130, 10' at line 128
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-130, 10' at line 128
[2020-06-06 22:23:20,915][http-nio-8081-exec-6][ERROR][com.shangshufang.apiservice.service.impl.UniversityStudentExercisesServiceImpl:101] org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-140, 10' at line 128
### The error may exist in file [/Users/zhangqiang/Documents/04-Project/ShangShuFang/SourceCode/shangshufang.apiservice/target/classes/mapping/UniversityStudentExercisesMapping.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT       A.student_exercises_id,       A.student_university_code,       B.university_name AS student_university_name,       A.student_school_id,       C.school_name AS student_school_name,       A.student_id,       F.full_name AS student_name,       F.photo AS student_photo,       F.cellphone,       F.enrollment_year,       N.ability_level,       N.position_site,       A.course_university_code,       D.university_name AS course_university_name,       A.course_school_id,       E.school_name AS course_school_name,       A.course_id,       G.course_name,       A.course_class,       A.technology_id,       I.technology_name,       A.learning_phase_id,       J.learning_phase_name,       A.knowledge_id,       K.knowledge_name,       A.exercises_document_id,       H.document_url AS exercises_document_url,       H.answer_url AS exercises_answer_url,       A.source_code_git_url,       A.data_status,       CASE WHEN A.data_status = 'P' THEN '未练习'       WHEN A.data_status = 'W' THEN '待批改'       WHEN A.data_status = 'R' THEN '待修改'       WHEN A.data_status = 'S' THEN '已通过'       ELSE '未知数据状态'       END AS data_status_text,       M.reviewer_id,       M.reviewer_name_teacher,       M.reviewer_name_student,       M.reviewer_type,       DATE_FORMAT(M.update_time, '%Y-%m-%d %H:%i:%s') AS review_time,       DATE_FORMAT(A.create_time, '%Y-%m-%d %H:%i:%s') AS create_time,       DATE_FORMAT(A.update_time, '%Y-%m-%d %H:%i:%s') AS update_time     FROM shangshufang_customer.university_student_exercises A     INNER JOIN shangshufang_customer.university B     ON A.student_university_code = B.university_code     INNER JOIN shangshufang_customer.school C     ON A.student_university_code = C.university_code     AND A.student_school_id = C.school_id     INNER JOIN shangshufang_customer.university D     ON A.course_university_code = D.university_code     INNER JOIN shangshufang_customer.school E     ON A.course_university_code = E.university_code     AND A.course_school_id = E.school_id     INNER JOIN shangshufang_customer.university_student F     ON A.student_id = F.student_id     INNER JOIN shangshufang_customer.course G     ON A.course_university_code = G.university_code     AND A.course_school_id = G.school_id     AND A.course_id = G.course_id     INNER JOIN shangshufang_base.technology_knowledge_exercises H     ON A.technology_id = H.technology_id     AND A.knowledge_id = H.knowledge_id     AND A.exercises_document_id = H.exercises_id     INNER JOIN shangshufang_base.technology I     ON A.technology_id = I.technology_id     INNER JOIN shangshufang_base.learning_phase J     ON A.learning_phase_id = J.learning_phase_id     INNER JOIN shangshufang_base.technology_knowledge K     ON A.technology_id = K.technology_id     AND A.learning_phase_id = K.learning_phase_id     AND A.knowledge_id = K.knowledge_id     AND K.data_status = 'A'     LEFT JOIN     (     SELECT     C.student_exercises_id,     C.reviewer_id,     C.reviewer_type,     D.full_name AS reviewer_name_teacher,     E.full_name AS reviewer_name_student,     C.update_time     FROM     (     SELECT     A.review_id,     A.student_exercises_id,     A.update_time,     B.reviewer_id,     B.reviewer_university_code,     B.reviewer_school_id,     B.reviewer_type     FROM     (     SELECT     student_exercises_id,     MAX(review_id) AS review_id,     MAX(update_time) AS update_time     FROM shangshufang_customer.university_student_exercises_review     GROUP BY student_exercises_id     ) A     INNER JOIN shangshufang_customer.university_student_exercises_review B     ON A.review_id = B.review_id     AND A.student_exercises_id = B.student_exercises_id     ) C     LEFT JOIN shangshufang_customer.university_customer D     ON C.reviewer_university_code = D.university_code     AND C.reviewer_school_id = D.school_id     AND C.reviewer_id = D.customer_id     AND C.reviewer_type = 'T'     LEFT JOIN shangshufang_customer.university_student E     ON C.reviewer_university_code = E.university_code     AND C.reviewer_school_id = E.school_id     AND C.reviewer_id = E.student_id     AND C.reviewer_type = 'S'     ) M     ON A.student_exercises_id = M.student_exercises_id     INNER JOIN shangshufang_customer.university_student_ability_analysis N     ON A.student_id = N.student_id     WHERE a.technology_id = ?     AND a.student_university_code = ?     AND a.student_school_id = ?     AND a.student_id = ?            ORDER BY A.course_class, A.knowledge_id, A.exercises_document_id, A.update_time DESC     LIMIT ?, ?;
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-140, 10' at line 128
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-140, 10' at line 128
[2020-06-06 22:23:20,915][http-nio-8081-exec-1][ERROR][com.shangshufang.apiservice.service.impl.UniversityStudentExercisesServiceImpl:101] org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-150, 10' at line 128
### The error may exist in file [/Users/zhangqiang/Documents/04-Project/ShangShuFang/SourceCode/shangshufang.apiservice/target/classes/mapping/UniversityStudentExercisesMapping.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT       A.student_exercises_id,       A.student_university_code,       B.university_name AS student_university_name,       A.student_school_id,       C.school_name AS student_school_name,       A.student_id,       F.full_name AS student_name,       F.photo AS student_photo,       F.cellphone,       F.enrollment_year,       N.ability_level,       N.position_site,       A.course_university_code,       D.university_name AS course_university_name,       A.course_school_id,       E.school_name AS course_school_name,       A.course_id,       G.course_name,       A.course_class,       A.technology_id,       I.technology_name,       A.learning_phase_id,       J.learning_phase_name,       A.knowledge_id,       K.knowledge_name,       A.exercises_document_id,       H.document_url AS exercises_document_url,       H.answer_url AS exercises_answer_url,       A.source_code_git_url,       A.data_status,       CASE WHEN A.data_status = 'P' THEN '未练习'       WHEN A.data_status = 'W' THEN '待批改'       WHEN A.data_status = 'R' THEN '待修改'       WHEN A.data_status = 'S' THEN '已通过'       ELSE '未知数据状态'       END AS data_status_text,       M.reviewer_id,       M.reviewer_name_teacher,       M.reviewer_name_student,       M.reviewer_type,       DATE_FORMAT(M.update_time, '%Y-%m-%d %H:%i:%s') AS review_time,       DATE_FORMAT(A.create_time, '%Y-%m-%d %H:%i:%s') AS create_time,       DATE_FORMAT(A.update_time, '%Y-%m-%d %H:%i:%s') AS update_time     FROM shangshufang_customer.university_student_exercises A     INNER JOIN shangshufang_customer.university B     ON A.student_university_code = B.university_code     INNER JOIN shangshufang_customer.school C     ON A.student_university_code = C.university_code     AND A.student_school_id = C.school_id     INNER JOIN shangshufang_customer.university D     ON A.course_university_code = D.university_code     INNER JOIN shangshufang_customer.school E     ON A.course_university_code = E.university_code     AND A.course_school_id = E.school_id     INNER JOIN shangshufang_customer.university_student F     ON A.student_id = F.student_id     INNER JOIN shangshufang_customer.course G     ON A.course_university_code = G.university_code     AND A.course_school_id = G.school_id     AND A.course_id = G.course_id     INNER JOIN shangshufang_base.technology_knowledge_exercises H     ON A.technology_id = H.technology_id     AND A.knowledge_id = H.knowledge_id     AND A.exercises_document_id = H.exercises_id     INNER JOIN shangshufang_base.technology I     ON A.technology_id = I.technology_id     INNER JOIN shangshufang_base.learning_phase J     ON A.learning_phase_id = J.learning_phase_id     INNER JOIN shangshufang_base.technology_knowledge K     ON A.technology_id = K.technology_id     AND A.learning_phase_id = K.learning_phase_id     AND A.knowledge_id = K.knowledge_id     AND K.data_status = 'A'     LEFT JOIN     (     SELECT     C.student_exercises_id,     C.reviewer_id,     C.reviewer_type,     D.full_name AS reviewer_name_teacher,     E.full_name AS reviewer_name_student,     C.update_time     FROM     (     SELECT     A.review_id,     A.student_exercises_id,     A.update_time,     B.reviewer_id,     B.reviewer_university_code,     B.reviewer_school_id,     B.reviewer_type     FROM     (     SELECT     student_exercises_id,     MAX(review_id) AS review_id,     MAX(update_time) AS update_time     FROM shangshufang_customer.university_student_exercises_review     GROUP BY student_exercises_id     ) A     INNER JOIN shangshufang_customer.university_student_exercises_review B     ON A.review_id = B.review_id     AND A.student_exercises_id = B.student_exercises_id     ) C     LEFT JOIN shangshufang_customer.university_customer D     ON C.reviewer_university_code = D.university_code     AND C.reviewer_school_id = D.school_id     AND C.reviewer_id = D.customer_id     AND C.reviewer_type = 'T'     LEFT JOIN shangshufang_customer.university_student E     ON C.reviewer_university_code = E.university_code     AND C.reviewer_school_id = E.school_id     AND C.reviewer_id = E.student_id     AND C.reviewer_type = 'S'     ) M     ON A.student_exercises_id = M.student_exercises_id     INNER JOIN shangshufang_customer.university_student_ability_analysis N     ON A.student_id = N.student_id     WHERE a.technology_id = ?     AND a.student_university_code = ?     AND a.student_school_id = ?     AND a.student_id = ?            ORDER BY A.course_class, A.knowledge_id, A.exercises_document_id, A.update_time DESC     LIMIT ?, ?;
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-150, 10' at line 128
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-150, 10' at line 128
[2020-06-06 22:23:20,915][http-nio-8081-exec-7][ERROR][com.shangshufang.apiservice.service.impl.UniversityStudentExercisesServiceImpl:101] org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-160, 10' at line 128
### The error may exist in file [/Users/zhangqiang/Documents/04-Project/ShangShuFang/SourceCode/shangshufang.apiservice/target/classes/mapping/UniversityStudentExercisesMapping.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT       A.student_exercises_id,       A.student_university_code,       B.university_name AS student_university_name,       A.student_school_id,       C.school_name AS student_school_name,       A.student_id,       F.full_name AS student_name,       F.photo AS student_photo,       F.cellphone,       F.enrollment_year,       N.ability_level,       N.position_site,       A.course_university_code,       D.university_name AS course_university_name,       A.course_school_id,       E.school_name AS course_school_name,       A.course_id,       G.course_name,       A.course_class,       A.technology_id,       I.technology_name,       A.learning_phase_id,       J.learning_phase_name,       A.knowledge_id,       K.knowledge_name,       A.exercises_document_id,       H.document_url AS exercises_document_url,       H.answer_url AS exercises_answer_url,       A.source_code_git_url,       A.data_status,       CASE WHEN A.data_status = 'P' THEN '未练习'       WHEN A.data_status = 'W' THEN '待批改'       WHEN A.data_status = 'R' THEN '待修改'       WHEN A.data_status = 'S' THEN '已通过'       ELSE '未知数据状态'       END AS data_status_text,       M.reviewer_id,       M.reviewer_name_teacher,       M.reviewer_name_student,       M.reviewer_type,       DATE_FORMAT(M.update_time, '%Y-%m-%d %H:%i:%s') AS review_time,       DATE_FORMAT(A.create_time, '%Y-%m-%d %H:%i:%s') AS create_time,       DATE_FORMAT(A.update_time, '%Y-%m-%d %H:%i:%s') AS update_time     FROM shangshufang_customer.university_student_exercises A     INNER JOIN shangshufang_customer.university B     ON A.student_university_code = B.university_code     INNER JOIN shangshufang_customer.school C     ON A.student_university_code = C.university_code     AND A.student_school_id = C.school_id     INNER JOIN shangshufang_customer.university D     ON A.course_university_code = D.university_code     INNER JOIN shangshufang_customer.school E     ON A.course_university_code = E.university_code     AND A.course_school_id = E.school_id     INNER JOIN shangshufang_customer.university_student F     ON A.student_id = F.student_id     INNER JOIN shangshufang_customer.course G     ON A.course_university_code = G.university_code     AND A.course_school_id = G.school_id     AND A.course_id = G.course_id     INNER JOIN shangshufang_base.technology_knowledge_exercises H     ON A.technology_id = H.technology_id     AND A.knowledge_id = H.knowledge_id     AND A.exercises_document_id = H.exercises_id     INNER JOIN shangshufang_base.technology I     ON A.technology_id = I.technology_id     INNER JOIN shangshufang_base.learning_phase J     ON A.learning_phase_id = J.learning_phase_id     INNER JOIN shangshufang_base.technology_knowledge K     ON A.technology_id = K.technology_id     AND A.learning_phase_id = K.learning_phase_id     AND A.knowledge_id = K.knowledge_id     AND K.data_status = 'A'     LEFT JOIN     (     SELECT     C.student_exercises_id,     C.reviewer_id,     C.reviewer_type,     D.full_name AS reviewer_name_teacher,     E.full_name AS reviewer_name_student,     C.update_time     FROM     (     SELECT     A.review_id,     A.student_exercises_id,     A.update_time,     B.reviewer_id,     B.reviewer_university_code,     B.reviewer_school_id,     B.reviewer_type     FROM     (     SELECT     student_exercises_id,     MAX(review_id) AS review_id,     MAX(update_time) AS update_time     FROM shangshufang_customer.university_student_exercises_review     GROUP BY student_exercises_id     ) A     INNER JOIN shangshufang_customer.university_student_exercises_review B     ON A.review_id = B.review_id     AND A.student_exercises_id = B.student_exercises_id     ) C     LEFT JOIN shangshufang_customer.university_customer D     ON C.reviewer_university_code = D.university_code     AND C.reviewer_school_id = D.school_id     AND C.reviewer_id = D.customer_id     AND C.reviewer_type = 'T'     LEFT JOIN shangshufang_customer.university_student E     ON C.reviewer_university_code = E.university_code     AND C.reviewer_school_id = E.school_id     AND C.reviewer_id = E.student_id     AND C.reviewer_type = 'S'     ) M     ON A.student_exercises_id = M.student_exercises_id     INNER JOIN shangshufang_customer.university_student_ability_analysis N     ON A.student_id = N.student_id     WHERE a.technology_id = ?     AND a.student_university_code = ?     AND a.student_school_id = ?     AND a.student_id = ?            ORDER BY A.course_class, A.knowledge_id, A.exercises_document_id, A.update_time DESC     LIMIT ?, ?;
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-160, 10' at line 128
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-160, 10' at line 128
[2020-06-06 22:23:20,929][http-nio-8081-exec-5][ERROR][com.shangshufang.apiservice.service.impl.UniversityStudentExercisesServiceImpl:101] org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-170, 10' at line 128
### The error may exist in file [/Users/zhangqiang/Documents/04-Project/ShangShuFang/SourceCode/shangshufang.apiservice/target/classes/mapping/UniversityStudentExercisesMapping.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT       A.student_exercises_id,       A.student_university_code,       B.university_name AS student_university_name,       A.student_school_id,       C.school_name AS student_school_name,       A.student_id,       F.full_name AS student_name,       F.photo AS student_photo,       F.cellphone,       F.enrollment_year,       N.ability_level,       N.position_site,       A.course_university_code,       D.university_name AS course_university_name,       A.course_school_id,       E.school_name AS course_school_name,       A.course_id,       G.course_name,       A.course_class,       A.technology_id,       I.technology_name,       A.learning_phase_id,       J.learning_phase_name,       A.knowledge_id,       K.knowledge_name,       A.exercises_document_id,       H.document_url AS exercises_document_url,       H.answer_url AS exercises_answer_url,       A.source_code_git_url,       A.data_status,       CASE WHEN A.data_status = 'P' THEN '未练习'       WHEN A.data_status = 'W' THEN '待批改'       WHEN A.data_status = 'R' THEN '待修改'       WHEN A.data_status = 'S' THEN '已通过'       ELSE '未知数据状态'       END AS data_status_text,       M.reviewer_id,       M.reviewer_name_teacher,       M.reviewer_name_student,       M.reviewer_type,       DATE_FORMAT(M.update_time, '%Y-%m-%d %H:%i:%s') AS review_time,       DATE_FORMAT(A.create_time, '%Y-%m-%d %H:%i:%s') AS create_time,       DATE_FORMAT(A.update_time, '%Y-%m-%d %H:%i:%s') AS update_time     FROM shangshufang_customer.university_student_exercises A     INNER JOIN shangshufang_customer.university B     ON A.student_university_code = B.university_code     INNER JOIN shangshufang_customer.school C     ON A.student_university_code = C.university_code     AND A.student_school_id = C.school_id     INNER JOIN shangshufang_customer.university D     ON A.course_university_code = D.university_code     INNER JOIN shangshufang_customer.school E     ON A.course_university_code = E.university_code     AND A.course_school_id = E.school_id     INNER JOIN shangshufang_customer.university_student F     ON A.student_id = F.student_id     INNER JOIN shangshufang_customer.course G     ON A.course_university_code = G.university_code     AND A.course_school_id = G.school_id     AND A.course_id = G.course_id     INNER JOIN shangshufang_base.technology_knowledge_exercises H     ON A.technology_id = H.technology_id     AND A.knowledge_id = H.knowledge_id     AND A.exercises_document_id = H.exercises_id     INNER JOIN shangshufang_base.technology I     ON A.technology_id = I.technology_id     INNER JOIN shangshufang_base.learning_phase J     ON A.learning_phase_id = J.learning_phase_id     INNER JOIN shangshufang_base.technology_knowledge K     ON A.technology_id = K.technology_id     AND A.learning_phase_id = K.learning_phase_id     AND A.knowledge_id = K.knowledge_id     AND K.data_status = 'A'     LEFT JOIN     (     SELECT     C.student_exercises_id,     C.reviewer_id,     C.reviewer_type,     D.full_name AS reviewer_name_teacher,     E.full_name AS reviewer_name_student,     C.update_time     FROM     (     SELECT     A.review_id,     A.student_exercises_id,     A.update_time,     B.reviewer_id,     B.reviewer_university_code,     B.reviewer_school_id,     B.reviewer_type     FROM     (     SELECT     student_exercises_id,     MAX(review_id) AS review_id,     MAX(update_time) AS update_time     FROM shangshufang_customer.university_student_exercises_review     GROUP BY student_exercises_id     ) A     INNER JOIN shangshufang_customer.university_student_exercises_review B     ON A.review_id = B.review_id     AND A.student_exercises_id = B.student_exercises_id     ) C     LEFT JOIN shangshufang_customer.university_customer D     ON C.reviewer_university_code = D.university_code     AND C.reviewer_school_id = D.school_id     AND C.reviewer_id = D.customer_id     AND C.reviewer_type = 'T'     LEFT JOIN shangshufang_customer.university_student E     ON C.reviewer_university_code = E.university_code     AND C.reviewer_school_id = E.school_id     AND C.reviewer_id = E.student_id     AND C.reviewer_type = 'S'     ) M     ON A.student_exercises_id = M.student_exercises_id     INNER JOIN shangshufang_customer.university_student_ability_analysis N     ON A.student_id = N.student_id     WHERE a.technology_id = ?     AND a.student_university_code = ?     AND a.student_school_id = ?     AND a.student_id = ?            ORDER BY A.course_class, A.knowledge_id, A.exercises_document_id, A.update_time DESC     LIMIT ?, ?;
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-170, 10' at line 128
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-170, 10' at line 128
[2020-06-06 22:23:20,929][http-nio-8081-exec-2][ERROR][com.shangshufang.apiservice.service.impl.UniversityStudentExercisesServiceImpl:101] org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-180, 10' at line 128
### The error may exist in file [/Users/zhangqiang/Documents/04-Project/ShangShuFang/SourceCode/shangshufang.apiservice/target/classes/mapping/UniversityStudentExercisesMapping.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT       A.student_exercises_id,       A.student_university_code,       B.university_name AS student_university_name,       A.student_school_id,       C.school_name AS student_school_name,       A.student_id,       F.full_name AS student_name,       F.photo AS student_photo,       F.cellphone,       F.enrollment_year,       N.ability_level,       N.position_site,       A.course_university_code,       D.university_name AS course_university_name,       A.course_school_id,       E.school_name AS course_school_name,       A.course_id,       G.course_name,       A.course_class,       A.technology_id,       I.technology_name,       A.learning_phase_id,       J.learning_phase_name,       A.knowledge_id,       K.knowledge_name,       A.exercises_document_id,       H.document_url AS exercises_document_url,       H.answer_url AS exercises_answer_url,       A.source_code_git_url,       A.data_status,       CASE WHEN A.data_status = 'P' THEN '未练习'       WHEN A.data_status = 'W' THEN '待批改'       WHEN A.data_status = 'R' THEN '待修改'       WHEN A.data_status = 'S' THEN '已通过'       ELSE '未知数据状态'       END AS data_status_text,       M.reviewer_id,       M.reviewer_name_teacher,       M.reviewer_name_student,       M.reviewer_type,       DATE_FORMAT(M.update_time, '%Y-%m-%d %H:%i:%s') AS review_time,       DATE_FORMAT(A.create_time, '%Y-%m-%d %H:%i:%s') AS create_time,       DATE_FORMAT(A.update_time, '%Y-%m-%d %H:%i:%s') AS update_time     FROM shangshufang_customer.university_student_exercises A     INNER JOIN shangshufang_customer.university B     ON A.student_university_code = B.university_code     INNER JOIN shangshufang_customer.school C     ON A.student_university_code = C.university_code     AND A.student_school_id = C.school_id     INNER JOIN shangshufang_customer.university D     ON A.course_university_code = D.university_code     INNER JOIN shangshufang_customer.school E     ON A.course_university_code = E.university_code     AND A.course_school_id = E.school_id     INNER JOIN shangshufang_customer.university_student F     ON A.student_id = F.student_id     INNER JOIN shangshufang_customer.course G     ON A.course_university_code = G.university_code     AND A.course_school_id = G.school_id     AND A.course_id = G.course_id     INNER JOIN shangshufang_base.technology_knowledge_exercises H     ON A.technology_id = H.technology_id     AND A.knowledge_id = H.knowledge_id     AND A.exercises_document_id = H.exercises_id     INNER JOIN shangshufang_base.technology I     ON A.technology_id = I.technology_id     INNER JOIN shangshufang_base.learning_phase J     ON A.learning_phase_id = J.learning_phase_id     INNER JOIN shangshufang_base.technology_knowledge K     ON A.technology_id = K.technology_id     AND A.learning_phase_id = K.learning_phase_id     AND A.knowledge_id = K.knowledge_id     AND K.data_status = 'A'     LEFT JOIN     (     SELECT     C.student_exercises_id,     C.reviewer_id,     C.reviewer_type,     D.full_name AS reviewer_name_teacher,     E.full_name AS reviewer_name_student,     C.update_time     FROM     (     SELECT     A.review_id,     A.student_exercises_id,     A.update_time,     B.reviewer_id,     B.reviewer_university_code,     B.reviewer_school_id,     B.reviewer_type     FROM     (     SELECT     student_exercises_id,     MAX(review_id) AS review_id,     MAX(update_time) AS update_time     FROM shangshufang_customer.university_student_exercises_review     GROUP BY student_exercises_id     ) A     INNER JOIN shangshufang_customer.university_student_exercises_review B     ON A.review_id = B.review_id     AND A.student_exercises_id = B.student_exercises_id     ) C     LEFT JOIN shangshufang_customer.university_customer D     ON C.reviewer_university_code = D.university_code     AND C.reviewer_school_id = D.school_id     AND C.reviewer_id = D.customer_id     AND C.reviewer_type = 'T'     LEFT JOIN shangshufang_customer.university_student E     ON C.reviewer_university_code = E.university_code     AND C.reviewer_school_id = E.school_id     AND C.reviewer_id = E.student_id     AND C.reviewer_type = 'S'     ) M     ON A.student_exercises_id = M.student_exercises_id     INNER JOIN shangshufang_customer.university_student_ability_analysis N     ON A.student_id = N.student_id     WHERE a.technology_id = ?     AND a.student_university_code = ?     AND a.student_school_id = ?     AND a.student_id = ?            ORDER BY A.course_class, A.knowledge_id, A.exercises_document_id, A.update_time DESC     LIMIT ?, ?;
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-180, 10' at line 128
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-180, 10' at line 128
[2020-06-06 22:23:20,929][http-nio-8081-exec-8][ERROR][com.shangshufang.apiservice.service.impl.UniversityStudentExercisesServiceImpl:101] org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-190, 10' at line 128
### The error may exist in file [/Users/zhangqiang/Documents/04-Project/ShangShuFang/SourceCode/shangshufang.apiservice/target/classes/mapping/UniversityStudentExercisesMapping.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT       A.student_exercises_id,       A.student_university_code,       B.university_name AS student_university_name,       A.student_school_id,       C.school_name AS student_school_name,       A.student_id,       F.full_name AS student_name,       F.photo AS student_photo,       F.cellphone,       F.enrollment_year,       N.ability_level,       N.position_site,       A.course_university_code,       D.university_name AS course_university_name,       A.course_school_id,       E.school_name AS course_school_name,       A.course_id,       G.course_name,       A.course_class,       A.technology_id,       I.technology_name,       A.learning_phase_id,       J.learning_phase_name,       A.knowledge_id,       K.knowledge_name,       A.exercises_document_id,       H.document_url AS exercises_document_url,       H.answer_url AS exercises_answer_url,       A.source_code_git_url,       A.data_status,       CASE WHEN A.data_status = 'P' THEN '未练习'       WHEN A.data_status = 'W' THEN '待批改'       WHEN A.data_status = 'R' THEN '待修改'       WHEN A.data_status = 'S' THEN '已通过'       ELSE '未知数据状态'       END AS data_status_text,       M.reviewer_id,       M.reviewer_name_teacher,       M.reviewer_name_student,       M.reviewer_type,       DATE_FORMAT(M.update_time, '%Y-%m-%d %H:%i:%s') AS review_time,       DATE_FORMAT(A.create_time, '%Y-%m-%d %H:%i:%s') AS create_time,       DATE_FORMAT(A.update_time, '%Y-%m-%d %H:%i:%s') AS update_time     FROM shangshufang_customer.university_student_exercises A     INNER JOIN shangshufang_customer.university B     ON A.student_university_code = B.university_code     INNER JOIN shangshufang_customer.school C     ON A.student_university_code = C.university_code     AND A.student_school_id = C.school_id     INNER JOIN shangshufang_customer.university D     ON A.course_university_code = D.university_code     INNER JOIN shangshufang_customer.school E     ON A.course_university_code = E.university_code     AND A.course_school_id = E.school_id     INNER JOIN shangshufang_customer.university_student F     ON A.student_id = F.student_id     INNER JOIN shangshufang_customer.course G     ON A.course_university_code = G.university_code     AND A.course_school_id = G.school_id     AND A.course_id = G.course_id     INNER JOIN shangshufang_base.technology_knowledge_exercises H     ON A.technology_id = H.technology_id     AND A.knowledge_id = H.knowledge_id     AND A.exercises_document_id = H.exercises_id     INNER JOIN shangshufang_base.technology I     ON A.technology_id = I.technology_id     INNER JOIN shangshufang_base.learning_phase J     ON A.learning_phase_id = J.learning_phase_id     INNER JOIN shangshufang_base.technology_knowledge K     ON A.technology_id = K.technology_id     AND A.learning_phase_id = K.learning_phase_id     AND A.knowledge_id = K.knowledge_id     AND K.data_status = 'A'     LEFT JOIN     (     SELECT     C.student_exercises_id,     C.reviewer_id,     C.reviewer_type,     D.full_name AS reviewer_name_teacher,     E.full_name AS reviewer_name_student,     C.update_time     FROM     (     SELECT     A.review_id,     A.student_exercises_id,     A.update_time,     B.reviewer_id,     B.reviewer_university_code,     B.reviewer_school_id,     B.reviewer_type     FROM     (     SELECT     student_exercises_id,     MAX(review_id) AS review_id,     MAX(update_time) AS update_time     FROM shangshufang_customer.university_student_exercises_review     GROUP BY student_exercises_id     ) A     INNER JOIN shangshufang_customer.university_student_exercises_review B     ON A.review_id = B.review_id     AND A.student_exercises_id = B.student_exercises_id     ) C     LEFT JOIN shangshufang_customer.university_customer D     ON C.reviewer_university_code = D.university_code     AND C.reviewer_school_id = D.school_id     AND C.reviewer_id = D.customer_id     AND C.reviewer_type = 'T'     LEFT JOIN shangshufang_customer.university_student E     ON C.reviewer_university_code = E.university_code     AND C.reviewer_school_id = E.school_id     AND C.reviewer_id = E.student_id     AND C.reviewer_type = 'S'     ) M     ON A.student_exercises_id = M.student_exercises_id     INNER JOIN shangshufang_customer.university_student_ability_analysis N     ON A.student_id = N.student_id     WHERE a.technology_id = ?     AND a.student_university_code = ?     AND a.student_school_id = ?     AND a.student_id = ?            ORDER BY A.course_class, A.knowledge_id, A.exercises_document_id, A.update_time DESC     LIMIT ?, ?;
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-190, 10' at line 128
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-190, 10' at line 128
[2020-06-06 22:23:20,934][http-nio-8081-exec-3][ERROR][com.shangshufang.apiservice.service.impl.UniversityStudentExercisesServiceImpl:101] org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-70, 10' at line 128
### The error may exist in file [/Users/zhangqiang/Documents/04-Project/ShangShuFang/SourceCode/shangshufang.apiservice/target/classes/mapping/UniversityStudentExercisesMapping.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT       A.student_exercises_id,       A.student_university_code,       B.university_name AS student_university_name,       A.student_school_id,       C.school_name AS student_school_name,       A.student_id,       F.full_name AS student_name,       F.photo AS student_photo,       F.cellphone,       F.enrollment_year,       N.ability_level,       N.position_site,       A.course_university_code,       D.university_name AS course_university_name,       A.course_school_id,       E.school_name AS course_school_name,       A.course_id,       G.course_name,       A.course_class,       A.technology_id,       I.technology_name,       A.learning_phase_id,       J.learning_phase_name,       A.knowledge_id,       K.knowledge_name,       A.exercises_document_id,       H.document_url AS exercises_document_url,       H.answer_url AS exercises_answer_url,       A.source_code_git_url,       A.data_status,       CASE WHEN A.data_status = 'P' THEN '未练习'       WHEN A.data_status = 'W' THEN '待批改'       WHEN A.data_status = 'R' THEN '待修改'       WHEN A.data_status = 'S' THEN '已通过'       ELSE '未知数据状态'       END AS data_status_text,       M.reviewer_id,       M.reviewer_name_teacher,       M.reviewer_name_student,       M.reviewer_type,       DATE_FORMAT(M.update_time, '%Y-%m-%d %H:%i:%s') AS review_time,       DATE_FORMAT(A.create_time, '%Y-%m-%d %H:%i:%s') AS create_time,       DATE_FORMAT(A.update_time, '%Y-%m-%d %H:%i:%s') AS update_time     FROM shangshufang_customer.university_student_exercises A     INNER JOIN shangshufang_customer.university B     ON A.student_university_code = B.university_code     INNER JOIN shangshufang_customer.school C     ON A.student_university_code = C.university_code     AND A.student_school_id = C.school_id     INNER JOIN shangshufang_customer.university D     ON A.course_university_code = D.university_code     INNER JOIN shangshufang_customer.school E     ON A.course_university_code = E.university_code     AND A.course_school_id = E.school_id     INNER JOIN shangshufang_customer.university_student F     ON A.student_id = F.student_id     INNER JOIN shangshufang_customer.course G     ON A.course_university_code = G.university_code     AND A.course_school_id = G.school_id     AND A.course_id = G.course_id     INNER JOIN shangshufang_base.technology_knowledge_exercises H     ON A.technology_id = H.technology_id     AND A.knowledge_id = H.knowledge_id     AND A.exercises_document_id = H.exercises_id     INNER JOIN shangshufang_base.technology I     ON A.technology_id = I.technology_id     INNER JOIN shangshufang_base.learning_phase J     ON A.learning_phase_id = J.learning_phase_id     INNER JOIN shangshufang_base.technology_knowledge K     ON A.technology_id = K.technology_id     AND A.learning_phase_id = K.learning_phase_id     AND A.knowledge_id = K.knowledge_id     AND K.data_status = 'A'     LEFT JOIN     (     SELECT     C.student_exercises_id,     C.reviewer_id,     C.reviewer_type,     D.full_name AS reviewer_name_teacher,     E.full_name AS reviewer_name_student,     C.update_time     FROM     (     SELECT     A.review_id,     A.student_exercises_id,     A.update_time,     B.reviewer_id,     B.reviewer_university_code,     B.reviewer_school_id,     B.reviewer_type     FROM     (     SELECT     student_exercises_id,     MAX(review_id) AS review_id,     MAX(update_time) AS update_time     FROM shangshufang_customer.university_student_exercises_review     GROUP BY student_exercises_id     ) A     INNER JOIN shangshufang_customer.university_student_exercises_review B     ON A.review_id = B.review_id     AND A.student_exercises_id = B.student_exercises_id     ) C     LEFT JOIN shangshufang_customer.university_customer D     ON C.reviewer_university_code = D.university_code     AND C.reviewer_school_id = D.school_id     AND C.reviewer_id = D.customer_id     AND C.reviewer_type = 'T'     LEFT JOIN shangshufang_customer.university_student E     ON C.reviewer_university_code = E.university_code     AND C.reviewer_school_id = E.school_id     AND C.reviewer_id = E.student_id     AND C.reviewer_type = 'S'     ) M     ON A.student_exercises_id = M.student_exercises_id     INNER JOIN shangshufang_customer.university_student_ability_analysis N     ON A.student_id = N.student_id     WHERE a.technology_id = ?     AND a.student_university_code = ?     AND a.student_school_id = ?     AND a.student_id = ?            ORDER BY A.course_class, A.knowledge_id, A.exercises_document_id, A.update_time DESC     LIMIT ?, ?;
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-70, 10' at line 128
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-70, 10' at line 128
[2020-06-06 22:23:20,934][http-nio-8081-exec-9][ERROR][com.shangshufang.apiservice.service.impl.UniversityStudentExercisesServiceImpl:101] org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-100, 10' at line 128
### The error may exist in file [/Users/zhangqiang/Documents/04-Project/ShangShuFang/SourceCode/shangshufang.apiservice/target/classes/mapping/UniversityStudentExercisesMapping.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT       A.student_exercises_id,       A.student_university_code,       B.university_name AS student_university_name,       A.student_school_id,       C.school_name AS student_school_name,       A.student_id,       F.full_name AS student_name,       F.photo AS student_photo,       F.cellphone,       F.enrollment_year,       N.ability_level,       N.position_site,       A.course_university_code,       D.university_name AS course_university_name,       A.course_school_id,       E.school_name AS course_school_name,       A.course_id,       G.course_name,       A.course_class,       A.technology_id,       I.technology_name,       A.learning_phase_id,       J.learning_phase_name,       A.knowledge_id,       K.knowledge_name,       A.exercises_document_id,       H.document_url AS exercises_document_url,       H.answer_url AS exercises_answer_url,       A.source_code_git_url,       A.data_status,       CASE WHEN A.data_status = 'P' THEN '未练习'       WHEN A.data_status = 'W' THEN '待批改'       WHEN A.data_status = 'R' THEN '待修改'       WHEN A.data_status = 'S' THEN '已通过'       ELSE '未知数据状态'       END AS data_status_text,       M.reviewer_id,       M.reviewer_name_teacher,       M.reviewer_name_student,       M.reviewer_type,       DATE_FORMAT(M.update_time, '%Y-%m-%d %H:%i:%s') AS review_time,       DATE_FORMAT(A.create_time, '%Y-%m-%d %H:%i:%s') AS create_time,       DATE_FORMAT(A.update_time, '%Y-%m-%d %H:%i:%s') AS update_time     FROM shangshufang_customer.university_student_exercises A     INNER JOIN shangshufang_customer.university B     ON A.student_university_code = B.university_code     INNER JOIN shangshufang_customer.school C     ON A.student_university_code = C.university_code     AND A.student_school_id = C.school_id     INNER JOIN shangshufang_customer.university D     ON A.course_university_code = D.university_code     INNER JOIN shangshufang_customer.school E     ON A.course_university_code = E.university_code     AND A.course_school_id = E.school_id     INNER JOIN shangshufang_customer.university_student F     ON A.student_id = F.student_id     INNER JOIN shangshufang_customer.course G     ON A.course_university_code = G.university_code     AND A.course_school_id = G.school_id     AND A.course_id = G.course_id     INNER JOIN shangshufang_base.technology_knowledge_exercises H     ON A.technology_id = H.technology_id     AND A.knowledge_id = H.knowledge_id     AND A.exercises_document_id = H.exercises_id     INNER JOIN shangshufang_base.technology I     ON A.technology_id = I.technology_id     INNER JOIN shangshufang_base.learning_phase J     ON A.learning_phase_id = J.learning_phase_id     INNER JOIN shangshufang_base.technology_knowledge K     ON A.technology_id = K.technology_id     AND A.learning_phase_id = K.learning_phase_id     AND A.knowledge_id = K.knowledge_id     AND K.data_status = 'A'     LEFT JOIN     (     SELECT     C.student_exercises_id,     C.reviewer_id,     C.reviewer_type,     D.full_name AS reviewer_name_teacher,     E.full_name AS reviewer_name_student,     C.update_time     FROM     (     SELECT     A.review_id,     A.student_exercises_id,     A.update_time,     B.reviewer_id,     B.reviewer_university_code,     B.reviewer_school_id,     B.reviewer_type     FROM     (     SELECT     student_exercises_id,     MAX(review_id) AS review_id,     MAX(update_time) AS update_time     FROM shangshufang_customer.university_student_exercises_review     GROUP BY student_exercises_id     ) A     INNER JOIN shangshufang_customer.university_student_exercises_review B     ON A.review_id = B.review_id     AND A.student_exercises_id = B.student_exercises_id     ) C     LEFT JOIN shangshufang_customer.university_customer D     ON C.reviewer_university_code = D.university_code     AND C.reviewer_school_id = D.school_id     AND C.reviewer_id = D.customer_id     AND C.reviewer_type = 'T'     LEFT JOIN shangshufang_customer.university_student E     ON C.reviewer_university_code = E.university_code     AND C.reviewer_school_id = E.school_id     AND C.reviewer_id = E.student_id     AND C.reviewer_type = 'S'     ) M     ON A.student_exercises_id = M.student_exercises_id     INNER JOIN shangshufang_customer.university_student_ability_analysis N     ON A.student_id = N.student_id     WHERE a.technology_id = ?     AND a.student_university_code = ?     AND a.student_school_id = ?     AND a.student_id = ?            ORDER BY A.course_class, A.knowledge_id, A.exercises_document_id, A.update_time DESC     LIMIT ?, ?;
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-100, 10' at line 128
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-100, 10' at line 128
[2020-06-06 22:23:20,946][http-nio-8081-exec-7][ERROR][com.shangshufang.apiservice.service.impl.UniversityStudentExercisesServiceImpl:101] org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-210, 10' at line 128
### The error may exist in file [/Users/zhangqiang/Documents/04-Project/ShangShuFang/SourceCode/shangshufang.apiservice/target/classes/mapping/UniversityStudentExercisesMapping.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT       A.student_exercises_id,       A.student_university_code,       B.university_name AS student_university_name,       A.student_school_id,       C.school_name AS student_school_name,       A.student_id,       F.full_name AS student_name,       F.photo AS student_photo,       F.cellphone,       F.enrollment_year,       N.ability_level,       N.position_site,       A.course_university_code,       D.university_name AS course_university_name,       A.course_school_id,       E.school_name AS course_school_name,       A.course_id,       G.course_name,       A.course_class,       A.technology_id,       I.technology_name,       A.learning_phase_id,       J.learning_phase_name,       A.knowledge_id,       K.knowledge_name,       A.exercises_document_id,       H.document_url AS exercises_document_url,       H.answer_url AS exercises_answer_url,       A.source_code_git_url,       A.data_status,       CASE WHEN A.data_status = 'P' THEN '未练习'       WHEN A.data_status = 'W' THEN '待批改'       WHEN A.data_status = 'R' THEN '待修改'       WHEN A.data_status = 'S' THEN '已通过'       ELSE '未知数据状态'       END AS data_status_text,       M.reviewer_id,       M.reviewer_name_teacher,       M.reviewer_name_student,       M.reviewer_type,       DATE_FORMAT(M.update_time, '%Y-%m-%d %H:%i:%s') AS review_time,       DATE_FORMAT(A.create_time, '%Y-%m-%d %H:%i:%s') AS create_time,       DATE_FORMAT(A.update_time, '%Y-%m-%d %H:%i:%s') AS update_time     FROM shangshufang_customer.university_student_exercises A     INNER JOIN shangshufang_customer.university B     ON A.student_university_code = B.university_code     INNER JOIN shangshufang_customer.school C     ON A.student_university_code = C.university_code     AND A.student_school_id = C.school_id     INNER JOIN shangshufang_customer.university D     ON A.course_university_code = D.university_code     INNER JOIN shangshufang_customer.school E     ON A.course_university_code = E.university_code     AND A.course_school_id = E.school_id     INNER JOIN shangshufang_customer.university_student F     ON A.student_id = F.student_id     INNER JOIN shangshufang_customer.course G     ON A.course_university_code = G.university_code     AND A.course_school_id = G.school_id     AND A.course_id = G.course_id     INNER JOIN shangshufang_base.technology_knowledge_exercises H     ON A.technology_id = H.technology_id     AND A.knowledge_id = H.knowledge_id     AND A.exercises_document_id = H.exercises_id     INNER JOIN shangshufang_base.technology I     ON A.technology_id = I.technology_id     INNER JOIN shangshufang_base.learning_phase J     ON A.learning_phase_id = J.learning_phase_id     INNER JOIN shangshufang_base.technology_knowledge K     ON A.technology_id = K.technology_id     AND A.learning_phase_id = K.learning_phase_id     AND A.knowledge_id = K.knowledge_id     AND K.data_status = 'A'     LEFT JOIN     (     SELECT     C.student_exercises_id,     C.reviewer_id,     C.reviewer_type,     D.full_name AS reviewer_name_teacher,     E.full_name AS reviewer_name_student,     C.update_time     FROM     (     SELECT     A.review_id,     A.student_exercises_id,     A.update_time,     B.reviewer_id,     B.reviewer_university_code,     B.reviewer_school_id,     B.reviewer_type     FROM     (     SELECT     student_exercises_id,     MAX(review_id) AS review_id,     MAX(update_time) AS update_time     FROM shangshufang_customer.university_student_exercises_review     GROUP BY student_exercises_id     ) A     INNER JOIN shangshufang_customer.university_student_exercises_review B     ON A.review_id = B.review_id     AND A.student_exercises_id = B.student_exercises_id     ) C     LEFT JOIN shangshufang_customer.university_customer D     ON C.reviewer_university_code = D.university_code     AND C.reviewer_school_id = D.school_id     AND C.reviewer_id = D.customer_id     AND C.reviewer_type = 'T'     LEFT JOIN shangshufang_customer.university_student E     ON C.reviewer_university_code = E.university_code     AND C.reviewer_school_id = E.school_id     AND C.reviewer_id = E.student_id     AND C.reviewer_type = 'S'     ) M     ON A.student_exercises_id = M.student_exercises_id     INNER JOIN shangshufang_customer.university_student_ability_analysis N     ON A.student_id = N.student_id     WHERE a.technology_id = ?     AND a.student_university_code = ?     AND a.student_school_id = ?     AND a.student_id = ?            ORDER BY A.course_class, A.knowledge_id, A.exercises_document_id, A.update_time DESC     LIMIT ?, ?;
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-210, 10' at line 128
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-210, 10' at line 128
[2020-06-06 22:23:20,946][http-nio-8081-exec-4][ERROR][com.shangshufang.apiservice.service.impl.UniversityStudentExercisesServiceImpl:101] org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-200, 10' at line 128
### The error may exist in file [/Users/zhangqiang/Documents/04-Project/ShangShuFang/SourceCode/shangshufang.apiservice/target/classes/mapping/UniversityStudentExercisesMapping.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT       A.student_exercises_id,       A.student_university_code,       B.university_name AS student_university_name,       A.student_school_id,       C.school_name AS student_school_name,       A.student_id,       F.full_name AS student_name,       F.photo AS student_photo,       F.cellphone,       F.enrollment_year,       N.ability_level,       N.position_site,       A.course_university_code,       D.university_name AS course_university_name,       A.course_school_id,       E.school_name AS course_school_name,       A.course_id,       G.course_name,       A.course_class,       A.technology_id,       I.technology_name,       A.learning_phase_id,       J.learning_phase_name,       A.knowledge_id,       K.knowledge_name,       A.exercises_document_id,       H.document_url AS exercises_document_url,       H.answer_url AS exercises_answer_url,       A.source_code_git_url,       A.data_status,       CASE WHEN A.data_status = 'P' THEN '未练习'       WHEN A.data_status = 'W' THEN '待批改'       WHEN A.data_status = 'R' THEN '待修改'       WHEN A.data_status = 'S' THEN '已通过'       ELSE '未知数据状态'       END AS data_status_text,       M.reviewer_id,       M.reviewer_name_teacher,       M.reviewer_name_student,       M.reviewer_type,       DATE_FORMAT(M.update_time, '%Y-%m-%d %H:%i:%s') AS review_time,       DATE_FORMAT(A.create_time, '%Y-%m-%d %H:%i:%s') AS create_time,       DATE_FORMAT(A.update_time, '%Y-%m-%d %H:%i:%s') AS update_time     FROM shangshufang_customer.university_student_exercises A     INNER JOIN shangshufang_customer.university B     ON A.student_university_code = B.university_code     INNER JOIN shangshufang_customer.school C     ON A.student_university_code = C.university_code     AND A.student_school_id = C.school_id     INNER JOIN shangshufang_customer.university D     ON A.course_university_code = D.university_code     INNER JOIN shangshufang_customer.school E     ON A.course_university_code = E.university_code     AND A.course_school_id = E.school_id     INNER JOIN shangshufang_customer.university_student F     ON A.student_id = F.student_id     INNER JOIN shangshufang_customer.course G     ON A.course_university_code = G.university_code     AND A.course_school_id = G.school_id     AND A.course_id = G.course_id     INNER JOIN shangshufang_base.technology_knowledge_exercises H     ON A.technology_id = H.technology_id     AND A.knowledge_id = H.knowledge_id     AND A.exercises_document_id = H.exercises_id     INNER JOIN shangshufang_base.technology I     ON A.technology_id = I.technology_id     INNER JOIN shangshufang_base.learning_phase J     ON A.learning_phase_id = J.learning_phase_id     INNER JOIN shangshufang_base.technology_knowledge K     ON A.technology_id = K.technology_id     AND A.learning_phase_id = K.learning_phase_id     AND A.knowledge_id = K.knowledge_id     AND K.data_status = 'A'     LEFT JOIN     (     SELECT     C.student_exercises_id,     C.reviewer_id,     C.reviewer_type,     D.full_name AS reviewer_name_teacher,     E.full_name AS reviewer_name_student,     C.update_time     FROM     (     SELECT     A.review_id,     A.student_exercises_id,     A.update_time,     B.reviewer_id,     B.reviewer_university_code,     B.reviewer_school_id,     B.reviewer_type     FROM     (     SELECT     student_exercises_id,     MAX(review_id) AS review_id,     MAX(update_time) AS update_time     FROM shangshufang_customer.university_student_exercises_review     GROUP BY student_exercises_id     ) A     INNER JOIN shangshufang_customer.university_student_exercises_review B     ON A.review_id = B.review_id     AND A.student_exercises_id = B.student_exercises_id     ) C     LEFT JOIN shangshufang_customer.university_customer D     ON C.reviewer_university_code = D.university_code     AND C.reviewer_school_id = D.school_id     AND C.reviewer_id = D.customer_id     AND C.reviewer_type = 'T'     LEFT JOIN shangshufang_customer.university_student E     ON C.reviewer_university_code = E.university_code     AND C.reviewer_school_id = E.school_id     AND C.reviewer_id = E.student_id     AND C.reviewer_type = 'S'     ) M     ON A.student_exercises_id = M.student_exercises_id     INNER JOIN shangshufang_customer.university_student_ability_analysis N     ON A.student_id = N.student_id     WHERE a.technology_id = ?     AND a.student_university_code = ?     AND a.student_school_id = ?     AND a.student_id = ?            ORDER BY A.course_class, A.knowledge_id, A.exercises_document_id, A.update_time DESC     LIMIT ?, ?;
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-200, 10' at line 128
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-200, 10' at line 128
[2020-06-06 22:23:20,956][http-nio-8081-exec-10][ERROR][com.shangshufang.apiservice.service.impl.UniversityStudentExercisesServiceImpl:101] org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-110, 10' at line 128
### The error may exist in file [/Users/zhangqiang/Documents/04-Project/ShangShuFang/SourceCode/shangshufang.apiservice/target/classes/mapping/UniversityStudentExercisesMapping.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT       A.student_exercises_id,       A.student_university_code,       B.university_name AS student_university_name,       A.student_school_id,       C.school_name AS student_school_name,       A.student_id,       F.full_name AS student_name,       F.photo AS student_photo,       F.cellphone,       F.enrollment_year,       N.ability_level,       N.position_site,       A.course_university_code,       D.university_name AS course_university_name,       A.course_school_id,       E.school_name AS course_school_name,       A.course_id,       G.course_name,       A.course_class,       A.technology_id,       I.technology_name,       A.learning_phase_id,       J.learning_phase_name,       A.knowledge_id,       K.knowledge_name,       A.exercises_document_id,       H.document_url AS exercises_document_url,       H.answer_url AS exercises_answer_url,       A.source_code_git_url,       A.data_status,       CASE WHEN A.data_status = 'P' THEN '未练习'       WHEN A.data_status = 'W' THEN '待批改'       WHEN A.data_status = 'R' THEN '待修改'       WHEN A.data_status = 'S' THEN '已通过'       ELSE '未知数据状态'       END AS data_status_text,       M.reviewer_id,       M.reviewer_name_teacher,       M.reviewer_name_student,       M.reviewer_type,       DATE_FORMAT(M.update_time, '%Y-%m-%d %H:%i:%s') AS review_time,       DATE_FORMAT(A.create_time, '%Y-%m-%d %H:%i:%s') AS create_time,       DATE_FORMAT(A.update_time, '%Y-%m-%d %H:%i:%s') AS update_time     FROM shangshufang_customer.university_student_exercises A     INNER JOIN shangshufang_customer.university B     ON A.student_university_code = B.university_code     INNER JOIN shangshufang_customer.school C     ON A.student_university_code = C.university_code     AND A.student_school_id = C.school_id     INNER JOIN shangshufang_customer.university D     ON A.course_university_code = D.university_code     INNER JOIN shangshufang_customer.school E     ON A.course_university_code = E.university_code     AND A.course_school_id = E.school_id     INNER JOIN shangshufang_customer.university_student F     ON A.student_id = F.student_id     INNER JOIN shangshufang_customer.course G     ON A.course_university_code = G.university_code     AND A.course_school_id = G.school_id     AND A.course_id = G.course_id     INNER JOIN shangshufang_base.technology_knowledge_exercises H     ON A.technology_id = H.technology_id     AND A.knowledge_id = H.knowledge_id     AND A.exercises_document_id = H.exercises_id     INNER JOIN shangshufang_base.technology I     ON A.technology_id = I.technology_id     INNER JOIN shangshufang_base.learning_phase J     ON A.learning_phase_id = J.learning_phase_id     INNER JOIN shangshufang_base.technology_knowledge K     ON A.technology_id = K.technology_id     AND A.learning_phase_id = K.learning_phase_id     AND A.knowledge_id = K.knowledge_id     AND K.data_status = 'A'     LEFT JOIN     (     SELECT     C.student_exercises_id,     C.reviewer_id,     C.reviewer_type,     D.full_name AS reviewer_name_teacher,     E.full_name AS reviewer_name_student,     C.update_time     FROM     (     SELECT     A.review_id,     A.student_exercises_id,     A.update_time,     B.reviewer_id,     B.reviewer_university_code,     B.reviewer_school_id,     B.reviewer_type     FROM     (     SELECT     student_exercises_id,     MAX(review_id) AS review_id,     MAX(update_time) AS update_time     FROM shangshufang_customer.university_student_exercises_review     GROUP BY student_exercises_id     ) A     INNER JOIN shangshufang_customer.university_student_exercises_review B     ON A.review_id = B.review_id     AND A.student_exercises_id = B.student_exercises_id     ) C     LEFT JOIN shangshufang_customer.university_customer D     ON C.reviewer_university_code = D.university_code     AND C.reviewer_school_id = D.school_id     AND C.reviewer_id = D.customer_id     AND C.reviewer_type = 'T'     LEFT JOIN shangshufang_customer.university_student E     ON C.reviewer_university_code = E.university_code     AND C.reviewer_school_id = E.school_id     AND C.reviewer_id = E.student_id     AND C.reviewer_type = 'S'     ) M     ON A.student_exercises_id = M.student_exercises_id     INNER JOIN shangshufang_customer.university_student_ability_analysis N     ON A.student_id = N.student_id     WHERE a.technology_id = ?     AND a.student_university_code = ?     AND a.student_school_id = ?     AND a.student_id = ?            ORDER BY A.course_class, A.knowledge_id, A.exercises_document_id, A.update_time DESC     LIMIT ?, ?;
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-110, 10' at line 128
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-110, 10' at line 128
[2020-06-06 22:25:11,223][http-nio-8081-exec-7][ERROR][com.shangshufang.apiservice.service.impl.UniversityStudentExercisesServiceImpl:101] org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-10, 10' at line 128
### The error may exist in file [/Users/zhangqiang/Documents/04-Project/ShangShuFang/SourceCode/shangshufang.apiservice/target/classes/mapping/UniversityStudentExercisesMapping.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT       A.student_exercises_id,       A.student_university_code,       B.university_name AS student_university_name,       A.student_school_id,       C.school_name AS student_school_name,       A.student_id,       F.full_name AS student_name,       F.photo AS student_photo,       F.cellphone,       F.enrollment_year,       N.ability_level,       N.position_site,       A.course_university_code,       D.university_name AS course_university_name,       A.course_school_id,       E.school_name AS course_school_name,       A.course_id,       G.course_name,       A.course_class,       A.technology_id,       I.technology_name,       A.learning_phase_id,       J.learning_phase_name,       A.knowledge_id,       K.knowledge_name,       A.exercises_document_id,       H.document_url AS exercises_document_url,       H.answer_url AS exercises_answer_url,       A.source_code_git_url,       A.data_status,       CASE WHEN A.data_status = 'P' THEN '未练习'       WHEN A.data_status = 'W' THEN '待批改'       WHEN A.data_status = 'R' THEN '待修改'       WHEN A.data_status = 'S' THEN '已通过'       ELSE '未知数据状态'       END AS data_status_text,       M.reviewer_id,       M.reviewer_name_teacher,       M.reviewer_name_student,       M.reviewer_type,       DATE_FORMAT(M.update_time, '%Y-%m-%d %H:%i:%s') AS review_time,       DATE_FORMAT(A.create_time, '%Y-%m-%d %H:%i:%s') AS create_time,       DATE_FORMAT(A.update_time, '%Y-%m-%d %H:%i:%s') AS update_time     FROM shangshufang_customer.university_student_exercises A     INNER JOIN shangshufang_customer.university B     ON A.student_university_code = B.university_code     INNER JOIN shangshufang_customer.school C     ON A.student_university_code = C.university_code     AND A.student_school_id = C.school_id     INNER JOIN shangshufang_customer.university D     ON A.course_university_code = D.university_code     INNER JOIN shangshufang_customer.school E     ON A.course_university_code = E.university_code     AND A.course_school_id = E.school_id     INNER JOIN shangshufang_customer.university_student F     ON A.student_id = F.student_id     INNER JOIN shangshufang_customer.course G     ON A.course_university_code = G.university_code     AND A.course_school_id = G.school_id     AND A.course_id = G.course_id     INNER JOIN shangshufang_base.technology_knowledge_exercises H     ON A.technology_id = H.technology_id     AND A.knowledge_id = H.knowledge_id     AND A.exercises_document_id = H.exercises_id     INNER JOIN shangshufang_base.technology I     ON A.technology_id = I.technology_id     INNER JOIN shangshufang_base.learning_phase J     ON A.learning_phase_id = J.learning_phase_id     INNER JOIN shangshufang_base.technology_knowledge K     ON A.technology_id = K.technology_id     AND A.learning_phase_id = K.learning_phase_id     AND A.knowledge_id = K.knowledge_id     AND K.data_status = 'A'     LEFT JOIN     (     SELECT     C.student_exercises_id,     C.reviewer_id,     C.reviewer_type,     D.full_name AS reviewer_name_teacher,     E.full_name AS reviewer_name_student,     C.update_time     FROM     (     SELECT     A.review_id,     A.student_exercises_id,     A.update_time,     B.reviewer_id,     B.reviewer_university_code,     B.reviewer_school_id,     B.reviewer_type     FROM     (     SELECT     student_exercises_id,     MAX(review_id) AS review_id,     MAX(update_time) AS update_time     FROM shangshufang_customer.university_student_exercises_review     GROUP BY student_exercises_id     ) A     INNER JOIN shangshufang_customer.university_student_exercises_review B     ON A.review_id = B.review_id     AND A.student_exercises_id = B.student_exercises_id     ) C     LEFT JOIN shangshufang_customer.university_customer D     ON C.reviewer_university_code = D.university_code     AND C.reviewer_school_id = D.school_id     AND C.reviewer_id = D.customer_id     AND C.reviewer_type = 'T'     LEFT JOIN shangshufang_customer.university_student E     ON C.reviewer_university_code = E.university_code     AND C.reviewer_school_id = E.school_id     AND C.reviewer_id = E.student_id     AND C.reviewer_type = 'S'     ) M     ON A.student_exercises_id = M.student_exercises_id     INNER JOIN shangshufang_customer.university_student_ability_analysis N     ON A.student_id = N.student_id     WHERE a.technology_id = ?     AND a.student_university_code = ?     AND a.student_school_id = ?     AND a.student_id = ?            ORDER BY A.course_class, A.knowledge_id, A.exercises_document_id, A.update_time DESC     LIMIT ?, ?;
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-10, 10' at line 128
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-10, 10' at line 128
[2020-06-06 22:42:19,014][http-nio-8081-exec-7][ERROR][com.shangshufang.apiservice.service.impl.UniversityStudentExercisesServiceImpl:101] org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-30, 10' at line 128
### The error may exist in file [/Users/zhangqiang/Documents/04-Project/ShangShuFang/SourceCode/shangshufang.apiservice/target/classes/mapping/UniversityStudentExercisesMapping.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT       A.student_exercises_id,       A.student_university_code,       B.university_name AS student_university_name,       A.student_school_id,       C.school_name AS student_school_name,       A.student_id,       F.full_name AS student_name,       F.photo AS student_photo,       F.cellphone,       F.enrollment_year,       N.ability_level,       N.position_site,       A.course_university_code,       D.university_name AS course_university_name,       A.course_school_id,       E.school_name AS course_school_name,       A.course_id,       G.course_name,       A.course_class,       A.technology_id,       I.technology_name,       A.learning_phase_id,       J.learning_phase_name,       A.knowledge_id,       K.knowledge_name,       A.exercises_document_id,       H.document_url AS exercises_document_url,       H.answer_url AS exercises_answer_url,       A.source_code_git_url,       A.data_status,       CASE WHEN A.data_status = 'P' THEN '未练习'       WHEN A.data_status = 'W' THEN '待批改'       WHEN A.data_status = 'R' THEN '待修改'       WHEN A.data_status = 'S' THEN '已通过'       ELSE '未知数据状态'       END AS data_status_text,       M.reviewer_id,       M.reviewer_name_teacher,       M.reviewer_name_student,       M.reviewer_type,       DATE_FORMAT(M.update_time, '%Y-%m-%d %H:%i:%s') AS review_time,       DATE_FORMAT(A.create_time, '%Y-%m-%d %H:%i:%s') AS create_time,       DATE_FORMAT(A.update_time, '%Y-%m-%d %H:%i:%s') AS update_time     FROM shangshufang_customer.university_student_exercises A     INNER JOIN shangshufang_customer.university B     ON A.student_university_code = B.university_code     INNER JOIN shangshufang_customer.school C     ON A.student_university_code = C.university_code     AND A.student_school_id = C.school_id     INNER JOIN shangshufang_customer.university D     ON A.course_university_code = D.university_code     INNER JOIN shangshufang_customer.school E     ON A.course_university_code = E.university_code     AND A.course_school_id = E.school_id     INNER JOIN shangshufang_customer.university_student F     ON A.student_id = F.student_id     INNER JOIN shangshufang_customer.course G     ON A.course_university_code = G.university_code     AND A.course_school_id = G.school_id     AND A.course_id = G.course_id     INNER JOIN shangshufang_base.technology_knowledge_exercises H     ON A.technology_id = H.technology_id     AND A.knowledge_id = H.knowledge_id     AND A.exercises_document_id = H.exercises_id     INNER JOIN shangshufang_base.technology I     ON A.technology_id = I.technology_id     INNER JOIN shangshufang_base.learning_phase J     ON A.learning_phase_id = J.learning_phase_id     INNER JOIN shangshufang_base.technology_knowledge K     ON A.technology_id = K.technology_id     AND A.learning_phase_id = K.learning_phase_id     AND A.knowledge_id = K.knowledge_id     AND K.data_status = 'A'     LEFT JOIN     (     SELECT     C.student_exercises_id,     C.reviewer_id,     C.reviewer_type,     D.full_name AS reviewer_name_teacher,     E.full_name AS reviewer_name_student,     C.update_time     FROM     (     SELECT     A.review_id,     A.student_exercises_id,     A.update_time,     B.reviewer_id,     B.reviewer_university_code,     B.reviewer_school_id,     B.reviewer_type     FROM     (     SELECT     student_exercises_id,     MAX(review_id) AS review_id,     MAX(update_time) AS update_time     FROM shangshufang_customer.university_student_exercises_review     GROUP BY student_exercises_id     ) A     INNER JOIN shangshufang_customer.university_student_exercises_review B     ON A.review_id = B.review_id     AND A.student_exercises_id = B.student_exercises_id     ) C     LEFT JOIN shangshufang_customer.university_customer D     ON C.reviewer_university_code = D.university_code     AND C.reviewer_school_id = D.school_id     AND C.reviewer_id = D.customer_id     AND C.reviewer_type = 'T'     LEFT JOIN shangshufang_customer.university_student E     ON C.reviewer_university_code = E.university_code     AND C.reviewer_school_id = E.school_id     AND C.reviewer_id = E.student_id     AND C.reviewer_type = 'S'     ) M     ON A.student_exercises_id = M.student_exercises_id     INNER JOIN shangshufang_customer.university_student_ability_analysis N     ON A.student_id = N.student_id     WHERE a.technology_id = ?     AND a.student_university_code = ?     AND a.student_school_id = ?     AND a.student_id = ?            ORDER BY A.course_class, A.knowledge_id, A.exercises_document_id, A.update_time DESC     LIMIT ?, ?;
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-30, 10' at line 128
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-30, 10' at line 128
[2020-06-06 22:42:19,014][http-nio-8081-exec-5][ERROR][com.shangshufang.apiservice.service.impl.UniversityStudentExercisesServiceImpl:101] org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-10, 10' at line 128
### The error may exist in file [/Users/zhangqiang/Documents/04-Project/ShangShuFang/SourceCode/shangshufang.apiservice/target/classes/mapping/UniversityStudentExercisesMapping.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT       A.student_exercises_id,       A.student_university_code,       B.university_name AS student_university_name,       A.student_school_id,       C.school_name AS student_school_name,       A.student_id,       F.full_name AS student_name,       F.photo AS student_photo,       F.cellphone,       F.enrollment_year,       N.ability_level,       N.position_site,       A.course_university_code,       D.university_name AS course_university_name,       A.course_school_id,       E.school_name AS course_school_name,       A.course_id,       G.course_name,       A.course_class,       A.technology_id,       I.technology_name,       A.learning_phase_id,       J.learning_phase_name,       A.knowledge_id,       K.knowledge_name,       A.exercises_document_id,       H.document_url AS exercises_document_url,       H.answer_url AS exercises_answer_url,       A.source_code_git_url,       A.data_status,       CASE WHEN A.data_status = 'P' THEN '未练习'       WHEN A.data_status = 'W' THEN '待批改'       WHEN A.data_status = 'R' THEN '待修改'       WHEN A.data_status = 'S' THEN '已通过'       ELSE '未知数据状态'       END AS data_status_text,       M.reviewer_id,       M.reviewer_name_teacher,       M.reviewer_name_student,       M.reviewer_type,       DATE_FORMAT(M.update_time, '%Y-%m-%d %H:%i:%s') AS review_time,       DATE_FORMAT(A.create_time, '%Y-%m-%d %H:%i:%s') AS create_time,       DATE_FORMAT(A.update_time, '%Y-%m-%d %H:%i:%s') AS update_time     FROM shangshufang_customer.university_student_exercises A     INNER JOIN shangshufang_customer.university B     ON A.student_university_code = B.university_code     INNER JOIN shangshufang_customer.school C     ON A.student_university_code = C.university_code     AND A.student_school_id = C.school_id     INNER JOIN shangshufang_customer.university D     ON A.course_university_code = D.university_code     INNER JOIN shangshufang_customer.school E     ON A.course_university_code = E.university_code     AND A.course_school_id = E.school_id     INNER JOIN shangshufang_customer.university_student F     ON A.student_id = F.student_id     INNER JOIN shangshufang_customer.course G     ON A.course_university_code = G.university_code     AND A.course_school_id = G.school_id     AND A.course_id = G.course_id     INNER JOIN shangshufang_base.technology_knowledge_exercises H     ON A.technology_id = H.technology_id     AND A.knowledge_id = H.knowledge_id     AND A.exercises_document_id = H.exercises_id     INNER JOIN shangshufang_base.technology I     ON A.technology_id = I.technology_id     INNER JOIN shangshufang_base.learning_phase J     ON A.learning_phase_id = J.learning_phase_id     INNER JOIN shangshufang_base.technology_knowledge K     ON A.technology_id = K.technology_id     AND A.learning_phase_id = K.learning_phase_id     AND A.knowledge_id = K.knowledge_id     AND K.data_status = 'A'     LEFT JOIN     (     SELECT     C.student_exercises_id,     C.reviewer_id,     C.reviewer_type,     D.full_name AS reviewer_name_teacher,     E.full_name AS reviewer_name_student,     C.update_time     FROM     (     SELECT     A.review_id,     A.student_exercises_id,     A.update_time,     B.reviewer_id,     B.reviewer_university_code,     B.reviewer_school_id,     B.reviewer_type     FROM     (     SELECT     student_exercises_id,     MAX(review_id) AS review_id,     MAX(update_time) AS update_time     FROM shangshufang_customer.university_student_exercises_review     GROUP BY student_exercises_id     ) A     INNER JOIN shangshufang_customer.university_student_exercises_review B     ON A.review_id = B.review_id     AND A.student_exercises_id = B.student_exercises_id     ) C     LEFT JOIN shangshufang_customer.university_customer D     ON C.reviewer_university_code = D.university_code     AND C.reviewer_school_id = D.school_id     AND C.reviewer_id = D.customer_id     AND C.reviewer_type = 'T'     LEFT JOIN shangshufang_customer.university_student E     ON C.reviewer_university_code = E.university_code     AND C.reviewer_school_id = E.school_id     AND C.reviewer_id = E.student_id     AND C.reviewer_type = 'S'     ) M     ON A.student_exercises_id = M.student_exercises_id     INNER JOIN shangshufang_customer.university_student_ability_analysis N     ON A.student_id = N.student_id     WHERE a.technology_id = ?     AND a.student_university_code = ?     AND a.student_school_id = ?     AND a.student_id = ?            ORDER BY A.course_class, A.knowledge_id, A.exercises_document_id, A.update_time DESC     LIMIT ?, ?;
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-10, 10' at line 128
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-10, 10' at line 128
[2020-06-06 22:42:19,014][http-nio-8081-exec-9][ERROR][com.shangshufang.apiservice.service.impl.UniversityStudentExercisesServiceImpl:101] org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-20, 10' at line 128
### The error may exist in file [/Users/zhangqiang/Documents/04-Project/ShangShuFang/SourceCode/shangshufang.apiservice/target/classes/mapping/UniversityStudentExercisesMapping.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT       A.student_exercises_id,       A.student_university_code,       B.university_name AS student_university_name,       A.student_school_id,       C.school_name AS student_school_name,       A.student_id,       F.full_name AS student_name,       F.photo AS student_photo,       F.cellphone,       F.enrollment_year,       N.ability_level,       N.position_site,       A.course_university_code,       D.university_name AS course_university_name,       A.course_school_id,       E.school_name AS course_school_name,       A.course_id,       G.course_name,       A.course_class,       A.technology_id,       I.technology_name,       A.learning_phase_id,       J.learning_phase_name,       A.knowledge_id,       K.knowledge_name,       A.exercises_document_id,       H.document_url AS exercises_document_url,       H.answer_url AS exercises_answer_url,       A.source_code_git_url,       A.data_status,       CASE WHEN A.data_status = 'P' THEN '未练习'       WHEN A.data_status = 'W' THEN '待批改'       WHEN A.data_status = 'R' THEN '待修改'       WHEN A.data_status = 'S' THEN '已通过'       ELSE '未知数据状态'       END AS data_status_text,       M.reviewer_id,       M.reviewer_name_teacher,       M.reviewer_name_student,       M.reviewer_type,       DATE_FORMAT(M.update_time, '%Y-%m-%d %H:%i:%s') AS review_time,       DATE_FORMAT(A.create_time, '%Y-%m-%d %H:%i:%s') AS create_time,       DATE_FORMAT(A.update_time, '%Y-%m-%d %H:%i:%s') AS update_time     FROM shangshufang_customer.university_student_exercises A     INNER JOIN shangshufang_customer.university B     ON A.student_university_code = B.university_code     INNER JOIN shangshufang_customer.school C     ON A.student_university_code = C.university_code     AND A.student_school_id = C.school_id     INNER JOIN shangshufang_customer.university D     ON A.course_university_code = D.university_code     INNER JOIN shangshufang_customer.school E     ON A.course_university_code = E.university_code     AND A.course_school_id = E.school_id     INNER JOIN shangshufang_customer.university_student F     ON A.student_id = F.student_id     INNER JOIN shangshufang_customer.course G     ON A.course_university_code = G.university_code     AND A.course_school_id = G.school_id     AND A.course_id = G.course_id     INNER JOIN shangshufang_base.technology_knowledge_exercises H     ON A.technology_id = H.technology_id     AND A.knowledge_id = H.knowledge_id     AND A.exercises_document_id = H.exercises_id     INNER JOIN shangshufang_base.technology I     ON A.technology_id = I.technology_id     INNER JOIN shangshufang_base.learning_phase J     ON A.learning_phase_id = J.learning_phase_id     INNER JOIN shangshufang_base.technology_knowledge K     ON A.technology_id = K.technology_id     AND A.learning_phase_id = K.learning_phase_id     AND A.knowledge_id = K.knowledge_id     AND K.data_status = 'A'     LEFT JOIN     (     SELECT     C.student_exercises_id,     C.reviewer_id,     C.reviewer_type,     D.full_name AS reviewer_name_teacher,     E.full_name AS reviewer_name_student,     C.update_time     FROM     (     SELECT     A.review_id,     A.student_exercises_id,     A.update_time,     B.reviewer_id,     B.reviewer_university_code,     B.reviewer_school_id,     B.reviewer_type     FROM     (     SELECT     student_exercises_id,     MAX(review_id) AS review_id,     MAX(update_time) AS update_time     FROM shangshufang_customer.university_student_exercises_review     GROUP BY student_exercises_id     ) A     INNER JOIN shangshufang_customer.university_student_exercises_review B     ON A.review_id = B.review_id     AND A.student_exercises_id = B.student_exercises_id     ) C     LEFT JOIN shangshufang_customer.university_customer D     ON C.reviewer_university_code = D.university_code     AND C.reviewer_school_id = D.school_id     AND C.reviewer_id = D.customer_id     AND C.reviewer_type = 'T'     LEFT JOIN shangshufang_customer.university_student E     ON C.reviewer_university_code = E.university_code     AND C.reviewer_school_id = E.school_id     AND C.reviewer_id = E.student_id     AND C.reviewer_type = 'S'     ) M     ON A.student_exercises_id = M.student_exercises_id     INNER JOIN shangshufang_customer.university_student_ability_analysis N     ON A.student_id = N.student_id     WHERE a.technology_id = ?     AND a.student_university_code = ?     AND a.student_school_id = ?     AND a.student_id = ?            ORDER BY A.course_class, A.knowledge_id, A.exercises_document_id, A.update_time DESC     LIMIT ?, ?;
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-20, 10' at line 128
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-20, 10' at line 128
[2020-06-06 22:42:19,033][http-nio-8081-exec-8][ERROR][com.shangshufang.apiservice.service.impl.UniversityStudentExercisesServiceImpl:101] org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-40, 10' at line 128
### The error may exist in file [/Users/zhangqiang/Documents/04-Project/ShangShuFang/SourceCode/shangshufang.apiservice/target/classes/mapping/UniversityStudentExercisesMapping.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT       A.student_exercises_id,       A.student_university_code,       B.university_name AS student_university_name,       A.student_school_id,       C.school_name AS student_school_name,       A.student_id,       F.full_name AS student_name,       F.photo AS student_photo,       F.cellphone,       F.enrollment_year,       N.ability_level,       N.position_site,       A.course_university_code,       D.university_name AS course_university_name,       A.course_school_id,       E.school_name AS course_school_name,       A.course_id,       G.course_name,       A.course_class,       A.technology_id,       I.technology_name,       A.learning_phase_id,       J.learning_phase_name,       A.knowledge_id,       K.knowledge_name,       A.exercises_document_id,       H.document_url AS exercises_document_url,       H.answer_url AS exercises_answer_url,       A.source_code_git_url,       A.data_status,       CASE WHEN A.data_status = 'P' THEN '未练习'       WHEN A.data_status = 'W' THEN '待批改'       WHEN A.data_status = 'R' THEN '待修改'       WHEN A.data_status = 'S' THEN '已通过'       ELSE '未知数据状态'       END AS data_status_text,       M.reviewer_id,       M.reviewer_name_teacher,       M.reviewer_name_student,       M.reviewer_type,       DATE_FORMAT(M.update_time, '%Y-%m-%d %H:%i:%s') AS review_time,       DATE_FORMAT(A.create_time, '%Y-%m-%d %H:%i:%s') AS create_time,       DATE_FORMAT(A.update_time, '%Y-%m-%d %H:%i:%s') AS update_time     FROM shangshufang_customer.university_student_exercises A     INNER JOIN shangshufang_customer.university B     ON A.student_university_code = B.university_code     INNER JOIN shangshufang_customer.school C     ON A.student_university_code = C.university_code     AND A.student_school_id = C.school_id     INNER JOIN shangshufang_customer.university D     ON A.course_university_code = D.university_code     INNER JOIN shangshufang_customer.school E     ON A.course_university_code = E.university_code     AND A.course_school_id = E.school_id     INNER JOIN shangshufang_customer.university_student F     ON A.student_id = F.student_id     INNER JOIN shangshufang_customer.course G     ON A.course_university_code = G.university_code     AND A.course_school_id = G.school_id     AND A.course_id = G.course_id     INNER JOIN shangshufang_base.technology_knowledge_exercises H     ON A.technology_id = H.technology_id     AND A.knowledge_id = H.knowledge_id     AND A.exercises_document_id = H.exercises_id     INNER JOIN shangshufang_base.technology I     ON A.technology_id = I.technology_id     INNER JOIN shangshufang_base.learning_phase J     ON A.learning_phase_id = J.learning_phase_id     INNER JOIN shangshufang_base.technology_knowledge K     ON A.technology_id = K.technology_id     AND A.learning_phase_id = K.learning_phase_id     AND A.knowledge_id = K.knowledge_id     AND K.data_status = 'A'     LEFT JOIN     (     SELECT     C.student_exercises_id,     C.reviewer_id,     C.reviewer_type,     D.full_name AS reviewer_name_teacher,     E.full_name AS reviewer_name_student,     C.update_time     FROM     (     SELECT     A.review_id,     A.student_exercises_id,     A.update_time,     B.reviewer_id,     B.reviewer_university_code,     B.reviewer_school_id,     B.reviewer_type     FROM     (     SELECT     student_exercises_id,     MAX(review_id) AS review_id,     MAX(update_time) AS update_time     FROM shangshufang_customer.university_student_exercises_review     GROUP BY student_exercises_id     ) A     INNER JOIN shangshufang_customer.university_student_exercises_review B     ON A.review_id = B.review_id     AND A.student_exercises_id = B.student_exercises_id     ) C     LEFT JOIN shangshufang_customer.university_customer D     ON C.reviewer_university_code = D.university_code     AND C.reviewer_school_id = D.school_id     AND C.reviewer_id = D.customer_id     AND C.reviewer_type = 'T'     LEFT JOIN shangshufang_customer.university_student E     ON C.reviewer_university_code = E.university_code     AND C.reviewer_school_id = E.school_id     AND C.reviewer_id = E.student_id     AND C.reviewer_type = 'S'     ) M     ON A.student_exercises_id = M.student_exercises_id     INNER JOIN shangshufang_customer.university_student_ability_analysis N     ON A.student_id = N.student_id     WHERE a.technology_id = ?     AND a.student_university_code = ?     AND a.student_school_id = ?     AND a.student_id = ?            ORDER BY A.course_class, A.knowledge_id, A.exercises_document_id, A.update_time DESC     LIMIT ?, ?;
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-40, 10' at line 128
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-40, 10' at line 128
[2020-06-06 22:42:19,033][http-nio-8081-exec-6][ERROR][com.shangshufang.apiservice.service.impl.UniversityStudentExercisesServiceImpl:101] org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-50, 10' at line 128
### The error may exist in file [/Users/zhangqiang/Documents/04-Project/ShangShuFang/SourceCode/shangshufang.apiservice/target/classes/mapping/UniversityStudentExercisesMapping.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT       A.student_exercises_id,       A.student_university_code,       B.university_name AS student_university_name,       A.student_school_id,       C.school_name AS student_school_name,       A.student_id,       F.full_name AS student_name,       F.photo AS student_photo,       F.cellphone,       F.enrollment_year,       N.ability_level,       N.position_site,       A.course_university_code,       D.university_name AS course_university_name,       A.course_school_id,       E.school_name AS course_school_name,       A.course_id,       G.course_name,       A.course_class,       A.technology_id,       I.technology_name,       A.learning_phase_id,       J.learning_phase_name,       A.knowledge_id,       K.knowledge_name,       A.exercises_document_id,       H.document_url AS exercises_document_url,       H.answer_url AS exercises_answer_url,       A.source_code_git_url,       A.data_status,       CASE WHEN A.data_status = 'P' THEN '未练习'       WHEN A.data_status = 'W' THEN '待批改'       WHEN A.data_status = 'R' THEN '待修改'       WHEN A.data_status = 'S' THEN '已通过'       ELSE '未知数据状态'       END AS data_status_text,       M.reviewer_id,       M.reviewer_name_teacher,       M.reviewer_name_student,       M.reviewer_type,       DATE_FORMAT(M.update_time, '%Y-%m-%d %H:%i:%s') AS review_time,       DATE_FORMAT(A.create_time, '%Y-%m-%d %H:%i:%s') AS create_time,       DATE_FORMAT(A.update_time, '%Y-%m-%d %H:%i:%s') AS update_time     FROM shangshufang_customer.university_student_exercises A     INNER JOIN shangshufang_customer.university B     ON A.student_university_code = B.university_code     INNER JOIN shangshufang_customer.school C     ON A.student_university_code = C.university_code     AND A.student_school_id = C.school_id     INNER JOIN shangshufang_customer.university D     ON A.course_university_code = D.university_code     INNER JOIN shangshufang_customer.school E     ON A.course_university_code = E.university_code     AND A.course_school_id = E.school_id     INNER JOIN shangshufang_customer.university_student F     ON A.student_id = F.student_id     INNER JOIN shangshufang_customer.course G     ON A.course_university_code = G.university_code     AND A.course_school_id = G.school_id     AND A.course_id = G.course_id     INNER JOIN shangshufang_base.technology_knowledge_exercises H     ON A.technology_id = H.technology_id     AND A.knowledge_id = H.knowledge_id     AND A.exercises_document_id = H.exercises_id     INNER JOIN shangshufang_base.technology I     ON A.technology_id = I.technology_id     INNER JOIN shangshufang_base.learning_phase J     ON A.learning_phase_id = J.learning_phase_id     INNER JOIN shangshufang_base.technology_knowledge K     ON A.technology_id = K.technology_id     AND A.learning_phase_id = K.learning_phase_id     AND A.knowledge_id = K.knowledge_id     AND K.data_status = 'A'     LEFT JOIN     (     SELECT     C.student_exercises_id,     C.reviewer_id,     C.reviewer_type,     D.full_name AS reviewer_name_teacher,     E.full_name AS reviewer_name_student,     C.update_time     FROM     (     SELECT     A.review_id,     A.student_exercises_id,     A.update_time,     B.reviewer_id,     B.reviewer_university_code,     B.reviewer_school_id,     B.reviewer_type     FROM     (     SELECT     student_exercises_id,     MAX(review_id) AS review_id,     MAX(update_time) AS update_time     FROM shangshufang_customer.university_student_exercises_review     GROUP BY student_exercises_id     ) A     INNER JOIN shangshufang_customer.university_student_exercises_review B     ON A.review_id = B.review_id     AND A.student_exercises_id = B.student_exercises_id     ) C     LEFT JOIN shangshufang_customer.university_customer D     ON C.reviewer_university_code = D.university_code     AND C.reviewer_school_id = D.school_id     AND C.reviewer_id = D.customer_id     AND C.reviewer_type = 'T'     LEFT JOIN shangshufang_customer.university_student E     ON C.reviewer_university_code = E.university_code     AND C.reviewer_school_id = E.school_id     AND C.reviewer_id = E.student_id     AND C.reviewer_type = 'S'     ) M     ON A.student_exercises_id = M.student_exercises_id     INNER JOIN shangshufang_customer.university_student_ability_analysis N     ON A.student_id = N.student_id     WHERE a.technology_id = ?     AND a.student_university_code = ?     AND a.student_school_id = ?     AND a.student_id = ?            ORDER BY A.course_class, A.knowledge_id, A.exercises_document_id, A.update_time DESC     LIMIT ?, ?;
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-50, 10' at line 128
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-50, 10' at line 128
[2020-06-06 22:42:19,035][http-nio-8081-exec-1][ERROR][com.shangshufang.apiservice.service.impl.UniversityStudentExercisesServiceImpl:101] org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-60, 10' at line 128
### The error may exist in file [/Users/zhangqiang/Documents/04-Project/ShangShuFang/SourceCode/shangshufang.apiservice/target/classes/mapping/UniversityStudentExercisesMapping.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT       A.student_exercises_id,       A.student_university_code,       B.university_name AS student_university_name,       A.student_school_id,       C.school_name AS student_school_name,       A.student_id,       F.full_name AS student_name,       F.photo AS student_photo,       F.cellphone,       F.enrollment_year,       N.ability_level,       N.position_site,       A.course_university_code,       D.university_name AS course_university_name,       A.course_school_id,       E.school_name AS course_school_name,       A.course_id,       G.course_name,       A.course_class,       A.technology_id,       I.technology_name,       A.learning_phase_id,       J.learning_phase_name,       A.knowledge_id,       K.knowledge_name,       A.exercises_document_id,       H.document_url AS exercises_document_url,       H.answer_url AS exercises_answer_url,       A.source_code_git_url,       A.data_status,       CASE WHEN A.data_status = 'P' THEN '未练习'       WHEN A.data_status = 'W' THEN '待批改'       WHEN A.data_status = 'R' THEN '待修改'       WHEN A.data_status = 'S' THEN '已通过'       ELSE '未知数据状态'       END AS data_status_text,       M.reviewer_id,       M.reviewer_name_teacher,       M.reviewer_name_student,       M.reviewer_type,       DATE_FORMAT(M.update_time, '%Y-%m-%d %H:%i:%s') AS review_time,       DATE_FORMAT(A.create_time, '%Y-%m-%d %H:%i:%s') AS create_time,       DATE_FORMAT(A.update_time, '%Y-%m-%d %H:%i:%s') AS update_time     FROM shangshufang_customer.university_student_exercises A     INNER JOIN shangshufang_customer.university B     ON A.student_university_code = B.university_code     INNER JOIN shangshufang_customer.school C     ON A.student_university_code = C.university_code     AND A.student_school_id = C.school_id     INNER JOIN shangshufang_customer.university D     ON A.course_university_code = D.university_code     INNER JOIN shangshufang_customer.school E     ON A.course_university_code = E.university_code     AND A.course_school_id = E.school_id     INNER JOIN shangshufang_customer.university_student F     ON A.student_id = F.student_id     INNER JOIN shangshufang_customer.course G     ON A.course_university_code = G.university_code     AND A.course_school_id = G.school_id     AND A.course_id = G.course_id     INNER JOIN shangshufang_base.technology_knowledge_exercises H     ON A.technology_id = H.technology_id     AND A.knowledge_id = H.knowledge_id     AND A.exercises_document_id = H.exercises_id     INNER JOIN shangshufang_base.technology I     ON A.technology_id = I.technology_id     INNER JOIN shangshufang_base.learning_phase J     ON A.learning_phase_id = J.learning_phase_id     INNER JOIN shangshufang_base.technology_knowledge K     ON A.technology_id = K.technology_id     AND A.learning_phase_id = K.learning_phase_id     AND A.knowledge_id = K.knowledge_id     AND K.data_status = 'A'     LEFT JOIN     (     SELECT     C.student_exercises_id,     C.reviewer_id,     C.reviewer_type,     D.full_name AS reviewer_name_teacher,     E.full_name AS reviewer_name_student,     C.update_time     FROM     (     SELECT     A.review_id,     A.student_exercises_id,     A.update_time,     B.reviewer_id,     B.reviewer_university_code,     B.reviewer_school_id,     B.reviewer_type     FROM     (     SELECT     student_exercises_id,     MAX(review_id) AS review_id,     MAX(update_time) AS update_time     FROM shangshufang_customer.university_student_exercises_review     GROUP BY student_exercises_id     ) A     INNER JOIN shangshufang_customer.university_student_exercises_review B     ON A.review_id = B.review_id     AND A.student_exercises_id = B.student_exercises_id     ) C     LEFT JOIN shangshufang_customer.university_customer D     ON C.reviewer_university_code = D.university_code     AND C.reviewer_school_id = D.school_id     AND C.reviewer_id = D.customer_id     AND C.reviewer_type = 'T'     LEFT JOIN shangshufang_customer.university_student E     ON C.reviewer_university_code = E.university_code     AND C.reviewer_school_id = E.school_id     AND C.reviewer_id = E.student_id     AND C.reviewer_type = 'S'     ) M     ON A.student_exercises_id = M.student_exercises_id     INNER JOIN shangshufang_customer.university_student_ability_analysis N     ON A.student_id = N.student_id     WHERE a.technology_id = ?     AND a.student_university_code = ?     AND a.student_school_id = ?     AND a.student_id = ?            ORDER BY A.course_class, A.knowledge_id, A.exercises_document_id, A.update_time DESC     LIMIT ?, ?;
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-60, 10' at line 128
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-60, 10' at line 128
[2020-06-06 22:42:19,038][http-nio-8081-exec-3][ERROR][com.shangshufang.apiservice.service.impl.UniversityStudentExercisesServiceImpl:101] org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-80, 10' at line 128
### The error may exist in file [/Users/zhangqiang/Documents/04-Project/ShangShuFang/SourceCode/shangshufang.apiservice/target/classes/mapping/UniversityStudentExercisesMapping.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT       A.student_exercises_id,       A.student_university_code,       B.university_name AS student_university_name,       A.student_school_id,       C.school_name AS student_school_name,       A.student_id,       F.full_name AS student_name,       F.photo AS student_photo,       F.cellphone,       F.enrollment_year,       N.ability_level,       N.position_site,       A.course_university_code,       D.university_name AS course_university_name,       A.course_school_id,       E.school_name AS course_school_name,       A.course_id,       G.course_name,       A.course_class,       A.technology_id,       I.technology_name,       A.learning_phase_id,       J.learning_phase_name,       A.knowledge_id,       K.knowledge_name,       A.exercises_document_id,       H.document_url AS exercises_document_url,       H.answer_url AS exercises_answer_url,       A.source_code_git_url,       A.data_status,       CASE WHEN A.data_status = 'P' THEN '未练习'       WHEN A.data_status = 'W' THEN '待批改'       WHEN A.data_status = 'R' THEN '待修改'       WHEN A.data_status = 'S' THEN '已通过'       ELSE '未知数据状态'       END AS data_status_text,       M.reviewer_id,       M.reviewer_name_teacher,       M.reviewer_name_student,       M.reviewer_type,       DATE_FORMAT(M.update_time, '%Y-%m-%d %H:%i:%s') AS review_time,       DATE_FORMAT(A.create_time, '%Y-%m-%d %H:%i:%s') AS create_time,       DATE_FORMAT(A.update_time, '%Y-%m-%d %H:%i:%s') AS update_time     FROM shangshufang_customer.university_student_exercises A     INNER JOIN shangshufang_customer.university B     ON A.student_university_code = B.university_code     INNER JOIN shangshufang_customer.school C     ON A.student_university_code = C.university_code     AND A.student_school_id = C.school_id     INNER JOIN shangshufang_customer.university D     ON A.course_university_code = D.university_code     INNER JOIN shangshufang_customer.school E     ON A.course_university_code = E.university_code     AND A.course_school_id = E.school_id     INNER JOIN shangshufang_customer.university_student F     ON A.student_id = F.student_id     INNER JOIN shangshufang_customer.course G     ON A.course_university_code = G.university_code     AND A.course_school_id = G.school_id     AND A.course_id = G.course_id     INNER JOIN shangshufang_base.technology_knowledge_exercises H     ON A.technology_id = H.technology_id     AND A.knowledge_id = H.knowledge_id     AND A.exercises_document_id = H.exercises_id     INNER JOIN shangshufang_base.technology I     ON A.technology_id = I.technology_id     INNER JOIN shangshufang_base.learning_phase J     ON A.learning_phase_id = J.learning_phase_id     INNER JOIN shangshufang_base.technology_knowledge K     ON A.technology_id = K.technology_id     AND A.learning_phase_id = K.learning_phase_id     AND A.knowledge_id = K.knowledge_id     AND K.data_status = 'A'     LEFT JOIN     (     SELECT     C.student_exercises_id,     C.reviewer_id,     C.reviewer_type,     D.full_name AS reviewer_name_teacher,     E.full_name AS reviewer_name_student,     C.update_time     FROM     (     SELECT     A.review_id,     A.student_exercises_id,     A.update_time,     B.reviewer_id,     B.reviewer_university_code,     B.reviewer_school_id,     B.reviewer_type     FROM     (     SELECT     student_exercises_id,     MAX(review_id) AS review_id,     MAX(update_time) AS update_time     FROM shangshufang_customer.university_student_exercises_review     GROUP BY student_exercises_id     ) A     INNER JOIN shangshufang_customer.university_student_exercises_review B     ON A.review_id = B.review_id     AND A.student_exercises_id = B.student_exercises_id     ) C     LEFT JOIN shangshufang_customer.university_customer D     ON C.reviewer_university_code = D.university_code     AND C.reviewer_school_id = D.school_id     AND C.reviewer_id = D.customer_id     AND C.reviewer_type = 'T'     LEFT JOIN shangshufang_customer.university_student E     ON C.reviewer_university_code = E.university_code     AND C.reviewer_school_id = E.school_id     AND C.reviewer_id = E.student_id     AND C.reviewer_type = 'S'     ) M     ON A.student_exercises_id = M.student_exercises_id     INNER JOIN shangshufang_customer.university_student_ability_analysis N     ON A.student_id = N.student_id     WHERE a.technology_id = ?     AND a.student_university_code = ?     AND a.student_school_id = ?     AND a.student_id = ?            ORDER BY A.course_class, A.knowledge_id, A.exercises_document_id, A.update_time DESC     LIMIT ?, ?;
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-80, 10' at line 128
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-80, 10' at line 128
[2020-06-06 22:42:19,038][http-nio-8081-exec-7][ERROR][com.shangshufang.apiservice.service.impl.UniversityStudentExercisesServiceImpl:101] org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-70, 10' at line 128
### The error may exist in file [/Users/zhangqiang/Documents/04-Project/ShangShuFang/SourceCode/shangshufang.apiservice/target/classes/mapping/UniversityStudentExercisesMapping.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT       A.student_exercises_id,       A.student_university_code,       B.university_name AS student_university_name,       A.student_school_id,       C.school_name AS student_school_name,       A.student_id,       F.full_name AS student_name,       F.photo AS student_photo,       F.cellphone,       F.enrollment_year,       N.ability_level,       N.position_site,       A.course_university_code,       D.university_name AS course_university_name,       A.course_school_id,       E.school_name AS course_school_name,       A.course_id,       G.course_name,       A.course_class,       A.technology_id,       I.technology_name,       A.learning_phase_id,       J.learning_phase_name,       A.knowledge_id,       K.knowledge_name,       A.exercises_document_id,       H.document_url AS exercises_document_url,       H.answer_url AS exercises_answer_url,       A.source_code_git_url,       A.data_status,       CASE WHEN A.data_status = 'P' THEN '未练习'       WHEN A.data_status = 'W' THEN '待批改'       WHEN A.data_status = 'R' THEN '待修改'       WHEN A.data_status = 'S' THEN '已通过'       ELSE '未知数据状态'       END AS data_status_text,       M.reviewer_id,       M.reviewer_name_teacher,       M.reviewer_name_student,       M.reviewer_type,       DATE_FORMAT(M.update_time, '%Y-%m-%d %H:%i:%s') AS review_time,       DATE_FORMAT(A.create_time, '%Y-%m-%d %H:%i:%s') AS create_time,       DATE_FORMAT(A.update_time, '%Y-%m-%d %H:%i:%s') AS update_time     FROM shangshufang_customer.university_student_exercises A     INNER JOIN shangshufang_customer.university B     ON A.student_university_code = B.university_code     INNER JOIN shangshufang_customer.school C     ON A.student_university_code = C.university_code     AND A.student_school_id = C.school_id     INNER JOIN shangshufang_customer.university D     ON A.course_university_code = D.university_code     INNER JOIN shangshufang_customer.school E     ON A.course_university_code = E.university_code     AND A.course_school_id = E.school_id     INNER JOIN shangshufang_customer.university_student F     ON A.student_id = F.student_id     INNER JOIN shangshufang_customer.course G     ON A.course_university_code = G.university_code     AND A.course_school_id = G.school_id     AND A.course_id = G.course_id     INNER JOIN shangshufang_base.technology_knowledge_exercises H     ON A.technology_id = H.technology_id     AND A.knowledge_id = H.knowledge_id     AND A.exercises_document_id = H.exercises_id     INNER JOIN shangshufang_base.technology I     ON A.technology_id = I.technology_id     INNER JOIN shangshufang_base.learning_phase J     ON A.learning_phase_id = J.learning_phase_id     INNER JOIN shangshufang_base.technology_knowledge K     ON A.technology_id = K.technology_id     AND A.learning_phase_id = K.learning_phase_id     AND A.knowledge_id = K.knowledge_id     AND K.data_status = 'A'     LEFT JOIN     (     SELECT     C.student_exercises_id,     C.reviewer_id,     C.reviewer_type,     D.full_name AS reviewer_name_teacher,     E.full_name AS reviewer_name_student,     C.update_time     FROM     (     SELECT     A.review_id,     A.student_exercises_id,     A.update_time,     B.reviewer_id,     B.reviewer_university_code,     B.reviewer_school_id,     B.reviewer_type     FROM     (     SELECT     student_exercises_id,     MAX(review_id) AS review_id,     MAX(update_time) AS update_time     FROM shangshufang_customer.university_student_exercises_review     GROUP BY student_exercises_id     ) A     INNER JOIN shangshufang_customer.university_student_exercises_review B     ON A.review_id = B.review_id     AND A.student_exercises_id = B.student_exercises_id     ) C     LEFT JOIN shangshufang_customer.university_customer D     ON C.reviewer_university_code = D.university_code     AND C.reviewer_school_id = D.school_id     AND C.reviewer_id = D.customer_id     AND C.reviewer_type = 'T'     LEFT JOIN shangshufang_customer.university_student E     ON C.reviewer_university_code = E.university_code     AND C.reviewer_school_id = E.school_id     AND C.reviewer_id = E.student_id     AND C.reviewer_type = 'S'     ) M     ON A.student_exercises_id = M.student_exercises_id     INNER JOIN shangshufang_customer.university_student_ability_analysis N     ON A.student_id = N.student_id     WHERE a.technology_id = ?     AND a.student_university_code = ?     AND a.student_school_id = ?     AND a.student_id = ?            ORDER BY A.course_class, A.knowledge_id, A.exercises_document_id, A.update_time DESC     LIMIT ?, ?;
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-70, 10' at line 128
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-70, 10' at line 128
[2020-06-06 22:42:19,038][http-nio-8081-exec-9][ERROR][com.shangshufang.apiservice.service.impl.UniversityStudentExercisesServiceImpl:101] org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-90, 10' at line 128
### The error may exist in file [/Users/zhangqiang/Documents/04-Project/ShangShuFang/SourceCode/shangshufang.apiservice/target/classes/mapping/UniversityStudentExercisesMapping.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT       A.student_exercises_id,       A.student_university_code,       B.university_name AS student_university_name,       A.student_school_id,       C.school_name AS student_school_name,       A.student_id,       F.full_name AS student_name,       F.photo AS student_photo,       F.cellphone,       F.enrollment_year,       N.ability_level,       N.position_site,       A.course_university_code,       D.university_name AS course_university_name,       A.course_school_id,       E.school_name AS course_school_name,       A.course_id,       G.course_name,       A.course_class,       A.technology_id,       I.technology_name,       A.learning_phase_id,       J.learning_phase_name,       A.knowledge_id,       K.knowledge_name,       A.exercises_document_id,       H.document_url AS exercises_document_url,       H.answer_url AS exercises_answer_url,       A.source_code_git_url,       A.data_status,       CASE WHEN A.data_status = 'P' THEN '未练习'       WHEN A.data_status = 'W' THEN '待批改'       WHEN A.data_status = 'R' THEN '待修改'       WHEN A.data_status = 'S' THEN '已通过'       ELSE '未知数据状态'       END AS data_status_text,       M.reviewer_id,       M.reviewer_name_teacher,       M.reviewer_name_student,       M.reviewer_type,       DATE_FORMAT(M.update_time, '%Y-%m-%d %H:%i:%s') AS review_time,       DATE_FORMAT(A.create_time, '%Y-%m-%d %H:%i:%s') AS create_time,       DATE_FORMAT(A.update_time, '%Y-%m-%d %H:%i:%s') AS update_time     FROM shangshufang_customer.university_student_exercises A     INNER JOIN shangshufang_customer.university B     ON A.student_university_code = B.university_code     INNER JOIN shangshufang_customer.school C     ON A.student_university_code = C.university_code     AND A.student_school_id = C.school_id     INNER JOIN shangshufang_customer.university D     ON A.course_university_code = D.university_code     INNER JOIN shangshufang_customer.school E     ON A.course_university_code = E.university_code     AND A.course_school_id = E.school_id     INNER JOIN shangshufang_customer.university_student F     ON A.student_id = F.student_id     INNER JOIN shangshufang_customer.course G     ON A.course_university_code = G.university_code     AND A.course_school_id = G.school_id     AND A.course_id = G.course_id     INNER JOIN shangshufang_base.technology_knowledge_exercises H     ON A.technology_id = H.technology_id     AND A.knowledge_id = H.knowledge_id     AND A.exercises_document_id = H.exercises_id     INNER JOIN shangshufang_base.technology I     ON A.technology_id = I.technology_id     INNER JOIN shangshufang_base.learning_phase J     ON A.learning_phase_id = J.learning_phase_id     INNER JOIN shangshufang_base.technology_knowledge K     ON A.technology_id = K.technology_id     AND A.learning_phase_id = K.learning_phase_id     AND A.knowledge_id = K.knowledge_id     AND K.data_status = 'A'     LEFT JOIN     (     SELECT     C.student_exercises_id,     C.reviewer_id,     C.reviewer_type,     D.full_name AS reviewer_name_teacher,     E.full_name AS reviewer_name_student,     C.update_time     FROM     (     SELECT     A.review_id,     A.student_exercises_id,     A.update_time,     B.reviewer_id,     B.reviewer_university_code,     B.reviewer_school_id,     B.reviewer_type     FROM     (     SELECT     student_exercises_id,     MAX(review_id) AS review_id,     MAX(update_time) AS update_time     FROM shangshufang_customer.university_student_exercises_review     GROUP BY student_exercises_id     ) A     INNER JOIN shangshufang_customer.university_student_exercises_review B     ON A.review_id = B.review_id     AND A.student_exercises_id = B.student_exercises_id     ) C     LEFT JOIN shangshufang_customer.university_customer D     ON C.reviewer_university_code = D.university_code     AND C.reviewer_school_id = D.school_id     AND C.reviewer_id = D.customer_id     AND C.reviewer_type = 'T'     LEFT JOIN shangshufang_customer.university_student E     ON C.reviewer_university_code = E.university_code     AND C.reviewer_school_id = E.school_id     AND C.reviewer_id = E.student_id     AND C.reviewer_type = 'S'     ) M     ON A.student_exercises_id = M.student_exercises_id     INNER JOIN shangshufang_customer.university_student_ability_analysis N     ON A.student_id = N.student_id     WHERE a.technology_id = ?     AND a.student_university_code = ?     AND a.student_school_id = ?     AND a.student_id = ?            ORDER BY A.course_class, A.knowledge_id, A.exercises_document_id, A.update_time DESC     LIMIT ?, ?;
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-90, 10' at line 128
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-90, 10' at line 128
[2020-06-06 22:42:19,051][http-nio-8081-exec-10][ERROR][com.shangshufang.apiservice.service.impl.UniversityStudentExercisesServiceImpl:101] org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-110, 10' at line 128
### The error may exist in file [/Users/zhangqiang/Documents/04-Project/ShangShuFang/SourceCode/shangshufang.apiservice/target/classes/mapping/UniversityStudentExercisesMapping.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT       A.student_exercises_id,       A.student_university_code,       B.university_name AS student_university_name,       A.student_school_id,       C.school_name AS student_school_name,       A.student_id,       F.full_name AS student_name,       F.photo AS student_photo,       F.cellphone,       F.enrollment_year,       N.ability_level,       N.position_site,       A.course_university_code,       D.university_name AS course_university_name,       A.course_school_id,       E.school_name AS course_school_name,       A.course_id,       G.course_name,       A.course_class,       A.technology_id,       I.technology_name,       A.learning_phase_id,       J.learning_phase_name,       A.knowledge_id,       K.knowledge_name,       A.exercises_document_id,       H.document_url AS exercises_document_url,       H.answer_url AS exercises_answer_url,       A.source_code_git_url,       A.data_status,       CASE WHEN A.data_status = 'P' THEN '未练习'       WHEN A.data_status = 'W' THEN '待批改'       WHEN A.data_status = 'R' THEN '待修改'       WHEN A.data_status = 'S' THEN '已通过'       ELSE '未知数据状态'       END AS data_status_text,       M.reviewer_id,       M.reviewer_name_teacher,       M.reviewer_name_student,       M.reviewer_type,       DATE_FORMAT(M.update_time, '%Y-%m-%d %H:%i:%s') AS review_time,       DATE_FORMAT(A.create_time, '%Y-%m-%d %H:%i:%s') AS create_time,       DATE_FORMAT(A.update_time, '%Y-%m-%d %H:%i:%s') AS update_time     FROM shangshufang_customer.university_student_exercises A     INNER JOIN shangshufang_customer.university B     ON A.student_university_code = B.university_code     INNER JOIN shangshufang_customer.school C     ON A.student_university_code = C.university_code     AND A.student_school_id = C.school_id     INNER JOIN shangshufang_customer.university D     ON A.course_university_code = D.university_code     INNER JOIN shangshufang_customer.school E     ON A.course_university_code = E.university_code     AND A.course_school_id = E.school_id     INNER JOIN shangshufang_customer.university_student F     ON A.student_id = F.student_id     INNER JOIN shangshufang_customer.course G     ON A.course_university_code = G.university_code     AND A.course_school_id = G.school_id     AND A.course_id = G.course_id     INNER JOIN shangshufang_base.technology_knowledge_exercises H     ON A.technology_id = H.technology_id     AND A.knowledge_id = H.knowledge_id     AND A.exercises_document_id = H.exercises_id     INNER JOIN shangshufang_base.technology I     ON A.technology_id = I.technology_id     INNER JOIN shangshufang_base.learning_phase J     ON A.learning_phase_id = J.learning_phase_id     INNER JOIN shangshufang_base.technology_knowledge K     ON A.technology_id = K.technology_id     AND A.learning_phase_id = K.learning_phase_id     AND A.knowledge_id = K.knowledge_id     AND K.data_status = 'A'     LEFT JOIN     (     SELECT     C.student_exercises_id,     C.reviewer_id,     C.reviewer_type,     D.full_name AS reviewer_name_teacher,     E.full_name AS reviewer_name_student,     C.update_time     FROM     (     SELECT     A.review_id,     A.student_exercises_id,     A.update_time,     B.reviewer_id,     B.reviewer_university_code,     B.reviewer_school_id,     B.reviewer_type     FROM     (     SELECT     student_exercises_id,     MAX(review_id) AS review_id,     MAX(update_time) AS update_time     FROM shangshufang_customer.university_student_exercises_review     GROUP BY student_exercises_id     ) A     INNER JOIN shangshufang_customer.university_student_exercises_review B     ON A.review_id = B.review_id     AND A.student_exercises_id = B.student_exercises_id     ) C     LEFT JOIN shangshufang_customer.university_customer D     ON C.reviewer_university_code = D.university_code     AND C.reviewer_school_id = D.school_id     AND C.reviewer_id = D.customer_id     AND C.reviewer_type = 'T'     LEFT JOIN shangshufang_customer.university_student E     ON C.reviewer_university_code = E.university_code     AND C.reviewer_school_id = E.school_id     AND C.reviewer_id = E.student_id     AND C.reviewer_type = 'S'     ) M     ON A.student_exercises_id = M.student_exercises_id     INNER JOIN shangshufang_customer.university_student_ability_analysis N     ON A.student_id = N.student_id     WHERE a.technology_id = ?     AND a.student_university_code = ?     AND a.student_school_id = ?     AND a.student_id = ?            ORDER BY A.course_class, A.knowledge_id, A.exercises_document_id, A.update_time DESC     LIMIT ?, ?;
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-110, 10' at line 128
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-110, 10' at line 128
[2020-06-06 22:42:19,051][http-nio-8081-exec-5][ERROR][com.shangshufang.apiservice.service.impl.UniversityStudentExercisesServiceImpl:101] org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-100, 10' at line 128
### The error may exist in file [/Users/zhangqiang/Documents/04-Project/ShangShuFang/SourceCode/shangshufang.apiservice/target/classes/mapping/UniversityStudentExercisesMapping.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT       A.student_exercises_id,       A.student_university_code,       B.university_name AS student_university_name,       A.student_school_id,       C.school_name AS student_school_name,       A.student_id,       F.full_name AS student_name,       F.photo AS student_photo,       F.cellphone,       F.enrollment_year,       N.ability_level,       N.position_site,       A.course_university_code,       D.university_name AS course_university_name,       A.course_school_id,       E.school_name AS course_school_name,       A.course_id,       G.course_name,       A.course_class,       A.technology_id,       I.technology_name,       A.learning_phase_id,       J.learning_phase_name,       A.knowledge_id,       K.knowledge_name,       A.exercises_document_id,       H.document_url AS exercises_document_url,       H.answer_url AS exercises_answer_url,       A.source_code_git_url,       A.data_status,       CASE WHEN A.data_status = 'P' THEN '未练习'       WHEN A.data_status = 'W' THEN '待批改'       WHEN A.data_status = 'R' THEN '待修改'       WHEN A.data_status = 'S' THEN '已通过'       ELSE '未知数据状态'       END AS data_status_text,       M.reviewer_id,       M.reviewer_name_teacher,       M.reviewer_name_student,       M.reviewer_type,       DATE_FORMAT(M.update_time, '%Y-%m-%d %H:%i:%s') AS review_time,       DATE_FORMAT(A.create_time, '%Y-%m-%d %H:%i:%s') AS create_time,       DATE_FORMAT(A.update_time, '%Y-%m-%d %H:%i:%s') AS update_time     FROM shangshufang_customer.university_student_exercises A     INNER JOIN shangshufang_customer.university B     ON A.student_university_code = B.university_code     INNER JOIN shangshufang_customer.school C     ON A.student_university_code = C.university_code     AND A.student_school_id = C.school_id     INNER JOIN shangshufang_customer.university D     ON A.course_university_code = D.university_code     INNER JOIN shangshufang_customer.school E     ON A.course_university_code = E.university_code     AND A.course_school_id = E.school_id     INNER JOIN shangshufang_customer.university_student F     ON A.student_id = F.student_id     INNER JOIN shangshufang_customer.course G     ON A.course_university_code = G.university_code     AND A.course_school_id = G.school_id     AND A.course_id = G.course_id     INNER JOIN shangshufang_base.technology_knowledge_exercises H     ON A.technology_id = H.technology_id     AND A.knowledge_id = H.knowledge_id     AND A.exercises_document_id = H.exercises_id     INNER JOIN shangshufang_base.technology I     ON A.technology_id = I.technology_id     INNER JOIN shangshufang_base.learning_phase J     ON A.learning_phase_id = J.learning_phase_id     INNER JOIN shangshufang_base.technology_knowledge K     ON A.technology_id = K.technology_id     AND A.learning_phase_id = K.learning_phase_id     AND A.knowledge_id = K.knowledge_id     AND K.data_status = 'A'     LEFT JOIN     (     SELECT     C.student_exercises_id,     C.reviewer_id,     C.reviewer_type,     D.full_name AS reviewer_name_teacher,     E.full_name AS reviewer_name_student,     C.update_time     FROM     (     SELECT     A.review_id,     A.student_exercises_id,     A.update_time,     B.reviewer_id,     B.reviewer_university_code,     B.reviewer_school_id,     B.reviewer_type     FROM     (     SELECT     student_exercises_id,     MAX(review_id) AS review_id,     MAX(update_time) AS update_time     FROM shangshufang_customer.university_student_exercises_review     GROUP BY student_exercises_id     ) A     INNER JOIN shangshufang_customer.university_student_exercises_review B     ON A.review_id = B.review_id     AND A.student_exercises_id = B.student_exercises_id     ) C     LEFT JOIN shangshufang_customer.university_customer D     ON C.reviewer_university_code = D.university_code     AND C.reviewer_school_id = D.school_id     AND C.reviewer_id = D.customer_id     AND C.reviewer_type = 'T'     LEFT JOIN shangshufang_customer.university_student E     ON C.reviewer_university_code = E.university_code     AND C.reviewer_school_id = E.school_id     AND C.reviewer_id = E.student_id     AND C.reviewer_type = 'S'     ) M     ON A.student_exercises_id = M.student_exercises_id     INNER JOIN shangshufang_customer.university_student_ability_analysis N     ON A.student_id = N.student_id     WHERE a.technology_id = ?     AND a.student_university_code = ?     AND a.student_school_id = ?     AND a.student_id = ?            ORDER BY A.course_class, A.knowledge_id, A.exercises_document_id, A.update_time DESC     LIMIT ?, ?;
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-100, 10' at line 128
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-100, 10' at line 128
[2020-06-06 22:42:19,053][http-nio-8081-exec-4][ERROR][com.shangshufang.apiservice.service.impl.UniversityStudentExercisesServiceImpl:101] org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-120, 10' at line 128
### The error may exist in file [/Users/zhangqiang/Documents/04-Project/ShangShuFang/SourceCode/shangshufang.apiservice/target/classes/mapping/UniversityStudentExercisesMapping.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT       A.student_exercises_id,       A.student_university_code,       B.university_name AS student_university_name,       A.student_school_id,       C.school_name AS student_school_name,       A.student_id,       F.full_name AS student_name,       F.photo AS student_photo,       F.cellphone,       F.enrollment_year,       N.ability_level,       N.position_site,       A.course_university_code,       D.university_name AS course_university_name,       A.course_school_id,       E.school_name AS course_school_name,       A.course_id,       G.course_name,       A.course_class,       A.technology_id,       I.technology_name,       A.learning_phase_id,       J.learning_phase_name,       A.knowledge_id,       K.knowledge_name,       A.exercises_document_id,       H.document_url AS exercises_document_url,       H.answer_url AS exercises_answer_url,       A.source_code_git_url,       A.data_status,       CASE WHEN A.data_status = 'P' THEN '未练习'       WHEN A.data_status = 'W' THEN '待批改'       WHEN A.data_status = 'R' THEN '待修改'       WHEN A.data_status = 'S' THEN '已通过'       ELSE '未知数据状态'       END AS data_status_text,       M.reviewer_id,       M.reviewer_name_teacher,       M.reviewer_name_student,       M.reviewer_type,       DATE_FORMAT(M.update_time, '%Y-%m-%d %H:%i:%s') AS review_time,       DATE_FORMAT(A.create_time, '%Y-%m-%d %H:%i:%s') AS create_time,       DATE_FORMAT(A.update_time, '%Y-%m-%d %H:%i:%s') AS update_time     FROM shangshufang_customer.university_student_exercises A     INNER JOIN shangshufang_customer.university B     ON A.student_university_code = B.university_code     INNER JOIN shangshufang_customer.school C     ON A.student_university_code = C.university_code     AND A.student_school_id = C.school_id     INNER JOIN shangshufang_customer.university D     ON A.course_university_code = D.university_code     INNER JOIN shangshufang_customer.school E     ON A.course_university_code = E.university_code     AND A.course_school_id = E.school_id     INNER JOIN shangshufang_customer.university_student F     ON A.student_id = F.student_id     INNER JOIN shangshufang_customer.course G     ON A.course_university_code = G.university_code     AND A.course_school_id = G.school_id     AND A.course_id = G.course_id     INNER JOIN shangshufang_base.technology_knowledge_exercises H     ON A.technology_id = H.technology_id     AND A.knowledge_id = H.knowledge_id     AND A.exercises_document_id = H.exercises_id     INNER JOIN shangshufang_base.technology I     ON A.technology_id = I.technology_id     INNER JOIN shangshufang_base.learning_phase J     ON A.learning_phase_id = J.learning_phase_id     INNER JOIN shangshufang_base.technology_knowledge K     ON A.technology_id = K.technology_id     AND A.learning_phase_id = K.learning_phase_id     AND A.knowledge_id = K.knowledge_id     AND K.data_status = 'A'     LEFT JOIN     (     SELECT     C.student_exercises_id,     C.reviewer_id,     C.reviewer_type,     D.full_name AS reviewer_name_teacher,     E.full_name AS reviewer_name_student,     C.update_time     FROM     (     SELECT     A.review_id,     A.student_exercises_id,     A.update_time,     B.reviewer_id,     B.reviewer_university_code,     B.reviewer_school_id,     B.reviewer_type     FROM     (     SELECT     student_exercises_id,     MAX(review_id) AS review_id,     MAX(update_time) AS update_time     FROM shangshufang_customer.university_student_exercises_review     GROUP BY student_exercises_id     ) A     INNER JOIN shangshufang_customer.university_student_exercises_review B     ON A.review_id = B.review_id     AND A.student_exercises_id = B.student_exercises_id     ) C     LEFT JOIN shangshufang_customer.university_customer D     ON C.reviewer_university_code = D.university_code     AND C.reviewer_school_id = D.school_id     AND C.reviewer_id = D.customer_id     AND C.reviewer_type = 'T'     LEFT JOIN shangshufang_customer.university_student E     ON C.reviewer_university_code = E.university_code     AND C.reviewer_school_id = E.school_id     AND C.reviewer_id = E.student_id     AND C.reviewer_type = 'S'     ) M     ON A.student_exercises_id = M.student_exercises_id     INNER JOIN shangshufang_customer.university_student_ability_analysis N     ON A.student_id = N.student_id     WHERE a.technology_id = ?     AND a.student_university_code = ?     AND a.student_school_id = ?     AND a.student_id = ?            ORDER BY A.course_class, A.knowledge_id, A.exercises_document_id, A.update_time DESC     LIMIT ?, ?;
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-120, 10' at line 128
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-120, 10' at line 128
[2020-06-06 22:42:19,053][http-nio-8081-exec-2][ERROR][com.shangshufang.apiservice.service.impl.UniversityStudentExercisesServiceImpl:101] org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-130, 10' at line 128
### The error may exist in file [/Users/zhangqiang/Documents/04-Project/ShangShuFang/SourceCode/shangshufang.apiservice/target/classes/mapping/UniversityStudentExercisesMapping.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT       A.student_exercises_id,       A.student_university_code,       B.university_name AS student_university_name,       A.student_school_id,       C.school_name AS student_school_name,       A.student_id,       F.full_name AS student_name,       F.photo AS student_photo,       F.cellphone,       F.enrollment_year,       N.ability_level,       N.position_site,       A.course_university_code,       D.university_name AS course_university_name,       A.course_school_id,       E.school_name AS course_school_name,       A.course_id,       G.course_name,       A.course_class,       A.technology_id,       I.technology_name,       A.learning_phase_id,       J.learning_phase_name,       A.knowledge_id,       K.knowledge_name,       A.exercises_document_id,       H.document_url AS exercises_document_url,       H.answer_url AS exercises_answer_url,       A.source_code_git_url,       A.data_status,       CASE WHEN A.data_status = 'P' THEN '未练习'       WHEN A.data_status = 'W' THEN '待批改'       WHEN A.data_status = 'R' THEN '待修改'       WHEN A.data_status = 'S' THEN '已通过'       ELSE '未知数据状态'       END AS data_status_text,       M.reviewer_id,       M.reviewer_name_teacher,       M.reviewer_name_student,       M.reviewer_type,       DATE_FORMAT(M.update_time, '%Y-%m-%d %H:%i:%s') AS review_time,       DATE_FORMAT(A.create_time, '%Y-%m-%d %H:%i:%s') AS create_time,       DATE_FORMAT(A.update_time, '%Y-%m-%d %H:%i:%s') AS update_time     FROM shangshufang_customer.university_student_exercises A     INNER JOIN shangshufang_customer.university B     ON A.student_university_code = B.university_code     INNER JOIN shangshufang_customer.school C     ON A.student_university_code = C.university_code     AND A.student_school_id = C.school_id     INNER JOIN shangshufang_customer.university D     ON A.course_university_code = D.university_code     INNER JOIN shangshufang_customer.school E     ON A.course_university_code = E.university_code     AND A.course_school_id = E.school_id     INNER JOIN shangshufang_customer.university_student F     ON A.student_id = F.student_id     INNER JOIN shangshufang_customer.course G     ON A.course_university_code = G.university_code     AND A.course_school_id = G.school_id     AND A.course_id = G.course_id     INNER JOIN shangshufang_base.technology_knowledge_exercises H     ON A.technology_id = H.technology_id     AND A.knowledge_id = H.knowledge_id     AND A.exercises_document_id = H.exercises_id     INNER JOIN shangshufang_base.technology I     ON A.technology_id = I.technology_id     INNER JOIN shangshufang_base.learning_phase J     ON A.learning_phase_id = J.learning_phase_id     INNER JOIN shangshufang_base.technology_knowledge K     ON A.technology_id = K.technology_id     AND A.learning_phase_id = K.learning_phase_id     AND A.knowledge_id = K.knowledge_id     AND K.data_status = 'A'     LEFT JOIN     (     SELECT     C.student_exercises_id,     C.reviewer_id,     C.reviewer_type,     D.full_name AS reviewer_name_teacher,     E.full_name AS reviewer_name_student,     C.update_time     FROM     (     SELECT     A.review_id,     A.student_exercises_id,     A.update_time,     B.reviewer_id,     B.reviewer_university_code,     B.reviewer_school_id,     B.reviewer_type     FROM     (     SELECT     student_exercises_id,     MAX(review_id) AS review_id,     MAX(update_time) AS update_time     FROM shangshufang_customer.university_student_exercises_review     GROUP BY student_exercises_id     ) A     INNER JOIN shangshufang_customer.university_student_exercises_review B     ON A.review_id = B.review_id     AND A.student_exercises_id = B.student_exercises_id     ) C     LEFT JOIN shangshufang_customer.university_customer D     ON C.reviewer_university_code = D.university_code     AND C.reviewer_school_id = D.school_id     AND C.reviewer_id = D.customer_id     AND C.reviewer_type = 'T'     LEFT JOIN shangshufang_customer.university_student E     ON C.reviewer_university_code = E.university_code     AND C.reviewer_school_id = E.school_id     AND C.reviewer_id = E.student_id     AND C.reviewer_type = 'S'     ) M     ON A.student_exercises_id = M.student_exercises_id     INNER JOIN shangshufang_customer.university_student_ability_analysis N     ON A.student_id = N.student_id     WHERE a.technology_id = ?     AND a.student_university_code = ?     AND a.student_school_id = ?     AND a.student_id = ?            ORDER BY A.course_class, A.knowledge_id, A.exercises_document_id, A.update_time DESC     LIMIT ?, ?;
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-130, 10' at line 128
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-130, 10' at line 128
[2020-06-06 22:42:19,054][http-nio-8081-exec-6][ERROR][com.shangshufang.apiservice.service.impl.UniversityStudentExercisesServiceImpl:101] org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-140, 10' at line 128
### The error may exist in file [/Users/zhangqiang/Documents/04-Project/ShangShuFang/SourceCode/shangshufang.apiservice/target/classes/mapping/UniversityStudentExercisesMapping.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT       A.student_exercises_id,       A.student_university_code,       B.university_name AS student_university_name,       A.student_school_id,       C.school_name AS student_school_name,       A.student_id,       F.full_name AS student_name,       F.photo AS student_photo,       F.cellphone,       F.enrollment_year,       N.ability_level,       N.position_site,       A.course_university_code,       D.university_name AS course_university_name,       A.course_school_id,       E.school_name AS course_school_name,       A.course_id,       G.course_name,       A.course_class,       A.technology_id,       I.technology_name,       A.learning_phase_id,       J.learning_phase_name,       A.knowledge_id,       K.knowledge_name,       A.exercises_document_id,       H.document_url AS exercises_document_url,       H.answer_url AS exercises_answer_url,       A.source_code_git_url,       A.data_status,       CASE WHEN A.data_status = 'P' THEN '未练习'       WHEN A.data_status = 'W' THEN '待批改'       WHEN A.data_status = 'R' THEN '待修改'       WHEN A.data_status = 'S' THEN '已通过'       ELSE '未知数据状态'       END AS data_status_text,       M.reviewer_id,       M.reviewer_name_teacher,       M.reviewer_name_student,       M.reviewer_type,       DATE_FORMAT(M.update_time, '%Y-%m-%d %H:%i:%s') AS review_time,       DATE_FORMAT(A.create_time, '%Y-%m-%d %H:%i:%s') AS create_time,       DATE_FORMAT(A.update_time, '%Y-%m-%d %H:%i:%s') AS update_time     FROM shangshufang_customer.university_student_exercises A     INNER JOIN shangshufang_customer.university B     ON A.student_university_code = B.university_code     INNER JOIN shangshufang_customer.school C     ON A.student_university_code = C.university_code     AND A.student_school_id = C.school_id     INNER JOIN shangshufang_customer.university D     ON A.course_university_code = D.university_code     INNER JOIN shangshufang_customer.school E     ON A.course_university_code = E.university_code     AND A.course_school_id = E.school_id     INNER JOIN shangshufang_customer.university_student F     ON A.student_id = F.student_id     INNER JOIN shangshufang_customer.course G     ON A.course_university_code = G.university_code     AND A.course_school_id = G.school_id     AND A.course_id = G.course_id     INNER JOIN shangshufang_base.technology_knowledge_exercises H     ON A.technology_id = H.technology_id     AND A.knowledge_id = H.knowledge_id     AND A.exercises_document_id = H.exercises_id     INNER JOIN shangshufang_base.technology I     ON A.technology_id = I.technology_id     INNER JOIN shangshufang_base.learning_phase J     ON A.learning_phase_id = J.learning_phase_id     INNER JOIN shangshufang_base.technology_knowledge K     ON A.technology_id = K.technology_id     AND A.learning_phase_id = K.learning_phase_id     AND A.knowledge_id = K.knowledge_id     AND K.data_status = 'A'     LEFT JOIN     (     SELECT     C.student_exercises_id,     C.reviewer_id,     C.reviewer_type,     D.full_name AS reviewer_name_teacher,     E.full_name AS reviewer_name_student,     C.update_time     FROM     (     SELECT     A.review_id,     A.student_exercises_id,     A.update_time,     B.reviewer_id,     B.reviewer_university_code,     B.reviewer_school_id,     B.reviewer_type     FROM     (     SELECT     student_exercises_id,     MAX(review_id) AS review_id,     MAX(update_time) AS update_time     FROM shangshufang_customer.university_student_exercises_review     GROUP BY student_exercises_id     ) A     INNER JOIN shangshufang_customer.university_student_exercises_review B     ON A.review_id = B.review_id     AND A.student_exercises_id = B.student_exercises_id     ) C     LEFT JOIN shangshufang_customer.university_customer D     ON C.reviewer_university_code = D.university_code     AND C.reviewer_school_id = D.school_id     AND C.reviewer_id = D.customer_id     AND C.reviewer_type = 'T'     LEFT JOIN shangshufang_customer.university_student E     ON C.reviewer_university_code = E.university_code     AND C.reviewer_school_id = E.school_id     AND C.reviewer_id = E.student_id     AND C.reviewer_type = 'S'     ) M     ON A.student_exercises_id = M.student_exercises_id     INNER JOIN shangshufang_customer.university_student_ability_analysis N     ON A.student_id = N.student_id     WHERE a.technology_id = ?     AND a.student_university_code = ?     AND a.student_school_id = ?     AND a.student_id = ?            ORDER BY A.course_class, A.knowledge_id, A.exercises_document_id, A.update_time DESC     LIMIT ?, ?;
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-140, 10' at line 128
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-140, 10' at line 128
[2020-06-06 22:42:19,054][http-nio-8081-exec-8][ERROR][com.shangshufang.apiservice.service.impl.UniversityStudentExercisesServiceImpl:101] org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-150, 10' at line 128
### The error may exist in file [/Users/zhangqiang/Documents/04-Project/ShangShuFang/SourceCode/shangshufang.apiservice/target/classes/mapping/UniversityStudentExercisesMapping.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT       A.student_exercises_id,       A.student_university_code,       B.university_name AS student_university_name,       A.student_school_id,       C.school_name AS student_school_name,       A.student_id,       F.full_name AS student_name,       F.photo AS student_photo,       F.cellphone,       F.enrollment_year,       N.ability_level,       N.position_site,       A.course_university_code,       D.university_name AS course_university_name,       A.course_school_id,       E.school_name AS course_school_name,       A.course_id,       G.course_name,       A.course_class,       A.technology_id,       I.technology_name,       A.learning_phase_id,       J.learning_phase_name,       A.knowledge_id,       K.knowledge_name,       A.exercises_document_id,       H.document_url AS exercises_document_url,       H.answer_url AS exercises_answer_url,       A.source_code_git_url,       A.data_status,       CASE WHEN A.data_status = 'P' THEN '未练习'       WHEN A.data_status = 'W' THEN '待批改'       WHEN A.data_status = 'R' THEN '待修改'       WHEN A.data_status = 'S' THEN '已通过'       ELSE '未知数据状态'       END AS data_status_text,       M.reviewer_id,       M.reviewer_name_teacher,       M.reviewer_name_student,       M.reviewer_type,       DATE_FORMAT(M.update_time, '%Y-%m-%d %H:%i:%s') AS review_time,       DATE_FORMAT(A.create_time, '%Y-%m-%d %H:%i:%s') AS create_time,       DATE_FORMAT(A.update_time, '%Y-%m-%d %H:%i:%s') AS update_time     FROM shangshufang_customer.university_student_exercises A     INNER JOIN shangshufang_customer.university B     ON A.student_university_code = B.university_code     INNER JOIN shangshufang_customer.school C     ON A.student_university_code = C.university_code     AND A.student_school_id = C.school_id     INNER JOIN shangshufang_customer.university D     ON A.course_university_code = D.university_code     INNER JOIN shangshufang_customer.school E     ON A.course_university_code = E.university_code     AND A.course_school_id = E.school_id     INNER JOIN shangshufang_customer.university_student F     ON A.student_id = F.student_id     INNER JOIN shangshufang_customer.course G     ON A.course_university_code = G.university_code     AND A.course_school_id = G.school_id     AND A.course_id = G.course_id     INNER JOIN shangshufang_base.technology_knowledge_exercises H     ON A.technology_id = H.technology_id     AND A.knowledge_id = H.knowledge_id     AND A.exercises_document_id = H.exercises_id     INNER JOIN shangshufang_base.technology I     ON A.technology_id = I.technology_id     INNER JOIN shangshufang_base.learning_phase J     ON A.learning_phase_id = J.learning_phase_id     INNER JOIN shangshufang_base.technology_knowledge K     ON A.technology_id = K.technology_id     AND A.learning_phase_id = K.learning_phase_id     AND A.knowledge_id = K.knowledge_id     AND K.data_status = 'A'     LEFT JOIN     (     SELECT     C.student_exercises_id,     C.reviewer_id,     C.reviewer_type,     D.full_name AS reviewer_name_teacher,     E.full_name AS reviewer_name_student,     C.update_time     FROM     (     SELECT     A.review_id,     A.student_exercises_id,     A.update_time,     B.reviewer_id,     B.reviewer_university_code,     B.reviewer_school_id,     B.reviewer_type     FROM     (     SELECT     student_exercises_id,     MAX(review_id) AS review_id,     MAX(update_time) AS update_time     FROM shangshufang_customer.university_student_exercises_review     GROUP BY student_exercises_id     ) A     INNER JOIN shangshufang_customer.university_student_exercises_review B     ON A.review_id = B.review_id     AND A.student_exercises_id = B.student_exercises_id     ) C     LEFT JOIN shangshufang_customer.university_customer D     ON C.reviewer_university_code = D.university_code     AND C.reviewer_school_id = D.school_id     AND C.reviewer_id = D.customer_id     AND C.reviewer_type = 'T'     LEFT JOIN shangshufang_customer.university_student E     ON C.reviewer_university_code = E.university_code     AND C.reviewer_school_id = E.school_id     AND C.reviewer_id = E.student_id     AND C.reviewer_type = 'S'     ) M     ON A.student_exercises_id = M.student_exercises_id     INNER JOIN shangshufang_customer.university_student_ability_analysis N     ON A.student_id = N.student_id     WHERE a.technology_id = ?     AND a.student_university_code = ?     AND a.student_school_id = ?     AND a.student_id = ?            ORDER BY A.course_class, A.knowledge_id, A.exercises_document_id, A.update_time DESC     LIMIT ?, ?;
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-150, 10' at line 128
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-150, 10' at line 128
[2020-06-06 22:42:19,070][http-nio-8081-exec-7][ERROR][com.shangshufang.apiservice.service.impl.UniversityStudentExercisesServiceImpl:101] org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-180, 10' at line 128
### The error may exist in file [/Users/zhangqiang/Documents/04-Project/ShangShuFang/SourceCode/shangshufang.apiservice/target/classes/mapping/UniversityStudentExercisesMapping.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT       A.student_exercises_id,       A.student_university_code,       B.university_name AS student_university_name,       A.student_school_id,       C.school_name AS student_school_name,       A.student_id,       F.full_name AS student_name,       F.photo AS student_photo,       F.cellphone,       F.enrollment_year,       N.ability_level,       N.position_site,       A.course_university_code,       D.university_name AS course_university_name,       A.course_school_id,       E.school_name AS course_school_name,       A.course_id,       G.course_name,       A.course_class,       A.technology_id,       I.technology_name,       A.learning_phase_id,       J.learning_phase_name,       A.knowledge_id,       K.knowledge_name,       A.exercises_document_id,       H.document_url AS exercises_document_url,       H.answer_url AS exercises_answer_url,       A.source_code_git_url,       A.data_status,       CASE WHEN A.data_status = 'P' THEN '未练习'       WHEN A.data_status = 'W' THEN '待批改'       WHEN A.data_status = 'R' THEN '待修改'       WHEN A.data_status = 'S' THEN '已通过'       ELSE '未知数据状态'       END AS data_status_text,       M.reviewer_id,       M.reviewer_name_teacher,       M.reviewer_name_student,       M.reviewer_type,       DATE_FORMAT(M.update_time, '%Y-%m-%d %H:%i:%s') AS review_time,       DATE_FORMAT(A.create_time, '%Y-%m-%d %H:%i:%s') AS create_time,       DATE_FORMAT(A.update_time, '%Y-%m-%d %H:%i:%s') AS update_time     FROM shangshufang_customer.university_student_exercises A     INNER JOIN shangshufang_customer.university B     ON A.student_university_code = B.university_code     INNER JOIN shangshufang_customer.school C     ON A.student_university_code = C.university_code     AND A.student_school_id = C.school_id     INNER JOIN shangshufang_customer.university D     ON A.course_university_code = D.university_code     INNER JOIN shangshufang_customer.school E     ON A.course_university_code = E.university_code     AND A.course_school_id = E.school_id     INNER JOIN shangshufang_customer.university_student F     ON A.student_id = F.student_id     INNER JOIN shangshufang_customer.course G     ON A.course_university_code = G.university_code     AND A.course_school_id = G.school_id     AND A.course_id = G.course_id     INNER JOIN shangshufang_base.technology_knowledge_exercises H     ON A.technology_id = H.technology_id     AND A.knowledge_id = H.knowledge_id     AND A.exercises_document_id = H.exercises_id     INNER JOIN shangshufang_base.technology I     ON A.technology_id = I.technology_id     INNER JOIN shangshufang_base.learning_phase J     ON A.learning_phase_id = J.learning_phase_id     INNER JOIN shangshufang_base.technology_knowledge K     ON A.technology_id = K.technology_id     AND A.learning_phase_id = K.learning_phase_id     AND A.knowledge_id = K.knowledge_id     AND K.data_status = 'A'     LEFT JOIN     (     SELECT     C.student_exercises_id,     C.reviewer_id,     C.reviewer_type,     D.full_name AS reviewer_name_teacher,     E.full_name AS reviewer_name_student,     C.update_time     FROM     (     SELECT     A.review_id,     A.student_exercises_id,     A.update_time,     B.reviewer_id,     B.reviewer_university_code,     B.reviewer_school_id,     B.reviewer_type     FROM     (     SELECT     student_exercises_id,     MAX(review_id) AS review_id,     MAX(update_time) AS update_time     FROM shangshufang_customer.university_student_exercises_review     GROUP BY student_exercises_id     ) A     INNER JOIN shangshufang_customer.university_student_exercises_review B     ON A.review_id = B.review_id     AND A.student_exercises_id = B.student_exercises_id     ) C     LEFT JOIN shangshufang_customer.university_customer D     ON C.reviewer_university_code = D.university_code     AND C.reviewer_school_id = D.school_id     AND C.reviewer_id = D.customer_id     AND C.reviewer_type = 'T'     LEFT JOIN shangshufang_customer.university_student E     ON C.reviewer_university_code = E.university_code     AND C.reviewer_school_id = E.school_id     AND C.reviewer_id = E.student_id     AND C.reviewer_type = 'S'     ) M     ON A.student_exercises_id = M.student_exercises_id     INNER JOIN shangshufang_customer.university_student_ability_analysis N     ON A.student_id = N.student_id     WHERE a.technology_id = ?     AND a.student_university_code = ?     AND a.student_school_id = ?     AND a.student_id = ?            ORDER BY A.course_class, A.knowledge_id, A.exercises_document_id, A.update_time DESC     LIMIT ?, ?;
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-180, 10' at line 128
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-180, 10' at line 128
[2020-06-06 22:42:19,070][http-nio-8081-exec-5][ERROR][com.shangshufang.apiservice.service.impl.UniversityStudentExercisesServiceImpl:101] org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-220, 10' at line 128
### The error may exist in file [/Users/zhangqiang/Documents/04-Project/ShangShuFang/SourceCode/shangshufang.apiservice/target/classes/mapping/UniversityStudentExercisesMapping.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT       A.student_exercises_id,       A.student_university_code,       B.university_name AS student_university_name,       A.student_school_id,       C.school_name AS student_school_name,       A.student_id,       F.full_name AS student_name,       F.photo AS student_photo,       F.cellphone,       F.enrollment_year,       N.ability_level,       N.position_site,       A.course_university_code,       D.university_name AS course_university_name,       A.course_school_id,       E.school_name AS course_school_name,       A.course_id,       G.course_name,       A.course_class,       A.technology_id,       I.technology_name,       A.learning_phase_id,       J.learning_phase_name,       A.knowledge_id,       K.knowledge_name,       A.exercises_document_id,       H.document_url AS exercises_document_url,       H.answer_url AS exercises_answer_url,       A.source_code_git_url,       A.data_status,       CASE WHEN A.data_status = 'P' THEN '未练习'       WHEN A.data_status = 'W' THEN '待批改'       WHEN A.data_status = 'R' THEN '待修改'       WHEN A.data_status = 'S' THEN '已通过'       ELSE '未知数据状态'       END AS data_status_text,       M.reviewer_id,       M.reviewer_name_teacher,       M.reviewer_name_student,       M.reviewer_type,       DATE_FORMAT(M.update_time, '%Y-%m-%d %H:%i:%s') AS review_time,       DATE_FORMAT(A.create_time, '%Y-%m-%d %H:%i:%s') AS create_time,       DATE_FORMAT(A.update_time, '%Y-%m-%d %H:%i:%s') AS update_time     FROM shangshufang_customer.university_student_exercises A     INNER JOIN shangshufang_customer.university B     ON A.student_university_code = B.university_code     INNER JOIN shangshufang_customer.school C     ON A.student_university_code = C.university_code     AND A.student_school_id = C.school_id     INNER JOIN shangshufang_customer.university D     ON A.course_university_code = D.university_code     INNER JOIN shangshufang_customer.school E     ON A.course_university_code = E.university_code     AND A.course_school_id = E.school_id     INNER JOIN shangshufang_customer.university_student F     ON A.student_id = F.student_id     INNER JOIN shangshufang_customer.course G     ON A.course_university_code = G.university_code     AND A.course_school_id = G.school_id     AND A.course_id = G.course_id     INNER JOIN shangshufang_base.technology_knowledge_exercises H     ON A.technology_id = H.technology_id     AND A.knowledge_id = H.knowledge_id     AND A.exercises_document_id = H.exercises_id     INNER JOIN shangshufang_base.technology I     ON A.technology_id = I.technology_id     INNER JOIN shangshufang_base.learning_phase J     ON A.learning_phase_id = J.learning_phase_id     INNER JOIN shangshufang_base.technology_knowledge K     ON A.technology_id = K.technology_id     AND A.learning_phase_id = K.learning_phase_id     AND A.knowledge_id = K.knowledge_id     AND K.data_status = 'A'     LEFT JOIN     (     SELECT     C.student_exercises_id,     C.reviewer_id,     C.reviewer_type,     D.full_name AS reviewer_name_teacher,     E.full_name AS reviewer_name_student,     C.update_time     FROM     (     SELECT     A.review_id,     A.student_exercises_id,     A.update_time,     B.reviewer_id,     B.reviewer_university_code,     B.reviewer_school_id,     B.reviewer_type     FROM     (     SELECT     student_exercises_id,     MAX(review_id) AS review_id,     MAX(update_time) AS update_time     FROM shangshufang_customer.university_student_exercises_review     GROUP BY student_exercises_id     ) A     INNER JOIN shangshufang_customer.university_student_exercises_review B     ON A.review_id = B.review_id     AND A.student_exercises_id = B.student_exercises_id     ) C     LEFT JOIN shangshufang_customer.university_customer D     ON C.reviewer_university_code = D.university_code     AND C.reviewer_school_id = D.school_id     AND C.reviewer_id = D.customer_id     AND C.reviewer_type = 'T'     LEFT JOIN shangshufang_customer.university_student E     ON C.reviewer_university_code = E.university_code     AND C.reviewer_school_id = E.school_id     AND C.reviewer_id = E.student_id     AND C.reviewer_type = 'S'     ) M     ON A.student_exercises_id = M.student_exercises_id     INNER JOIN shangshufang_customer.university_student_ability_analysis N     ON A.student_id = N.student_id     WHERE a.technology_id = ?     AND a.student_university_code = ?     AND a.student_school_id = ?     AND a.student_id = ?            ORDER BY A.course_class, A.knowledge_id, A.exercises_document_id, A.update_time DESC     LIMIT ?, ?;
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-220, 10' at line 128
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-220, 10' at line 128
[2020-06-06 22:42:19,070][http-nio-8081-exec-1][ERROR][com.shangshufang.apiservice.service.impl.UniversityStudentExercisesServiceImpl:101] org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-160, 10' at line 128
### The error may exist in file [/Users/zhangqiang/Documents/04-Project/ShangShuFang/SourceCode/shangshufang.apiservice/target/classes/mapping/UniversityStudentExercisesMapping.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT       A.student_exercises_id,       A.student_university_code,       B.university_name AS student_university_name,       A.student_school_id,       C.school_name AS student_school_name,       A.student_id,       F.full_name AS student_name,       F.photo AS student_photo,       F.cellphone,       F.enrollment_year,       N.ability_level,       N.position_site,       A.course_university_code,       D.university_name AS course_university_name,       A.course_school_id,       E.school_name AS course_school_name,       A.course_id,       G.course_name,       A.course_class,       A.technology_id,       I.technology_name,       A.learning_phase_id,       J.learning_phase_name,       A.knowledge_id,       K.knowledge_name,       A.exercises_document_id,       H.document_url AS exercises_document_url,       H.answer_url AS exercises_answer_url,       A.source_code_git_url,       A.data_status,       CASE WHEN A.data_status = 'P' THEN '未练习'       WHEN A.data_status = 'W' THEN '待批改'       WHEN A.data_status = 'R' THEN '待修改'       WHEN A.data_status = 'S' THEN '已通过'       ELSE '未知数据状态'       END AS data_status_text,       M.reviewer_id,       M.reviewer_name_teacher,       M.reviewer_name_student,       M.reviewer_type,       DATE_FORMAT(M.update_time, '%Y-%m-%d %H:%i:%s') AS review_time,       DATE_FORMAT(A.create_time, '%Y-%m-%d %H:%i:%s') AS create_time,       DATE_FORMAT(A.update_time, '%Y-%m-%d %H:%i:%s') AS update_time     FROM shangshufang_customer.university_student_exercises A     INNER JOIN shangshufang_customer.university B     ON A.student_university_code = B.university_code     INNER JOIN shangshufang_customer.school C     ON A.student_university_code = C.university_code     AND A.student_school_id = C.school_id     INNER JOIN shangshufang_customer.university D     ON A.course_university_code = D.university_code     INNER JOIN shangshufang_customer.school E     ON A.course_university_code = E.university_code     AND A.course_school_id = E.school_id     INNER JOIN shangshufang_customer.university_student F     ON A.student_id = F.student_id     INNER JOIN shangshufang_customer.course G     ON A.course_university_code = G.university_code     AND A.course_school_id = G.school_id     AND A.course_id = G.course_id     INNER JOIN shangshufang_base.technology_knowledge_exercises H     ON A.technology_id = H.technology_id     AND A.knowledge_id = H.knowledge_id     AND A.exercises_document_id = H.exercises_id     INNER JOIN shangshufang_base.technology I     ON A.technology_id = I.technology_id     INNER JOIN shangshufang_base.learning_phase J     ON A.learning_phase_id = J.learning_phase_id     INNER JOIN shangshufang_base.technology_knowledge K     ON A.technology_id = K.technology_id     AND A.learning_phase_id = K.learning_phase_id     AND A.knowledge_id = K.knowledge_id     AND K.data_status = 'A'     LEFT JOIN     (     SELECT     C.student_exercises_id,     C.reviewer_id,     C.reviewer_type,     D.full_name AS reviewer_name_teacher,     E.full_name AS reviewer_name_student,     C.update_time     FROM     (     SELECT     A.review_id,     A.student_exercises_id,     A.update_time,     B.reviewer_id,     B.reviewer_university_code,     B.reviewer_school_id,     B.reviewer_type     FROM     (     SELECT     student_exercises_id,     MAX(review_id) AS review_id,     MAX(update_time) AS update_time     FROM shangshufang_customer.university_student_exercises_review     GROUP BY student_exercises_id     ) A     INNER JOIN shangshufang_customer.university_student_exercises_review B     ON A.review_id = B.review_id     AND A.student_exercises_id = B.student_exercises_id     ) C     LEFT JOIN shangshufang_customer.university_customer D     ON C.reviewer_university_code = D.university_code     AND C.reviewer_school_id = D.school_id     AND C.reviewer_id = D.customer_id     AND C.reviewer_type = 'T'     LEFT JOIN shangshufang_customer.university_student E     ON C.reviewer_university_code = E.university_code     AND C.reviewer_school_id = E.school_id     AND C.reviewer_id = E.student_id     AND C.reviewer_type = 'S'     ) M     ON A.student_exercises_id = M.student_exercises_id     INNER JOIN shangshufang_customer.university_student_ability_analysis N     ON A.student_id = N.student_id     WHERE a.technology_id = ?     AND a.student_university_code = ?     AND a.student_school_id = ?     AND a.student_id = ?            ORDER BY A.course_class, A.knowledge_id, A.exercises_document_id, A.update_time DESC     LIMIT ?, ?;
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-160, 10' at line 128
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-160, 10' at line 128
[2020-06-06 22:42:19,070][http-nio-8081-exec-10][ERROR][com.shangshufang.apiservice.service.impl.UniversityStudentExercisesServiceImpl:101] org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-200, 10' at line 128
### The error may exist in file [/Users/zhangqiang/Documents/04-Project/ShangShuFang/SourceCode/shangshufang.apiservice/target/classes/mapping/UniversityStudentExercisesMapping.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT       A.student_exercises_id,       A.student_university_code,       B.university_name AS student_university_name,       A.student_school_id,       C.school_name AS student_school_name,       A.student_id,       F.full_name AS student_name,       F.photo AS student_photo,       F.cellphone,       F.enrollment_year,       N.ability_level,       N.position_site,       A.course_university_code,       D.university_name AS course_university_name,       A.course_school_id,       E.school_name AS course_school_name,       A.course_id,       G.course_name,       A.course_class,       A.technology_id,       I.technology_name,       A.learning_phase_id,       J.learning_phase_name,       A.knowledge_id,       K.knowledge_name,       A.exercises_document_id,       H.document_url AS exercises_document_url,       H.answer_url AS exercises_answer_url,       A.source_code_git_url,       A.data_status,       CASE WHEN A.data_status = 'P' THEN '未练习'       WHEN A.data_status = 'W' THEN '待批改'       WHEN A.data_status = 'R' THEN '待修改'       WHEN A.data_status = 'S' THEN '已通过'       ELSE '未知数据状态'       END AS data_status_text,       M.reviewer_id,       M.reviewer_name_teacher,       M.reviewer_name_student,       M.reviewer_type,       DATE_FORMAT(M.update_time, '%Y-%m-%d %H:%i:%s') AS review_time,       DATE_FORMAT(A.create_time, '%Y-%m-%d %H:%i:%s') AS create_time,       DATE_FORMAT(A.update_time, '%Y-%m-%d %H:%i:%s') AS update_time     FROM shangshufang_customer.university_student_exercises A     INNER JOIN shangshufang_customer.university B     ON A.student_university_code = B.university_code     INNER JOIN shangshufang_customer.school C     ON A.student_university_code = C.university_code     AND A.student_school_id = C.school_id     INNER JOIN shangshufang_customer.university D     ON A.course_university_code = D.university_code     INNER JOIN shangshufang_customer.school E     ON A.course_university_code = E.university_code     AND A.course_school_id = E.school_id     INNER JOIN shangshufang_customer.university_student F     ON A.student_id = F.student_id     INNER JOIN shangshufang_customer.course G     ON A.course_university_code = G.university_code     AND A.course_school_id = G.school_id     AND A.course_id = G.course_id     INNER JOIN shangshufang_base.technology_knowledge_exercises H     ON A.technology_id = H.technology_id     AND A.knowledge_id = H.knowledge_id     AND A.exercises_document_id = H.exercises_id     INNER JOIN shangshufang_base.technology I     ON A.technology_id = I.technology_id     INNER JOIN shangshufang_base.learning_phase J     ON A.learning_phase_id = J.learning_phase_id     INNER JOIN shangshufang_base.technology_knowledge K     ON A.technology_id = K.technology_id     AND A.learning_phase_id = K.learning_phase_id     AND A.knowledge_id = K.knowledge_id     AND K.data_status = 'A'     LEFT JOIN     (     SELECT     C.student_exercises_id,     C.reviewer_id,     C.reviewer_type,     D.full_name AS reviewer_name_teacher,     E.full_name AS reviewer_name_student,     C.update_time     FROM     (     SELECT     A.review_id,     A.student_exercises_id,     A.update_time,     B.reviewer_id,     B.reviewer_university_code,     B.reviewer_school_id,     B.reviewer_type     FROM     (     SELECT     student_exercises_id,     MAX(review_id) AS review_id,     MAX(update_time) AS update_time     FROM shangshufang_customer.university_student_exercises_review     GROUP BY student_exercises_id     ) A     INNER JOIN shangshufang_customer.university_student_exercises_review B     ON A.review_id = B.review_id     AND A.student_exercises_id = B.student_exercises_id     ) C     LEFT JOIN shangshufang_customer.university_customer D     ON C.reviewer_university_code = D.university_code     AND C.reviewer_school_id = D.school_id     AND C.reviewer_id = D.customer_id     AND C.reviewer_type = 'T'     LEFT JOIN shangshufang_customer.university_student E     ON C.reviewer_university_code = E.university_code     AND C.reviewer_school_id = E.school_id     AND C.reviewer_id = E.student_id     AND C.reviewer_type = 'S'     ) M     ON A.student_exercises_id = M.student_exercises_id     INNER JOIN shangshufang_customer.university_student_ability_analysis N     ON A.student_id = N.student_id     WHERE a.technology_id = ?     AND a.student_university_code = ?     AND a.student_school_id = ?     AND a.student_id = ?            ORDER BY A.course_class, A.knowledge_id, A.exercises_document_id, A.update_time DESC     LIMIT ?, ?;
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-200, 10' at line 128
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-200, 10' at line 128
[2020-06-06 22:42:19,071][http-nio-8081-exec-3][ERROR][com.shangshufang.apiservice.service.impl.UniversityStudentExercisesServiceImpl:101] org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-170, 10' at line 128
### The error may exist in file [/Users/zhangqiang/Documents/04-Project/ShangShuFang/SourceCode/shangshufang.apiservice/target/classes/mapping/UniversityStudentExercisesMapping.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT       A.student_exercises_id,       A.student_university_code,       B.university_name AS student_university_name,       A.student_school_id,       C.school_name AS student_school_name,       A.student_id,       F.full_name AS student_name,       F.photo AS student_photo,       F.cellphone,       F.enrollment_year,       N.ability_level,       N.position_site,       A.course_university_code,       D.university_name AS course_university_name,       A.course_school_id,       E.school_name AS course_school_name,       A.course_id,       G.course_name,       A.course_class,       A.technology_id,       I.technology_name,       A.learning_phase_id,       J.learning_phase_name,       A.knowledge_id,       K.knowledge_name,       A.exercises_document_id,       H.document_url AS exercises_document_url,       H.answer_url AS exercises_answer_url,       A.source_code_git_url,       A.data_status,       CASE WHEN A.data_status = 'P' THEN '未练习'       WHEN A.data_status = 'W' THEN '待批改'       WHEN A.data_status = 'R' THEN '待修改'       WHEN A.data_status = 'S' THEN '已通过'       ELSE '未知数据状态'       END AS data_status_text,       M.reviewer_id,       M.reviewer_name_teacher,       M.reviewer_name_student,       M.reviewer_type,       DATE_FORMAT(M.update_time, '%Y-%m-%d %H:%i:%s') AS review_time,       DATE_FORMAT(A.create_time, '%Y-%m-%d %H:%i:%s') AS create_time,       DATE_FORMAT(A.update_time, '%Y-%m-%d %H:%i:%s') AS update_time     FROM shangshufang_customer.university_student_exercises A     INNER JOIN shangshufang_customer.university B     ON A.student_university_code = B.university_code     INNER JOIN shangshufang_customer.school C     ON A.student_university_code = C.university_code     AND A.student_school_id = C.school_id     INNER JOIN shangshufang_customer.university D     ON A.course_university_code = D.university_code     INNER JOIN shangshufang_customer.school E     ON A.course_university_code = E.university_code     AND A.course_school_id = E.school_id     INNER JOIN shangshufang_customer.university_student F     ON A.student_id = F.student_id     INNER JOIN shangshufang_customer.course G     ON A.course_university_code = G.university_code     AND A.course_school_id = G.school_id     AND A.course_id = G.course_id     INNER JOIN shangshufang_base.technology_knowledge_exercises H     ON A.technology_id = H.technology_id     AND A.knowledge_id = H.knowledge_id     AND A.exercises_document_id = H.exercises_id     INNER JOIN shangshufang_base.technology I     ON A.technology_id = I.technology_id     INNER JOIN shangshufang_base.learning_phase J     ON A.learning_phase_id = J.learning_phase_id     INNER JOIN shangshufang_base.technology_knowledge K     ON A.technology_id = K.technology_id     AND A.learning_phase_id = K.learning_phase_id     AND A.knowledge_id = K.knowledge_id     AND K.data_status = 'A'     LEFT JOIN     (     SELECT     C.student_exercises_id,     C.reviewer_id,     C.reviewer_type,     D.full_name AS reviewer_name_teacher,     E.full_name AS reviewer_name_student,     C.update_time     FROM     (     SELECT     A.review_id,     A.student_exercises_id,     A.update_time,     B.reviewer_id,     B.reviewer_university_code,     B.reviewer_school_id,     B.reviewer_type     FROM     (     SELECT     student_exercises_id,     MAX(review_id) AS review_id,     MAX(update_time) AS update_time     FROM shangshufang_customer.university_student_exercises_review     GROUP BY student_exercises_id     ) A     INNER JOIN shangshufang_customer.university_student_exercises_review B     ON A.review_id = B.review_id     AND A.student_exercises_id = B.student_exercises_id     ) C     LEFT JOIN shangshufang_customer.university_customer D     ON C.reviewer_university_code = D.university_code     AND C.reviewer_school_id = D.school_id     AND C.reviewer_id = D.customer_id     AND C.reviewer_type = 'T'     LEFT JOIN shangshufang_customer.university_student E     ON C.reviewer_university_code = E.university_code     AND C.reviewer_school_id = E.school_id     AND C.reviewer_id = E.student_id     AND C.reviewer_type = 'S'     ) M     ON A.student_exercises_id = M.student_exercises_id     INNER JOIN shangshufang_customer.university_student_ability_analysis N     ON A.student_id = N.student_id     WHERE a.technology_id = ?     AND a.student_university_code = ?     AND a.student_school_id = ?     AND a.student_id = ?            ORDER BY A.course_class, A.knowledge_id, A.exercises_document_id, A.update_time DESC     LIMIT ?, ?;
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-170, 10' at line 128
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-170, 10' at line 128
[2020-06-06 22:42:19,071][http-nio-8081-exec-9][ERROR][com.shangshufang.apiservice.service.impl.UniversityStudentExercisesServiceImpl:101] org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-190, 10' at line 128
### The error may exist in file [/Users/zhangqiang/Documents/04-Project/ShangShuFang/SourceCode/shangshufang.apiservice/target/classes/mapping/UniversityStudentExercisesMapping.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT       A.student_exercises_id,       A.student_university_code,       B.university_name AS student_university_name,       A.student_school_id,       C.school_name AS student_school_name,       A.student_id,       F.full_name AS student_name,       F.photo AS student_photo,       F.cellphone,       F.enrollment_year,       N.ability_level,       N.position_site,       A.course_university_code,       D.university_name AS course_university_name,       A.course_school_id,       E.school_name AS course_school_name,       A.course_id,       G.course_name,       A.course_class,       A.technology_id,       I.technology_name,       A.learning_phase_id,       J.learning_phase_name,       A.knowledge_id,       K.knowledge_name,       A.exercises_document_id,       H.document_url AS exercises_document_url,       H.answer_url AS exercises_answer_url,       A.source_code_git_url,       A.data_status,       CASE WHEN A.data_status = 'P' THEN '未练习'       WHEN A.data_status = 'W' THEN '待批改'       WHEN A.data_status = 'R' THEN '待修改'       WHEN A.data_status = 'S' THEN '已通过'       ELSE '未知数据状态'       END AS data_status_text,       M.reviewer_id,       M.reviewer_name_teacher,       M.reviewer_name_student,       M.reviewer_type,       DATE_FORMAT(M.update_time, '%Y-%m-%d %H:%i:%s') AS review_time,       DATE_FORMAT(A.create_time, '%Y-%m-%d %H:%i:%s') AS create_time,       DATE_FORMAT(A.update_time, '%Y-%m-%d %H:%i:%s') AS update_time     FROM shangshufang_customer.university_student_exercises A     INNER JOIN shangshufang_customer.university B     ON A.student_university_code = B.university_code     INNER JOIN shangshufang_customer.school C     ON A.student_university_code = C.university_code     AND A.student_school_id = C.school_id     INNER JOIN shangshufang_customer.university D     ON A.course_university_code = D.university_code     INNER JOIN shangshufang_customer.school E     ON A.course_university_code = E.university_code     AND A.course_school_id = E.school_id     INNER JOIN shangshufang_customer.university_student F     ON A.student_id = F.student_id     INNER JOIN shangshufang_customer.course G     ON A.course_university_code = G.university_code     AND A.course_school_id = G.school_id     AND A.course_id = G.course_id     INNER JOIN shangshufang_base.technology_knowledge_exercises H     ON A.technology_id = H.technology_id     AND A.knowledge_id = H.knowledge_id     AND A.exercises_document_id = H.exercises_id     INNER JOIN shangshufang_base.technology I     ON A.technology_id = I.technology_id     INNER JOIN shangshufang_base.learning_phase J     ON A.learning_phase_id = J.learning_phase_id     INNER JOIN shangshufang_base.technology_knowledge K     ON A.technology_id = K.technology_id     AND A.learning_phase_id = K.learning_phase_id     AND A.knowledge_id = K.knowledge_id     AND K.data_status = 'A'     LEFT JOIN     (     SELECT     C.student_exercises_id,     C.reviewer_id,     C.reviewer_type,     D.full_name AS reviewer_name_teacher,     E.full_name AS reviewer_name_student,     C.update_time     FROM     (     SELECT     A.review_id,     A.student_exercises_id,     A.update_time,     B.reviewer_id,     B.reviewer_university_code,     B.reviewer_school_id,     B.reviewer_type     FROM     (     SELECT     student_exercises_id,     MAX(review_id) AS review_id,     MAX(update_time) AS update_time     FROM shangshufang_customer.university_student_exercises_review     GROUP BY student_exercises_id     ) A     INNER JOIN shangshufang_customer.university_student_exercises_review B     ON A.review_id = B.review_id     AND A.student_exercises_id = B.student_exercises_id     ) C     LEFT JOIN shangshufang_customer.university_customer D     ON C.reviewer_university_code = D.university_code     AND C.reviewer_school_id = D.school_id     AND C.reviewer_id = D.customer_id     AND C.reviewer_type = 'T'     LEFT JOIN shangshufang_customer.university_student E     ON C.reviewer_university_code = E.university_code     AND C.reviewer_school_id = E.school_id     AND C.reviewer_id = E.student_id     AND C.reviewer_type = 'S'     ) M     ON A.student_exercises_id = M.student_exercises_id     INNER JOIN shangshufang_customer.university_student_ability_analysis N     ON A.student_id = N.student_id     WHERE a.technology_id = ?     AND a.student_university_code = ?     AND a.student_school_id = ?     AND a.student_id = ?            ORDER BY A.course_class, A.knowledge_id, A.exercises_document_id, A.update_time DESC     LIMIT ?, ?;
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-190, 10' at line 128
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-190, 10' at line 128
[2020-06-06 22:42:19,096][http-nio-8081-exec-5][ERROR][com.shangshufang.apiservice.service.impl.UniversityStudentExercisesServiceImpl:101] org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-270, 10' at line 128
### The error may exist in file [/Users/zhangqiang/Documents/04-Project/ShangShuFang/SourceCode/shangshufang.apiservice/target/classes/mapping/UniversityStudentExercisesMapping.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT       A.student_exercises_id,       A.student_university_code,       B.university_name AS student_university_name,       A.student_school_id,       C.school_name AS student_school_name,       A.student_id,       F.full_name AS student_name,       F.photo AS student_photo,       F.cellphone,       F.enrollment_year,       N.ability_level,       N.position_site,       A.course_university_code,       D.university_name AS course_university_name,       A.course_school_id,       E.school_name AS course_school_name,       A.course_id,       G.course_name,       A.course_class,       A.technology_id,       I.technology_name,       A.learning_phase_id,       J.learning_phase_name,       A.knowledge_id,       K.knowledge_name,       A.exercises_document_id,       H.document_url AS exercises_document_url,       H.answer_url AS exercises_answer_url,       A.source_code_git_url,       A.data_status,       CASE WHEN A.data_status = 'P' THEN '未练习'       WHEN A.data_status = 'W' THEN '待批改'       WHEN A.data_status = 'R' THEN '待修改'       WHEN A.data_status = 'S' THEN '已通过'       ELSE '未知数据状态'       END AS data_status_text,       M.reviewer_id,       M.reviewer_name_teacher,       M.reviewer_name_student,       M.reviewer_type,       DATE_FORMAT(M.update_time, '%Y-%m-%d %H:%i:%s') AS review_time,       DATE_FORMAT(A.create_time, '%Y-%m-%d %H:%i:%s') AS create_time,       DATE_FORMAT(A.update_time, '%Y-%m-%d %H:%i:%s') AS update_time     FROM shangshufang_customer.university_student_exercises A     INNER JOIN shangshufang_customer.university B     ON A.student_university_code = B.university_code     INNER JOIN shangshufang_customer.school C     ON A.student_university_code = C.university_code     AND A.student_school_id = C.school_id     INNER JOIN shangshufang_customer.university D     ON A.course_university_code = D.university_code     INNER JOIN shangshufang_customer.school E     ON A.course_university_code = E.university_code     AND A.course_school_id = E.school_id     INNER JOIN shangshufang_customer.university_student F     ON A.student_id = F.student_id     INNER JOIN shangshufang_customer.course G     ON A.course_university_code = G.university_code     AND A.course_school_id = G.school_id     AND A.course_id = G.course_id     INNER JOIN shangshufang_base.technology_knowledge_exercises H     ON A.technology_id = H.technology_id     AND A.knowledge_id = H.knowledge_id     AND A.exercises_document_id = H.exercises_id     INNER JOIN shangshufang_base.technology I     ON A.technology_id = I.technology_id     INNER JOIN shangshufang_base.learning_phase J     ON A.learning_phase_id = J.learning_phase_id     INNER JOIN shangshufang_base.technology_knowledge K     ON A.technology_id = K.technology_id     AND A.learning_phase_id = K.learning_phase_id     AND A.knowledge_id = K.knowledge_id     AND K.data_status = 'A'     LEFT JOIN     (     SELECT     C.student_exercises_id,     C.reviewer_id,     C.reviewer_type,     D.full_name AS reviewer_name_teacher,     E.full_name AS reviewer_name_student,     C.update_time     FROM     (     SELECT     A.review_id,     A.student_exercises_id,     A.update_time,     B.reviewer_id,     B.reviewer_university_code,     B.reviewer_school_id,     B.reviewer_type     FROM     (     SELECT     student_exercises_id,     MAX(review_id) AS review_id,     MAX(update_time) AS update_time     FROM shangshufang_customer.university_student_exercises_review     GROUP BY student_exercises_id     ) A     INNER JOIN shangshufang_customer.university_student_exercises_review B     ON A.review_id = B.review_id     AND A.student_exercises_id = B.student_exercises_id     ) C     LEFT JOIN shangshufang_customer.university_customer D     ON C.reviewer_university_code = D.university_code     AND C.reviewer_school_id = D.school_id     AND C.reviewer_id = D.customer_id     AND C.reviewer_type = 'T'     LEFT JOIN shangshufang_customer.university_student E     ON C.reviewer_university_code = E.university_code     AND C.reviewer_school_id = E.school_id     AND C.reviewer_id = E.student_id     AND C.reviewer_type = 'S'     ) M     ON A.student_exercises_id = M.student_exercises_id     INNER JOIN shangshufang_customer.university_student_ability_analysis N     ON A.student_id = N.student_id     WHERE a.technology_id = ?     AND a.student_university_code = ?     AND a.student_school_id = ?     AND a.student_id = ?            ORDER BY A.course_class, A.knowledge_id, A.exercises_document_id, A.update_time DESC     LIMIT ?, ?;
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-270, 10' at line 128
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-270, 10' at line 128
[2020-06-06 22:42:19,096][http-nio-8081-exec-7][ERROR][com.shangshufang.apiservice.service.impl.UniversityStudentExercisesServiceImpl:101] org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-260, 10' at line 128
### The error may exist in file [/Users/zhangqiang/Documents/04-Project/ShangShuFang/SourceCode/shangshufang.apiservice/target/classes/mapping/UniversityStudentExercisesMapping.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT       A.student_exercises_id,       A.student_university_code,       B.university_name AS student_university_name,       A.student_school_id,       C.school_name AS student_school_name,       A.student_id,       F.full_name AS student_name,       F.photo AS student_photo,       F.cellphone,       F.enrollment_year,       N.ability_level,       N.position_site,       A.course_university_code,       D.university_name AS course_university_name,       A.course_school_id,       E.school_name AS course_school_name,       A.course_id,       G.course_name,       A.course_class,       A.technology_id,       I.technology_name,       A.learning_phase_id,       J.learning_phase_name,       A.knowledge_id,       K.knowledge_name,       A.exercises_document_id,       H.document_url AS exercises_document_url,       H.answer_url AS exercises_answer_url,       A.source_code_git_url,       A.data_status,       CASE WHEN A.data_status = 'P' THEN '未练习'       WHEN A.data_status = 'W' THEN '待批改'       WHEN A.data_status = 'R' THEN '待修改'       WHEN A.data_status = 'S' THEN '已通过'       ELSE '未知数据状态'       END AS data_status_text,       M.reviewer_id,       M.reviewer_name_teacher,       M.reviewer_name_student,       M.reviewer_type,       DATE_FORMAT(M.update_time, '%Y-%m-%d %H:%i:%s') AS review_time,       DATE_FORMAT(A.create_time, '%Y-%m-%d %H:%i:%s') AS create_time,       DATE_FORMAT(A.update_time, '%Y-%m-%d %H:%i:%s') AS update_time     FROM shangshufang_customer.university_student_exercises A     INNER JOIN shangshufang_customer.university B     ON A.student_university_code = B.university_code     INNER JOIN shangshufang_customer.school C     ON A.student_university_code = C.university_code     AND A.student_school_id = C.school_id     INNER JOIN shangshufang_customer.university D     ON A.course_university_code = D.university_code     INNER JOIN shangshufang_customer.school E     ON A.course_university_code = E.university_code     AND A.course_school_id = E.school_id     INNER JOIN shangshufang_customer.university_student F     ON A.student_id = F.student_id     INNER JOIN shangshufang_customer.course G     ON A.course_university_code = G.university_code     AND A.course_school_id = G.school_id     AND A.course_id = G.course_id     INNER JOIN shangshufang_base.technology_knowledge_exercises H     ON A.technology_id = H.technology_id     AND A.knowledge_id = H.knowledge_id     AND A.exercises_document_id = H.exercises_id     INNER JOIN shangshufang_base.technology I     ON A.technology_id = I.technology_id     INNER JOIN shangshufang_base.learning_phase J     ON A.learning_phase_id = J.learning_phase_id     INNER JOIN shangshufang_base.technology_knowledge K     ON A.technology_id = K.technology_id     AND A.learning_phase_id = K.learning_phase_id     AND A.knowledge_id = K.knowledge_id     AND K.data_status = 'A'     LEFT JOIN     (     SELECT     C.student_exercises_id,     C.reviewer_id,     C.reviewer_type,     D.full_name AS reviewer_name_teacher,     E.full_name AS reviewer_name_student,     C.update_time     FROM     (     SELECT     A.review_id,     A.student_exercises_id,     A.update_time,     B.reviewer_id,     B.reviewer_university_code,     B.reviewer_school_id,     B.reviewer_type     FROM     (     SELECT     student_exercises_id,     MAX(review_id) AS review_id,     MAX(update_time) AS update_time     FROM shangshufang_customer.university_student_exercises_review     GROUP BY student_exercises_id     ) A     INNER JOIN shangshufang_customer.university_student_exercises_review B     ON A.review_id = B.review_id     AND A.student_exercises_id = B.student_exercises_id     ) C     LEFT JOIN shangshufang_customer.university_customer D     ON C.reviewer_university_code = D.university_code     AND C.reviewer_school_id = D.school_id     AND C.reviewer_id = D.customer_id     AND C.reviewer_type = 'T'     LEFT JOIN shangshufang_customer.university_student E     ON C.reviewer_university_code = E.university_code     AND C.reviewer_school_id = E.school_id     AND C.reviewer_id = E.student_id     AND C.reviewer_type = 'S'     ) M     ON A.student_exercises_id = M.student_exercises_id     INNER JOIN shangshufang_customer.university_student_ability_analysis N     ON A.student_id = N.student_id     WHERE a.technology_id = ?     AND a.student_university_code = ?     AND a.student_school_id = ?     AND a.student_id = ?            ORDER BY A.course_class, A.knowledge_id, A.exercises_document_id, A.update_time DESC     LIMIT ?, ?;
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-260, 10' at line 128
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-260, 10' at line 128
[2020-06-06 22:42:19,096][http-nio-8081-exec-8][ERROR][com.shangshufang.apiservice.service.impl.UniversityStudentExercisesServiceImpl:101] org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-250, 10' at line 128
### The error may exist in file [/Users/zhangqiang/Documents/04-Project/ShangShuFang/SourceCode/shangshufang.apiservice/target/classes/mapping/UniversityStudentExercisesMapping.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT       A.student_exercises_id,       A.student_university_code,       B.university_name AS student_university_name,       A.student_school_id,       C.school_name AS student_school_name,       A.student_id,       F.full_name AS student_name,       F.photo AS student_photo,       F.cellphone,       F.enrollment_year,       N.ability_level,       N.position_site,       A.course_university_code,       D.university_name AS course_university_name,       A.course_school_id,       E.school_name AS course_school_name,       A.course_id,       G.course_name,       A.course_class,       A.technology_id,       I.technology_name,       A.learning_phase_id,       J.learning_phase_name,       A.knowledge_id,       K.knowledge_name,       A.exercises_document_id,       H.document_url AS exercises_document_url,       H.answer_url AS exercises_answer_url,       A.source_code_git_url,       A.data_status,       CASE WHEN A.data_status = 'P' THEN '未练习'       WHEN A.data_status = 'W' THEN '待批改'       WHEN A.data_status = 'R' THEN '待修改'       WHEN A.data_status = 'S' THEN '已通过'       ELSE '未知数据状态'       END AS data_status_text,       M.reviewer_id,       M.reviewer_name_teacher,       M.reviewer_name_student,       M.reviewer_type,       DATE_FORMAT(M.update_time, '%Y-%m-%d %H:%i:%s') AS review_time,       DATE_FORMAT(A.create_time, '%Y-%m-%d %H:%i:%s') AS create_time,       DATE_FORMAT(A.update_time, '%Y-%m-%d %H:%i:%s') AS update_time     FROM shangshufang_customer.university_student_exercises A     INNER JOIN shangshufang_customer.university B     ON A.student_university_code = B.university_code     INNER JOIN shangshufang_customer.school C     ON A.student_university_code = C.university_code     AND A.student_school_id = C.school_id     INNER JOIN shangshufang_customer.university D     ON A.course_university_code = D.university_code     INNER JOIN shangshufang_customer.school E     ON A.course_university_code = E.university_code     AND A.course_school_id = E.school_id     INNER JOIN shangshufang_customer.university_student F     ON A.student_id = F.student_id     INNER JOIN shangshufang_customer.course G     ON A.course_university_code = G.university_code     AND A.course_school_id = G.school_id     AND A.course_id = G.course_id     INNER JOIN shangshufang_base.technology_knowledge_exercises H     ON A.technology_id = H.technology_id     AND A.knowledge_id = H.knowledge_id     AND A.exercises_document_id = H.exercises_id     INNER JOIN shangshufang_base.technology I     ON A.technology_id = I.technology_id     INNER JOIN shangshufang_base.learning_phase J     ON A.learning_phase_id = J.learning_phase_id     INNER JOIN shangshufang_base.technology_knowledge K     ON A.technology_id = K.technology_id     AND A.learning_phase_id = K.learning_phase_id     AND A.knowledge_id = K.knowledge_id     AND K.data_status = 'A'     LEFT JOIN     (     SELECT     C.student_exercises_id,     C.reviewer_id,     C.reviewer_type,     D.full_name AS reviewer_name_teacher,     E.full_name AS reviewer_name_student,     C.update_time     FROM     (     SELECT     A.review_id,     A.student_exercises_id,     A.update_time,     B.reviewer_id,     B.reviewer_university_code,     B.reviewer_school_id,     B.reviewer_type     FROM     (     SELECT     student_exercises_id,     MAX(review_id) AS review_id,     MAX(update_time) AS update_time     FROM shangshufang_customer.university_student_exercises_review     GROUP BY student_exercises_id     ) A     INNER JOIN shangshufang_customer.university_student_exercises_review B     ON A.review_id = B.review_id     AND A.student_exercises_id = B.student_exercises_id     ) C     LEFT JOIN shangshufang_customer.university_customer D     ON C.reviewer_university_code = D.university_code     AND C.reviewer_school_id = D.school_id     AND C.reviewer_id = D.customer_id     AND C.reviewer_type = 'T'     LEFT JOIN shangshufang_customer.university_student E     ON C.reviewer_university_code = E.university_code     AND C.reviewer_school_id = E.school_id     AND C.reviewer_id = E.student_id     AND C.reviewer_type = 'S'     ) M     ON A.student_exercises_id = M.student_exercises_id     INNER JOIN shangshufang_customer.university_student_ability_analysis N     ON A.student_id = N.student_id     WHERE a.technology_id = ?     AND a.student_university_code = ?     AND a.student_school_id = ?     AND a.student_id = ?            ORDER BY A.course_class, A.knowledge_id, A.exercises_document_id, A.update_time DESC     LIMIT ?, ?;
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-250, 10' at line 128
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-250, 10' at line 128
[2020-06-06 22:42:19,096][http-nio-8081-exec-6][ERROR][com.shangshufang.apiservice.service.impl.UniversityStudentExercisesServiceImpl:101] org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-210, 10' at line 128
### The error may exist in file [/Users/zhangqiang/Documents/04-Project/ShangShuFang/SourceCode/shangshufang.apiservice/target/classes/mapping/UniversityStudentExercisesMapping.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT       A.student_exercises_id,       A.student_university_code,       B.university_name AS student_university_name,       A.student_school_id,       C.school_name AS student_school_name,       A.student_id,       F.full_name AS student_name,       F.photo AS student_photo,       F.cellphone,       F.enrollment_year,       N.ability_level,       N.position_site,       A.course_university_code,       D.university_name AS course_university_name,       A.course_school_id,       E.school_name AS course_school_name,       A.course_id,       G.course_name,       A.course_class,       A.technology_id,       I.technology_name,       A.learning_phase_id,       J.learning_phase_name,       A.knowledge_id,       K.knowledge_name,       A.exercises_document_id,       H.document_url AS exercises_document_url,       H.answer_url AS exercises_answer_url,       A.source_code_git_url,       A.data_status,       CASE WHEN A.data_status = 'P' THEN '未练习'       WHEN A.data_status = 'W' THEN '待批改'       WHEN A.data_status = 'R' THEN '待修改'       WHEN A.data_status = 'S' THEN '已通过'       ELSE '未知数据状态'       END AS data_status_text,       M.reviewer_id,       M.reviewer_name_teacher,       M.reviewer_name_student,       M.reviewer_type,       DATE_FORMAT(M.update_time, '%Y-%m-%d %H:%i:%s') AS review_time,       DATE_FORMAT(A.create_time, '%Y-%m-%d %H:%i:%s') AS create_time,       DATE_FORMAT(A.update_time, '%Y-%m-%d %H:%i:%s') AS update_time     FROM shangshufang_customer.university_student_exercises A     INNER JOIN shangshufang_customer.university B     ON A.student_university_code = B.university_code     INNER JOIN shangshufang_customer.school C     ON A.student_university_code = C.university_code     AND A.student_school_id = C.school_id     INNER JOIN shangshufang_customer.university D     ON A.course_university_code = D.university_code     INNER JOIN shangshufang_customer.school E     ON A.course_university_code = E.university_code     AND A.course_school_id = E.school_id     INNER JOIN shangshufang_customer.university_student F     ON A.student_id = F.student_id     INNER JOIN shangshufang_customer.course G     ON A.course_university_code = G.university_code     AND A.course_school_id = G.school_id     AND A.course_id = G.course_id     INNER JOIN shangshufang_base.technology_knowledge_exercises H     ON A.technology_id = H.technology_id     AND A.knowledge_id = H.knowledge_id     AND A.exercises_document_id = H.exercises_id     INNER JOIN shangshufang_base.technology I     ON A.technology_id = I.technology_id     INNER JOIN shangshufang_base.learning_phase J     ON A.learning_phase_id = J.learning_phase_id     INNER JOIN shangshufang_base.technology_knowledge K     ON A.technology_id = K.technology_id     AND A.learning_phase_id = K.learning_phase_id     AND A.knowledge_id = K.knowledge_id     AND K.data_status = 'A'     LEFT JOIN     (     SELECT     C.student_exercises_id,     C.reviewer_id,     C.reviewer_type,     D.full_name AS reviewer_name_teacher,     E.full_name AS reviewer_name_student,     C.update_time     FROM     (     SELECT     A.review_id,     A.student_exercises_id,     A.update_time,     B.reviewer_id,     B.reviewer_university_code,     B.reviewer_school_id,     B.reviewer_type     FROM     (     SELECT     student_exercises_id,     MAX(review_id) AS review_id,     MAX(update_time) AS update_time     FROM shangshufang_customer.university_student_exercises_review     GROUP BY student_exercises_id     ) A     INNER JOIN shangshufang_customer.university_student_exercises_review B     ON A.review_id = B.review_id     AND A.student_exercises_id = B.student_exercises_id     ) C     LEFT JOIN shangshufang_customer.university_customer D     ON C.reviewer_university_code = D.university_code     AND C.reviewer_school_id = D.school_id     AND C.reviewer_id = D.customer_id     AND C.reviewer_type = 'T'     LEFT JOIN shangshufang_customer.university_student E     ON C.reviewer_university_code = E.university_code     AND C.reviewer_school_id = E.school_id     AND C.reviewer_id = E.student_id     AND C.reviewer_type = 'S'     ) M     ON A.student_exercises_id = M.student_exercises_id     INNER JOIN shangshufang_customer.university_student_ability_analysis N     ON A.student_id = N.student_id     WHERE a.technology_id = ?     AND a.student_university_code = ?     AND a.student_school_id = ?     AND a.student_id = ?            ORDER BY A.course_class, A.knowledge_id, A.exercises_document_id, A.update_time DESC     LIMIT ?, ?;
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-210, 10' at line 128
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-210, 10' at line 128
[2020-06-06 22:42:19,096][http-nio-8081-exec-2][ERROR][com.shangshufang.apiservice.service.impl.UniversityStudentExercisesServiceImpl:101] org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-240, 10' at line 128
### The error may exist in file [/Users/zhangqiang/Documents/04-Project/ShangShuFang/SourceCode/shangshufang.apiservice/target/classes/mapping/UniversityStudentExercisesMapping.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT       A.student_exercises_id,       A.student_university_code,       B.university_name AS student_university_name,       A.student_school_id,       C.school_name AS student_school_name,       A.student_id,       F.full_name AS student_name,       F.photo AS student_photo,       F.cellphone,       F.enrollment_year,       N.ability_level,       N.position_site,       A.course_university_code,       D.university_name AS course_university_name,       A.course_school_id,       E.school_name AS course_school_name,       A.course_id,       G.course_name,       A.course_class,       A.technology_id,       I.technology_name,       A.learning_phase_id,       J.learning_phase_name,       A.knowledge_id,       K.knowledge_name,       A.exercises_document_id,       H.document_url AS exercises_document_url,       H.answer_url AS exercises_answer_url,       A.source_code_git_url,       A.data_status,       CASE WHEN A.data_status = 'P' THEN '未练习'       WHEN A.data_status = 'W' THEN '待批改'       WHEN A.data_status = 'R' THEN '待修改'       WHEN A.data_status = 'S' THEN '已通过'       ELSE '未知数据状态'       END AS data_status_text,       M.reviewer_id,       M.reviewer_name_teacher,       M.reviewer_name_student,       M.reviewer_type,       DATE_FORMAT(M.update_time, '%Y-%m-%d %H:%i:%s') AS review_time,       DATE_FORMAT(A.create_time, '%Y-%m-%d %H:%i:%s') AS create_time,       DATE_FORMAT(A.update_time, '%Y-%m-%d %H:%i:%s') AS update_time     FROM shangshufang_customer.university_student_exercises A     INNER JOIN shangshufang_customer.university B     ON A.student_university_code = B.university_code     INNER JOIN shangshufang_customer.school C     ON A.student_university_code = C.university_code     AND A.student_school_id = C.school_id     INNER JOIN shangshufang_customer.university D     ON A.course_university_code = D.university_code     INNER JOIN shangshufang_customer.school E     ON A.course_university_code = E.university_code     AND A.course_school_id = E.school_id     INNER JOIN shangshufang_customer.university_student F     ON A.student_id = F.student_id     INNER JOIN shangshufang_customer.course G     ON A.course_university_code = G.university_code     AND A.course_school_id = G.school_id     AND A.course_id = G.course_id     INNER JOIN shangshufang_base.technology_knowledge_exercises H     ON A.technology_id = H.technology_id     AND A.knowledge_id = H.knowledge_id     AND A.exercises_document_id = H.exercises_id     INNER JOIN shangshufang_base.technology I     ON A.technology_id = I.technology_id     INNER JOIN shangshufang_base.learning_phase J     ON A.learning_phase_id = J.learning_phase_id     INNER JOIN shangshufang_base.technology_knowledge K     ON A.technology_id = K.technology_id     AND A.learning_phase_id = K.learning_phase_id     AND A.knowledge_id = K.knowledge_id     AND K.data_status = 'A'     LEFT JOIN     (     SELECT     C.student_exercises_id,     C.reviewer_id,     C.reviewer_type,     D.full_name AS reviewer_name_teacher,     E.full_name AS reviewer_name_student,     C.update_time     FROM     (     SELECT     A.review_id,     A.student_exercises_id,     A.update_time,     B.reviewer_id,     B.reviewer_university_code,     B.reviewer_school_id,     B.reviewer_type     FROM     (     SELECT     student_exercises_id,     MAX(review_id) AS review_id,     MAX(update_time) AS update_time     FROM shangshufang_customer.university_student_exercises_review     GROUP BY student_exercises_id     ) A     INNER JOIN shangshufang_customer.university_student_exercises_review B     ON A.review_id = B.review_id     AND A.student_exercises_id = B.student_exercises_id     ) C     LEFT JOIN shangshufang_customer.university_customer D     ON C.reviewer_university_code = D.university_code     AND C.reviewer_school_id = D.school_id     AND C.reviewer_id = D.customer_id     AND C.reviewer_type = 'T'     LEFT JOIN shangshufang_customer.university_student E     ON C.reviewer_university_code = E.university_code     AND C.reviewer_school_id = E.school_id     AND C.reviewer_id = E.student_id     AND C.reviewer_type = 'S'     ) M     ON A.student_exercises_id = M.student_exercises_id     INNER JOIN shangshufang_customer.university_student_ability_analysis N     ON A.student_id = N.student_id     WHERE a.technology_id = ?     AND a.student_university_code = ?     AND a.student_school_id = ?     AND a.student_id = ?            ORDER BY A.course_class, A.knowledge_id, A.exercises_document_id, A.update_time DESC     LIMIT ?, ?;
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-240, 10' at line 128
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-240, 10' at line 128
[2020-06-06 22:42:19,096][http-nio-8081-exec-4][ERROR][com.shangshufang.apiservice.service.impl.UniversityStudentExercisesServiceImpl:101] org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-230, 10' at line 128
### The error may exist in file [/Users/zhangqiang/Documents/04-Project/ShangShuFang/SourceCode/shangshufang.apiservice/target/classes/mapping/UniversityStudentExercisesMapping.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT       A.student_exercises_id,       A.student_university_code,       B.university_name AS student_university_name,       A.student_school_id,       C.school_name AS student_school_name,       A.student_id,       F.full_name AS student_name,       F.photo AS student_photo,       F.cellphone,       F.enrollment_year,       N.ability_level,       N.position_site,       A.course_university_code,       D.university_name AS course_university_name,       A.course_school_id,       E.school_name AS course_school_name,       A.course_id,       G.course_name,       A.course_class,       A.technology_id,       I.technology_name,       A.learning_phase_id,       J.learning_phase_name,       A.knowledge_id,       K.knowledge_name,       A.exercises_document_id,       H.document_url AS exercises_document_url,       H.answer_url AS exercises_answer_url,       A.source_code_git_url,       A.data_status,       CASE WHEN A.data_status = 'P' THEN '未练习'       WHEN A.data_status = 'W' THEN '待批改'       WHEN A.data_status = 'R' THEN '待修改'       WHEN A.data_status = 'S' THEN '已通过'       ELSE '未知数据状态'       END AS data_status_text,       M.reviewer_id,       M.reviewer_name_teacher,       M.reviewer_name_student,       M.reviewer_type,       DATE_FORMAT(M.update_time, '%Y-%m-%d %H:%i:%s') AS review_time,       DATE_FORMAT(A.create_time, '%Y-%m-%d %H:%i:%s') AS create_time,       DATE_FORMAT(A.update_time, '%Y-%m-%d %H:%i:%s') AS update_time     FROM shangshufang_customer.university_student_exercises A     INNER JOIN shangshufang_customer.university B     ON A.student_university_code = B.university_code     INNER JOIN shangshufang_customer.school C     ON A.student_university_code = C.university_code     AND A.student_school_id = C.school_id     INNER JOIN shangshufang_customer.university D     ON A.course_university_code = D.university_code     INNER JOIN shangshufang_customer.school E     ON A.course_university_code = E.university_code     AND A.course_school_id = E.school_id     INNER JOIN shangshufang_customer.university_student F     ON A.student_id = F.student_id     INNER JOIN shangshufang_customer.course G     ON A.course_university_code = G.university_code     AND A.course_school_id = G.school_id     AND A.course_id = G.course_id     INNER JOIN shangshufang_base.technology_knowledge_exercises H     ON A.technology_id = H.technology_id     AND A.knowledge_id = H.knowledge_id     AND A.exercises_document_id = H.exercises_id     INNER JOIN shangshufang_base.technology I     ON A.technology_id = I.technology_id     INNER JOIN shangshufang_base.learning_phase J     ON A.learning_phase_id = J.learning_phase_id     INNER JOIN shangshufang_base.technology_knowledge K     ON A.technology_id = K.technology_id     AND A.learning_phase_id = K.learning_phase_id     AND A.knowledge_id = K.knowledge_id     AND K.data_status = 'A'     LEFT JOIN     (     SELECT     C.student_exercises_id,     C.reviewer_id,     C.reviewer_type,     D.full_name AS reviewer_name_teacher,     E.full_name AS reviewer_name_student,     C.update_time     FROM     (     SELECT     A.review_id,     A.student_exercises_id,     A.update_time,     B.reviewer_id,     B.reviewer_university_code,     B.reviewer_school_id,     B.reviewer_type     FROM     (     SELECT     student_exercises_id,     MAX(review_id) AS review_id,     MAX(update_time) AS update_time     FROM shangshufang_customer.university_student_exercises_review     GROUP BY student_exercises_id     ) A     INNER JOIN shangshufang_customer.university_student_exercises_review B     ON A.review_id = B.review_id     AND A.student_exercises_id = B.student_exercises_id     ) C     LEFT JOIN shangshufang_customer.university_customer D     ON C.reviewer_university_code = D.university_code     AND C.reviewer_school_id = D.school_id     AND C.reviewer_id = D.customer_id     AND C.reviewer_type = 'T'     LEFT JOIN shangshufang_customer.university_student E     ON C.reviewer_university_code = E.university_code     AND C.reviewer_school_id = E.school_id     AND C.reviewer_id = E.student_id     AND C.reviewer_type = 'S'     ) M     ON A.student_exercises_id = M.student_exercises_id     INNER JOIN shangshufang_customer.university_student_ability_analysis N     ON A.student_id = N.student_id     WHERE a.technology_id = ?     AND a.student_university_code = ?     AND a.student_school_id = ?     AND a.student_id = ?            ORDER BY A.course_class, A.knowledge_id, A.exercises_document_id, A.update_time DESC     LIMIT ?, ?;
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-230, 10' at line 128
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-230, 10' at line 128
[2020-06-06 22:42:19,116][http-nio-8081-exec-1][ERROR][com.shangshufang.apiservice.service.impl.UniversityStudentExercisesServiceImpl:101] org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-280, 10' at line 128
### The error may exist in file [/Users/zhangqiang/Documents/04-Project/ShangShuFang/SourceCode/shangshufang.apiservice/target/classes/mapping/UniversityStudentExercisesMapping.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT       A.student_exercises_id,       A.student_university_code,       B.university_name AS student_university_name,       A.student_school_id,       C.school_name AS student_school_name,       A.student_id,       F.full_name AS student_name,       F.photo AS student_photo,       F.cellphone,       F.enrollment_year,       N.ability_level,       N.position_site,       A.course_university_code,       D.university_name AS course_university_name,       A.course_school_id,       E.school_name AS course_school_name,       A.course_id,       G.course_name,       A.course_class,       A.technology_id,       I.technology_name,       A.learning_phase_id,       J.learning_phase_name,       A.knowledge_id,       K.knowledge_name,       A.exercises_document_id,       H.document_url AS exercises_document_url,       H.answer_url AS exercises_answer_url,       A.source_code_git_url,       A.data_status,       CASE WHEN A.data_status = 'P' THEN '未练习'       WHEN A.data_status = 'W' THEN '待批改'       WHEN A.data_status = 'R' THEN '待修改'       WHEN A.data_status = 'S' THEN '已通过'       ELSE '未知数据状态'       END AS data_status_text,       M.reviewer_id,       M.reviewer_name_teacher,       M.reviewer_name_student,       M.reviewer_type,       DATE_FORMAT(M.update_time, '%Y-%m-%d %H:%i:%s') AS review_time,       DATE_FORMAT(A.create_time, '%Y-%m-%d %H:%i:%s') AS create_time,       DATE_FORMAT(A.update_time, '%Y-%m-%d %H:%i:%s') AS update_time     FROM shangshufang_customer.university_student_exercises A     INNER JOIN shangshufang_customer.university B     ON A.student_university_code = B.university_code     INNER JOIN shangshufang_customer.school C     ON A.student_university_code = C.university_code     AND A.student_school_id = C.school_id     INNER JOIN shangshufang_customer.university D     ON A.course_university_code = D.university_code     INNER JOIN shangshufang_customer.school E     ON A.course_university_code = E.university_code     AND A.course_school_id = E.school_id     INNER JOIN shangshufang_customer.university_student F     ON A.student_id = F.student_id     INNER JOIN shangshufang_customer.course G     ON A.course_university_code = G.university_code     AND A.course_school_id = G.school_id     AND A.course_id = G.course_id     INNER JOIN shangshufang_base.technology_knowledge_exercises H     ON A.technology_id = H.technology_id     AND A.knowledge_id = H.knowledge_id     AND A.exercises_document_id = H.exercises_id     INNER JOIN shangshufang_base.technology I     ON A.technology_id = I.technology_id     INNER JOIN shangshufang_base.learning_phase J     ON A.learning_phase_id = J.learning_phase_id     INNER JOIN shangshufang_base.technology_knowledge K     ON A.technology_id = K.technology_id     AND A.learning_phase_id = K.learning_phase_id     AND A.knowledge_id = K.knowledge_id     AND K.data_status = 'A'     LEFT JOIN     (     SELECT     C.student_exercises_id,     C.reviewer_id,     C.reviewer_type,     D.full_name AS reviewer_name_teacher,     E.full_name AS reviewer_name_student,     C.update_time     FROM     (     SELECT     A.review_id,     A.student_exercises_id,     A.update_time,     B.reviewer_id,     B.reviewer_university_code,     B.reviewer_school_id,     B.reviewer_type     FROM     (     SELECT     student_exercises_id,     MAX(review_id) AS review_id,     MAX(update_time) AS update_time     FROM shangshufang_customer.university_student_exercises_review     GROUP BY student_exercises_id     ) A     INNER JOIN shangshufang_customer.university_student_exercises_review B     ON A.review_id = B.review_id     AND A.student_exercises_id = B.student_exercises_id     ) C     LEFT JOIN shangshufang_customer.university_customer D     ON C.reviewer_university_code = D.university_code     AND C.reviewer_school_id = D.school_id     AND C.reviewer_id = D.customer_id     AND C.reviewer_type = 'T'     LEFT JOIN shangshufang_customer.university_student E     ON C.reviewer_university_code = E.university_code     AND C.reviewer_school_id = E.school_id     AND C.reviewer_id = E.student_id     AND C.reviewer_type = 'S'     ) M     ON A.student_exercises_id = M.student_exercises_id     INNER JOIN shangshufang_customer.university_student_ability_analysis N     ON A.student_id = N.student_id     WHERE a.technology_id = ?     AND a.student_university_code = ?     AND a.student_school_id = ?     AND a.student_id = ?            ORDER BY A.course_class, A.knowledge_id, A.exercises_document_id, A.update_time DESC     LIMIT ?, ?;
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-280, 10' at line 128
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-280, 10' at line 128
[2020-06-06 22:42:19,116][http-nio-8081-exec-3][ERROR][com.shangshufang.apiservice.service.impl.UniversityStudentExercisesServiceImpl:101] org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-300, 10' at line 128
### The error may exist in file [/Users/zhangqiang/Documents/04-Project/ShangShuFang/SourceCode/shangshufang.apiservice/target/classes/mapping/UniversityStudentExercisesMapping.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT       A.student_exercises_id,       A.student_university_code,       B.university_name AS student_university_name,       A.student_school_id,       C.school_name AS student_school_name,       A.student_id,       F.full_name AS student_name,       F.photo AS student_photo,       F.cellphone,       F.enrollment_year,       N.ability_level,       N.position_site,       A.course_university_code,       D.university_name AS course_university_name,       A.course_school_id,       E.school_name AS course_school_name,       A.course_id,       G.course_name,       A.course_class,       A.technology_id,       I.technology_name,       A.learning_phase_id,       J.learning_phase_name,       A.knowledge_id,       K.knowledge_name,       A.exercises_document_id,       H.document_url AS exercises_document_url,       H.answer_url AS exercises_answer_url,       A.source_code_git_url,       A.data_status,       CASE WHEN A.data_status = 'P' THEN '未练习'       WHEN A.data_status = 'W' THEN '待批改'       WHEN A.data_status = 'R' THEN '待修改'       WHEN A.data_status = 'S' THEN '已通过'       ELSE '未知数据状态'       END AS data_status_text,       M.reviewer_id,       M.reviewer_name_teacher,       M.reviewer_name_student,       M.reviewer_type,       DATE_FORMAT(M.update_time, '%Y-%m-%d %H:%i:%s') AS review_time,       DATE_FORMAT(A.create_time, '%Y-%m-%d %H:%i:%s') AS create_time,       DATE_FORMAT(A.update_time, '%Y-%m-%d %H:%i:%s') AS update_time     FROM shangshufang_customer.university_student_exercises A     INNER JOIN shangshufang_customer.university B     ON A.student_university_code = B.university_code     INNER JOIN shangshufang_customer.school C     ON A.student_university_code = C.university_code     AND A.student_school_id = C.school_id     INNER JOIN shangshufang_customer.university D     ON A.course_university_code = D.university_code     INNER JOIN shangshufang_customer.school E     ON A.course_university_code = E.university_code     AND A.course_school_id = E.school_id     INNER JOIN shangshufang_customer.university_student F     ON A.student_id = F.student_id     INNER JOIN shangshufang_customer.course G     ON A.course_university_code = G.university_code     AND A.course_school_id = G.school_id     AND A.course_id = G.course_id     INNER JOIN shangshufang_base.technology_knowledge_exercises H     ON A.technology_id = H.technology_id     AND A.knowledge_id = H.knowledge_id     AND A.exercises_document_id = H.exercises_id     INNER JOIN shangshufang_base.technology I     ON A.technology_id = I.technology_id     INNER JOIN shangshufang_base.learning_phase J     ON A.learning_phase_id = J.learning_phase_id     INNER JOIN shangshufang_base.technology_knowledge K     ON A.technology_id = K.technology_id     AND A.learning_phase_id = K.learning_phase_id     AND A.knowledge_id = K.knowledge_id     AND K.data_status = 'A'     LEFT JOIN     (     SELECT     C.student_exercises_id,     C.reviewer_id,     C.reviewer_type,     D.full_name AS reviewer_name_teacher,     E.full_name AS reviewer_name_student,     C.update_time     FROM     (     SELECT     A.review_id,     A.student_exercises_id,     A.update_time,     B.reviewer_id,     B.reviewer_university_code,     B.reviewer_school_id,     B.reviewer_type     FROM     (     SELECT     student_exercises_id,     MAX(review_id) AS review_id,     MAX(update_time) AS update_time     FROM shangshufang_customer.university_student_exercises_review     GROUP BY student_exercises_id     ) A     INNER JOIN shangshufang_customer.university_student_exercises_review B     ON A.review_id = B.review_id     AND A.student_exercises_id = B.student_exercises_id     ) C     LEFT JOIN shangshufang_customer.university_customer D     ON C.reviewer_university_code = D.university_code     AND C.reviewer_school_id = D.school_id     AND C.reviewer_id = D.customer_id     AND C.reviewer_type = 'T'     LEFT JOIN shangshufang_customer.university_student E     ON C.reviewer_university_code = E.university_code     AND C.reviewer_school_id = E.school_id     AND C.reviewer_id = E.student_id     AND C.reviewer_type = 'S'     ) M     ON A.student_exercises_id = M.student_exercises_id     INNER JOIN shangshufang_customer.university_student_ability_analysis N     ON A.student_id = N.student_id     WHERE a.technology_id = ?     AND a.student_university_code = ?     AND a.student_school_id = ?     AND a.student_id = ?            ORDER BY A.course_class, A.knowledge_id, A.exercises_document_id, A.update_time DESC     LIMIT ?, ?;
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-300, 10' at line 128
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-300, 10' at line 128
[2020-06-06 22:42:19,116][http-nio-8081-exec-10][ERROR][com.shangshufang.apiservice.service.impl.UniversityStudentExercisesServiceImpl:101] org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-290, 10' at line 128
### The error may exist in file [/Users/zhangqiang/Documents/04-Project/ShangShuFang/SourceCode/shangshufang.apiservice/target/classes/mapping/UniversityStudentExercisesMapping.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT       A.student_exercises_id,       A.student_university_code,       B.university_name AS student_university_name,       A.student_school_id,       C.school_name AS student_school_name,       A.student_id,       F.full_name AS student_name,       F.photo AS student_photo,       F.cellphone,       F.enrollment_year,       N.ability_level,       N.position_site,       A.course_university_code,       D.university_name AS course_university_name,       A.course_school_id,       E.school_name AS course_school_name,       A.course_id,       G.course_name,       A.course_class,       A.technology_id,       I.technology_name,       A.learning_phase_id,       J.learning_phase_name,       A.knowledge_id,       K.knowledge_name,       A.exercises_document_id,       H.document_url AS exercises_document_url,       H.answer_url AS exercises_answer_url,       A.source_code_git_url,       A.data_status,       CASE WHEN A.data_status = 'P' THEN '未练习'       WHEN A.data_status = 'W' THEN '待批改'       WHEN A.data_status = 'R' THEN '待修改'       WHEN A.data_status = 'S' THEN '已通过'       ELSE '未知数据状态'       END AS data_status_text,       M.reviewer_id,       M.reviewer_name_teacher,       M.reviewer_name_student,       M.reviewer_type,       DATE_FORMAT(M.update_time, '%Y-%m-%d %H:%i:%s') AS review_time,       DATE_FORMAT(A.create_time, '%Y-%m-%d %H:%i:%s') AS create_time,       DATE_FORMAT(A.update_time, '%Y-%m-%d %H:%i:%s') AS update_time     FROM shangshufang_customer.university_student_exercises A     INNER JOIN shangshufang_customer.university B     ON A.student_university_code = B.university_code     INNER JOIN shangshufang_customer.school C     ON A.student_university_code = C.university_code     AND A.student_school_id = C.school_id     INNER JOIN shangshufang_customer.university D     ON A.course_university_code = D.university_code     INNER JOIN shangshufang_customer.school E     ON A.course_university_code = E.university_code     AND A.course_school_id = E.school_id     INNER JOIN shangshufang_customer.university_student F     ON A.student_id = F.student_id     INNER JOIN shangshufang_customer.course G     ON A.course_university_code = G.university_code     AND A.course_school_id = G.school_id     AND A.course_id = G.course_id     INNER JOIN shangshufang_base.technology_knowledge_exercises H     ON A.technology_id = H.technology_id     AND A.knowledge_id = H.knowledge_id     AND A.exercises_document_id = H.exercises_id     INNER JOIN shangshufang_base.technology I     ON A.technology_id = I.technology_id     INNER JOIN shangshufang_base.learning_phase J     ON A.learning_phase_id = J.learning_phase_id     INNER JOIN shangshufang_base.technology_knowledge K     ON A.technology_id = K.technology_id     AND A.learning_phase_id = K.learning_phase_id     AND A.knowledge_id = K.knowledge_id     AND K.data_status = 'A'     LEFT JOIN     (     SELECT     C.student_exercises_id,     C.reviewer_id,     C.reviewer_type,     D.full_name AS reviewer_name_teacher,     E.full_name AS reviewer_name_student,     C.update_time     FROM     (     SELECT     A.review_id,     A.student_exercises_id,     A.update_time,     B.reviewer_id,     B.reviewer_university_code,     B.reviewer_school_id,     B.reviewer_type     FROM     (     SELECT     student_exercises_id,     MAX(review_id) AS review_id,     MAX(update_time) AS update_time     FROM shangshufang_customer.university_student_exercises_review     GROUP BY student_exercises_id     ) A     INNER JOIN shangshufang_customer.university_student_exercises_review B     ON A.review_id = B.review_id     AND A.student_exercises_id = B.student_exercises_id     ) C     LEFT JOIN shangshufang_customer.university_customer D     ON C.reviewer_university_code = D.university_code     AND C.reviewer_school_id = D.school_id     AND C.reviewer_id = D.customer_id     AND C.reviewer_type = 'T'     LEFT JOIN shangshufang_customer.university_student E     ON C.reviewer_university_code = E.university_code     AND C.reviewer_school_id = E.school_id     AND C.reviewer_id = E.student_id     AND C.reviewer_type = 'S'     ) M     ON A.student_exercises_id = M.student_exercises_id     INNER JOIN shangshufang_customer.university_student_ability_analysis N     ON A.student_id = N.student_id     WHERE a.technology_id = ?     AND a.student_university_code = ?     AND a.student_school_id = ?     AND a.student_id = ?            ORDER BY A.course_class, A.knowledge_id, A.exercises_document_id, A.update_time DESC     LIMIT ?, ?;
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-290, 10' at line 128
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-290, 10' at line 128
[2020-06-06 22:42:19,116][http-nio-8081-exec-9][ERROR][com.shangshufang.apiservice.service.impl.UniversityStudentExercisesServiceImpl:101] org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-310, 10' at line 128
### The error may exist in file [/Users/zhangqiang/Documents/04-Project/ShangShuFang/SourceCode/shangshufang.apiservice/target/classes/mapping/UniversityStudentExercisesMapping.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT       A.student_exercises_id,       A.student_university_code,       B.university_name AS student_university_name,       A.student_school_id,       C.school_name AS student_school_name,       A.student_id,       F.full_name AS student_name,       F.photo AS student_photo,       F.cellphone,       F.enrollment_year,       N.ability_level,       N.position_site,       A.course_university_code,       D.university_name AS course_university_name,       A.course_school_id,       E.school_name AS course_school_name,       A.course_id,       G.course_name,       A.course_class,       A.technology_id,       I.technology_name,       A.learning_phase_id,       J.learning_phase_name,       A.knowledge_id,       K.knowledge_name,       A.exercises_document_id,       H.document_url AS exercises_document_url,       H.answer_url AS exercises_answer_url,       A.source_code_git_url,       A.data_status,       CASE WHEN A.data_status = 'P' THEN '未练习'       WHEN A.data_status = 'W' THEN '待批改'       WHEN A.data_status = 'R' THEN '待修改'       WHEN A.data_status = 'S' THEN '已通过'       ELSE '未知数据状态'       END AS data_status_text,       M.reviewer_id,       M.reviewer_name_teacher,       M.reviewer_name_student,       M.reviewer_type,       DATE_FORMAT(M.update_time, '%Y-%m-%d %H:%i:%s') AS review_time,       DATE_FORMAT(A.create_time, '%Y-%m-%d %H:%i:%s') AS create_time,       DATE_FORMAT(A.update_time, '%Y-%m-%d %H:%i:%s') AS update_time     FROM shangshufang_customer.university_student_exercises A     INNER JOIN shangshufang_customer.university B     ON A.student_university_code = B.university_code     INNER JOIN shangshufang_customer.school C     ON A.student_university_code = C.university_code     AND A.student_school_id = C.school_id     INNER JOIN shangshufang_customer.university D     ON A.course_university_code = D.university_code     INNER JOIN shangshufang_customer.school E     ON A.course_university_code = E.university_code     AND A.course_school_id = E.school_id     INNER JOIN shangshufang_customer.university_student F     ON A.student_id = F.student_id     INNER JOIN shangshufang_customer.course G     ON A.course_university_code = G.university_code     AND A.course_school_id = G.school_id     AND A.course_id = G.course_id     INNER JOIN shangshufang_base.technology_knowledge_exercises H     ON A.technology_id = H.technology_id     AND A.knowledge_id = H.knowledge_id     AND A.exercises_document_id = H.exercises_id     INNER JOIN shangshufang_base.technology I     ON A.technology_id = I.technology_id     INNER JOIN shangshufang_base.learning_phase J     ON A.learning_phase_id = J.learning_phase_id     INNER JOIN shangshufang_base.technology_knowledge K     ON A.technology_id = K.technology_id     AND A.learning_phase_id = K.learning_phase_id     AND A.knowledge_id = K.knowledge_id     AND K.data_status = 'A'     LEFT JOIN     (     SELECT     C.student_exercises_id,     C.reviewer_id,     C.reviewer_type,     D.full_name AS reviewer_name_teacher,     E.full_name AS reviewer_name_student,     C.update_time     FROM     (     SELECT     A.review_id,     A.student_exercises_id,     A.update_time,     B.reviewer_id,     B.reviewer_university_code,     B.reviewer_school_id,     B.reviewer_type     FROM     (     SELECT     student_exercises_id,     MAX(review_id) AS review_id,     MAX(update_time) AS update_time     FROM shangshufang_customer.university_student_exercises_review     GROUP BY student_exercises_id     ) A     INNER JOIN shangshufang_customer.university_student_exercises_review B     ON A.review_id = B.review_id     AND A.student_exercises_id = B.student_exercises_id     ) C     LEFT JOIN shangshufang_customer.university_customer D     ON C.reviewer_university_code = D.university_code     AND C.reviewer_school_id = D.school_id     AND C.reviewer_id = D.customer_id     AND C.reviewer_type = 'T'     LEFT JOIN shangshufang_customer.university_student E     ON C.reviewer_university_code = E.university_code     AND C.reviewer_school_id = E.school_id     AND C.reviewer_id = E.student_id     AND C.reviewer_type = 'S'     ) M     ON A.student_exercises_id = M.student_exercises_id     INNER JOIN shangshufang_customer.university_student_ability_analysis N     ON A.student_id = N.student_id     WHERE a.technology_id = ?     AND a.student_university_code = ?     AND a.student_school_id = ?     AND a.student_id = ?            ORDER BY A.course_class, A.knowledge_id, A.exercises_document_id, A.update_time DESC     LIMIT ?, ?;
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-310, 10' at line 128
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-310, 10' at line 128
[2020-06-06 22:42:19,116][http-nio-8081-exec-6][ERROR][com.shangshufang.apiservice.service.impl.UniversityStudentExercisesServiceImpl:101] org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-320, 10' at line 128
### The error may exist in file [/Users/zhangqiang/Documents/04-Project/ShangShuFang/SourceCode/shangshufang.apiservice/target/classes/mapping/UniversityStudentExercisesMapping.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT       A.student_exercises_id,       A.student_university_code,       B.university_name AS student_university_name,       A.student_school_id,       C.school_name AS student_school_name,       A.student_id,       F.full_name AS student_name,       F.photo AS student_photo,       F.cellphone,       F.enrollment_year,       N.ability_level,       N.position_site,       A.course_university_code,       D.university_name AS course_university_name,       A.course_school_id,       E.school_name AS course_school_name,       A.course_id,       G.course_name,       A.course_class,       A.technology_id,       I.technology_name,       A.learning_phase_id,       J.learning_phase_name,       A.knowledge_id,       K.knowledge_name,       A.exercises_document_id,       H.document_url AS exercises_document_url,       H.answer_url AS exercises_answer_url,       A.source_code_git_url,       A.data_status,       CASE WHEN A.data_status = 'P' THEN '未练习'       WHEN A.data_status = 'W' THEN '待批改'       WHEN A.data_status = 'R' THEN '待修改'       WHEN A.data_status = 'S' THEN '已通过'       ELSE '未知数据状态'       END AS data_status_text,       M.reviewer_id,       M.reviewer_name_teacher,       M.reviewer_name_student,       M.reviewer_type,       DATE_FORMAT(M.update_time, '%Y-%m-%d %H:%i:%s') AS review_time,       DATE_FORMAT(A.create_time, '%Y-%m-%d %H:%i:%s') AS create_time,       DATE_FORMAT(A.update_time, '%Y-%m-%d %H:%i:%s') AS update_time     FROM shangshufang_customer.university_student_exercises A     INNER JOIN shangshufang_customer.university B     ON A.student_university_code = B.university_code     INNER JOIN shangshufang_customer.school C     ON A.student_university_code = C.university_code     AND A.student_school_id = C.school_id     INNER JOIN shangshufang_customer.university D     ON A.course_university_code = D.university_code     INNER JOIN shangshufang_customer.school E     ON A.course_university_code = E.university_code     AND A.course_school_id = E.school_id     INNER JOIN shangshufang_customer.university_student F     ON A.student_id = F.student_id     INNER JOIN shangshufang_customer.course G     ON A.course_university_code = G.university_code     AND A.course_school_id = G.school_id     AND A.course_id = G.course_id     INNER JOIN shangshufang_base.technology_knowledge_exercises H     ON A.technology_id = H.technology_id     AND A.knowledge_id = H.knowledge_id     AND A.exercises_document_id = H.exercises_id     INNER JOIN shangshufang_base.technology I     ON A.technology_id = I.technology_id     INNER JOIN shangshufang_base.learning_phase J     ON A.learning_phase_id = J.learning_phase_id     INNER JOIN shangshufang_base.technology_knowledge K     ON A.technology_id = K.technology_id     AND A.learning_phase_id = K.learning_phase_id     AND A.knowledge_id = K.knowledge_id     AND K.data_status = 'A'     LEFT JOIN     (     SELECT     C.student_exercises_id,     C.reviewer_id,     C.reviewer_type,     D.full_name AS reviewer_name_teacher,     E.full_name AS reviewer_name_student,     C.update_time     FROM     (     SELECT     A.review_id,     A.student_exercises_id,     A.update_time,     B.reviewer_id,     B.reviewer_university_code,     B.reviewer_school_id,     B.reviewer_type     FROM     (     SELECT     student_exercises_id,     MAX(review_id) AS review_id,     MAX(update_time) AS update_time     FROM shangshufang_customer.university_student_exercises_review     GROUP BY student_exercises_id     ) A     INNER JOIN shangshufang_customer.university_student_exercises_review B     ON A.review_id = B.review_id     AND A.student_exercises_id = B.student_exercises_id     ) C     LEFT JOIN shangshufang_customer.university_customer D     ON C.reviewer_university_code = D.university_code     AND C.reviewer_school_id = D.school_id     AND C.reviewer_id = D.customer_id     AND C.reviewer_type = 'T'     LEFT JOIN shangshufang_customer.university_student E     ON C.reviewer_university_code = E.university_code     AND C.reviewer_school_id = E.school_id     AND C.reviewer_id = E.student_id     AND C.reviewer_type = 'S'     ) M     ON A.student_exercises_id = M.student_exercises_id     INNER JOIN shangshufang_customer.university_student_ability_analysis N     ON A.student_id = N.student_id     WHERE a.technology_id = ?     AND a.student_university_code = ?     AND a.student_school_id = ?     AND a.student_id = ?            ORDER BY A.course_class, A.knowledge_id, A.exercises_document_id, A.update_time DESC     LIMIT ?, ?;
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-320, 10' at line 128
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-320, 10' at line 128
[2020-06-06 22:42:19,116][http-nio-8081-exec-7][ERROR][com.shangshufang.apiservice.service.impl.UniversityStudentExercisesServiceImpl:101] org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-330, 10' at line 128
### The error may exist in file [/Users/zhangqiang/Documents/04-Project/ShangShuFang/SourceCode/shangshufang.apiservice/target/classes/mapping/UniversityStudentExercisesMapping.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT       A.student_exercises_id,       A.student_university_code,       B.university_name AS student_university_name,       A.student_school_id,       C.school_name AS student_school_name,       A.student_id,       F.full_name AS student_name,       F.photo AS student_photo,       F.cellphone,       F.enrollment_year,       N.ability_level,       N.position_site,       A.course_university_code,       D.university_name AS course_university_name,       A.course_school_id,       E.school_name AS course_school_name,       A.course_id,       G.course_name,       A.course_class,       A.technology_id,       I.technology_name,       A.learning_phase_id,       J.learning_phase_name,       A.knowledge_id,       K.knowledge_name,       A.exercises_document_id,       H.document_url AS exercises_document_url,       H.answer_url AS exercises_answer_url,       A.source_code_git_url,       A.data_status,       CASE WHEN A.data_status = 'P' THEN '未练习'       WHEN A.data_status = 'W' THEN '待批改'       WHEN A.data_status = 'R' THEN '待修改'       WHEN A.data_status = 'S' THEN '已通过'       ELSE '未知数据状态'       END AS data_status_text,       M.reviewer_id,       M.reviewer_name_teacher,       M.reviewer_name_student,       M.reviewer_type,       DATE_FORMAT(M.update_time, '%Y-%m-%d %H:%i:%s') AS review_time,       DATE_FORMAT(A.create_time, '%Y-%m-%d %H:%i:%s') AS create_time,       DATE_FORMAT(A.update_time, '%Y-%m-%d %H:%i:%s') AS update_time     FROM shangshufang_customer.university_student_exercises A     INNER JOIN shangshufang_customer.university B     ON A.student_university_code = B.university_code     INNER JOIN shangshufang_customer.school C     ON A.student_university_code = C.university_code     AND A.student_school_id = C.school_id     INNER JOIN shangshufang_customer.university D     ON A.course_university_code = D.university_code     INNER JOIN shangshufang_customer.school E     ON A.course_university_code = E.university_code     AND A.course_school_id = E.school_id     INNER JOIN shangshufang_customer.university_student F     ON A.student_id = F.student_id     INNER JOIN shangshufang_customer.course G     ON A.course_university_code = G.university_code     AND A.course_school_id = G.school_id     AND A.course_id = G.course_id     INNER JOIN shangshufang_base.technology_knowledge_exercises H     ON A.technology_id = H.technology_id     AND A.knowledge_id = H.knowledge_id     AND A.exercises_document_id = H.exercises_id     INNER JOIN shangshufang_base.technology I     ON A.technology_id = I.technology_id     INNER JOIN shangshufang_base.learning_phase J     ON A.learning_phase_id = J.learning_phase_id     INNER JOIN shangshufang_base.technology_knowledge K     ON A.technology_id = K.technology_id     AND A.learning_phase_id = K.learning_phase_id     AND A.knowledge_id = K.knowledge_id     AND K.data_status = 'A'     LEFT JOIN     (     SELECT     C.student_exercises_id,     C.reviewer_id,     C.reviewer_type,     D.full_name AS reviewer_name_teacher,     E.full_name AS reviewer_name_student,     C.update_time     FROM     (     SELECT     A.review_id,     A.student_exercises_id,     A.update_time,     B.reviewer_id,     B.reviewer_university_code,     B.reviewer_school_id,     B.reviewer_type     FROM     (     SELECT     student_exercises_id,     MAX(review_id) AS review_id,     MAX(update_time) AS update_time     FROM shangshufang_customer.university_student_exercises_review     GROUP BY student_exercises_id     ) A     INNER JOIN shangshufang_customer.university_student_exercises_review B     ON A.review_id = B.review_id     AND A.student_exercises_id = B.student_exercises_id     ) C     LEFT JOIN shangshufang_customer.university_customer D     ON C.reviewer_university_code = D.university_code     AND C.reviewer_school_id = D.school_id     AND C.reviewer_id = D.customer_id     AND C.reviewer_type = 'T'     LEFT JOIN shangshufang_customer.university_student E     ON C.reviewer_university_code = E.university_code     AND C.reviewer_school_id = E.school_id     AND C.reviewer_id = E.student_id     AND C.reviewer_type = 'S'     ) M     ON A.student_exercises_id = M.student_exercises_id     INNER JOIN shangshufang_customer.university_student_ability_analysis N     ON A.student_id = N.student_id     WHERE a.technology_id = ?     AND a.student_university_code = ?     AND a.student_school_id = ?     AND a.student_id = ?            ORDER BY A.course_class, A.knowledge_id, A.exercises_document_id, A.update_time DESC     LIMIT ?, ?;
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-330, 10' at line 128
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-330, 10' at line 128
[2020-06-06 22:42:19,137][http-nio-8081-exec-1][ERROR][com.shangshufang.apiservice.service.impl.UniversityStudentExercisesServiceImpl:101] org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-390, 10' at line 128
### The error may exist in file [/Users/zhangqiang/Documents/04-Project/ShangShuFang/SourceCode/shangshufang.apiservice/target/classes/mapping/UniversityStudentExercisesMapping.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT       A.student_exercises_id,       A.student_university_code,       B.university_name AS student_university_name,       A.student_school_id,       C.school_name AS student_school_name,       A.student_id,       F.full_name AS student_name,       F.photo AS student_photo,       F.cellphone,       F.enrollment_year,       N.ability_level,       N.position_site,       A.course_university_code,       D.university_name AS course_university_name,       A.course_school_id,       E.school_name AS course_school_name,       A.course_id,       G.course_name,       A.course_class,       A.technology_id,       I.technology_name,       A.learning_phase_id,       J.learning_phase_name,       A.knowledge_id,       K.knowledge_name,       A.exercises_document_id,       H.document_url AS exercises_document_url,       H.answer_url AS exercises_answer_url,       A.source_code_git_url,       A.data_status,       CASE WHEN A.data_status = 'P' THEN '未练习'       WHEN A.data_status = 'W' THEN '待批改'       WHEN A.data_status = 'R' THEN '待修改'       WHEN A.data_status = 'S' THEN '已通过'       ELSE '未知数据状态'       END AS data_status_text,       M.reviewer_id,       M.reviewer_name_teacher,       M.reviewer_name_student,       M.reviewer_type,       DATE_FORMAT(M.update_time, '%Y-%m-%d %H:%i:%s') AS review_time,       DATE_FORMAT(A.create_time, '%Y-%m-%d %H:%i:%s') AS create_time,       DATE_FORMAT(A.update_time, '%Y-%m-%d %H:%i:%s') AS update_time     FROM shangshufang_customer.university_student_exercises A     INNER JOIN shangshufang_customer.university B     ON A.student_university_code = B.university_code     INNER JOIN shangshufang_customer.school C     ON A.student_university_code = C.university_code     AND A.student_school_id = C.school_id     INNER JOIN shangshufang_customer.university D     ON A.course_university_code = D.university_code     INNER JOIN shangshufang_customer.school E     ON A.course_university_code = E.university_code     AND A.course_school_id = E.school_id     INNER JOIN shangshufang_customer.university_student F     ON A.student_id = F.student_id     INNER JOIN shangshufang_customer.course G     ON A.course_university_code = G.university_code     AND A.course_school_id = G.school_id     AND A.course_id = G.course_id     INNER JOIN shangshufang_base.technology_knowledge_exercises H     ON A.technology_id = H.technology_id     AND A.knowledge_id = H.knowledge_id     AND A.exercises_document_id = H.exercises_id     INNER JOIN shangshufang_base.technology I     ON A.technology_id = I.technology_id     INNER JOIN shangshufang_base.learning_phase J     ON A.learning_phase_id = J.learning_phase_id     INNER JOIN shangshufang_base.technology_knowledge K     ON A.technology_id = K.technology_id     AND A.learning_phase_id = K.learning_phase_id     AND A.knowledge_id = K.knowledge_id     AND K.data_status = 'A'     LEFT JOIN     (     SELECT     C.student_exercises_id,     C.reviewer_id,     C.reviewer_type,     D.full_name AS reviewer_name_teacher,     E.full_name AS reviewer_name_student,     C.update_time     FROM     (     SELECT     A.review_id,     A.student_exercises_id,     A.update_time,     B.reviewer_id,     B.reviewer_university_code,     B.reviewer_school_id,     B.reviewer_type     FROM     (     SELECT     student_exercises_id,     MAX(review_id) AS review_id,     MAX(update_time) AS update_time     FROM shangshufang_customer.university_student_exercises_review     GROUP BY student_exercises_id     ) A     INNER JOIN shangshufang_customer.university_student_exercises_review B     ON A.review_id = B.review_id     AND A.student_exercises_id = B.student_exercises_id     ) C     LEFT JOIN shangshufang_customer.university_customer D     ON C.reviewer_university_code = D.university_code     AND C.reviewer_school_id = D.school_id     AND C.reviewer_id = D.customer_id     AND C.reviewer_type = 'T'     LEFT JOIN shangshufang_customer.university_student E     ON C.reviewer_university_code = E.university_code     AND C.reviewer_school_id = E.school_id     AND C.reviewer_id = E.student_id     AND C.reviewer_type = 'S'     ) M     ON A.student_exercises_id = M.student_exercises_id     INNER JOIN shangshufang_customer.university_student_ability_analysis N     ON A.student_id = N.student_id     WHERE a.technology_id = ?     AND a.student_university_code = ?     AND a.student_school_id = ?     AND a.student_id = ?            ORDER BY A.course_class, A.knowledge_id, A.exercises_document_id, A.update_time DESC     LIMIT ?, ?;
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-390, 10' at line 128
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-390, 10' at line 128
[2020-06-06 22:42:19,137][http-nio-8081-exec-8][ERROR][com.shangshufang.apiservice.service.impl.UniversityStudentExercisesServiceImpl:101] org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-350, 10' at line 128
### The error may exist in file [/Users/zhangqiang/Documents/04-Project/ShangShuFang/SourceCode/shangshufang.apiservice/target/classes/mapping/UniversityStudentExercisesMapping.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT       A.student_exercises_id,       A.student_university_code,       B.university_name AS student_university_name,       A.student_school_id,       C.school_name AS student_school_name,       A.student_id,       F.full_name AS student_name,       F.photo AS student_photo,       F.cellphone,       F.enrollment_year,       N.ability_level,       N.position_site,       A.course_university_code,       D.university_name AS course_university_name,       A.course_school_id,       E.school_name AS course_school_name,       A.course_id,       G.course_name,       A.course_class,       A.technology_id,       I.technology_name,       A.learning_phase_id,       J.learning_phase_name,       A.knowledge_id,       K.knowledge_name,       A.exercises_document_id,       H.document_url AS exercises_document_url,       H.answer_url AS exercises_answer_url,       A.source_code_git_url,       A.data_status,       CASE WHEN A.data_status = 'P' THEN '未练习'       WHEN A.data_status = 'W' THEN '待批改'       WHEN A.data_status = 'R' THEN '待修改'       WHEN A.data_status = 'S' THEN '已通过'       ELSE '未知数据状态'       END AS data_status_text,       M.reviewer_id,       M.reviewer_name_teacher,       M.reviewer_name_student,       M.reviewer_type,       DATE_FORMAT(M.update_time, '%Y-%m-%d %H:%i:%s') AS review_time,       DATE_FORMAT(A.create_time, '%Y-%m-%d %H:%i:%s') AS create_time,       DATE_FORMAT(A.update_time, '%Y-%m-%d %H:%i:%s') AS update_time     FROM shangshufang_customer.university_student_exercises A     INNER JOIN shangshufang_customer.university B     ON A.student_university_code = B.university_code     INNER JOIN shangshufang_customer.school C     ON A.student_university_code = C.university_code     AND A.student_school_id = C.school_id     INNER JOIN shangshufang_customer.university D     ON A.course_university_code = D.university_code     INNER JOIN shangshufang_customer.school E     ON A.course_university_code = E.university_code     AND A.course_school_id = E.school_id     INNER JOIN shangshufang_customer.university_student F     ON A.student_id = F.student_id     INNER JOIN shangshufang_customer.course G     ON A.course_university_code = G.university_code     AND A.course_school_id = G.school_id     AND A.course_id = G.course_id     INNER JOIN shangshufang_base.technology_knowledge_exercises H     ON A.technology_id = H.technology_id     AND A.knowledge_id = H.knowledge_id     AND A.exercises_document_id = H.exercises_id     INNER JOIN shangshufang_base.technology I     ON A.technology_id = I.technology_id     INNER JOIN shangshufang_base.learning_phase J     ON A.learning_phase_id = J.learning_phase_id     INNER JOIN shangshufang_base.technology_knowledge K     ON A.technology_id = K.technology_id     AND A.learning_phase_id = K.learning_phase_id     AND A.knowledge_id = K.knowledge_id     AND K.data_status = 'A'     LEFT JOIN     (     SELECT     C.student_exercises_id,     C.reviewer_id,     C.reviewer_type,     D.full_name AS reviewer_name_teacher,     E.full_name AS reviewer_name_student,     C.update_time     FROM     (     SELECT     A.review_id,     A.student_exercises_id,     A.update_time,     B.reviewer_id,     B.reviewer_university_code,     B.reviewer_school_id,     B.reviewer_type     FROM     (     SELECT     student_exercises_id,     MAX(review_id) AS review_id,     MAX(update_time) AS update_time     FROM shangshufang_customer.university_student_exercises_review     GROUP BY student_exercises_id     ) A     INNER JOIN shangshufang_customer.university_student_exercises_review B     ON A.review_id = B.review_id     AND A.student_exercises_id = B.student_exercises_id     ) C     LEFT JOIN shangshufang_customer.university_customer D     ON C.reviewer_university_code = D.university_code     AND C.reviewer_school_id = D.school_id     AND C.reviewer_id = D.customer_id     AND C.reviewer_type = 'T'     LEFT JOIN shangshufang_customer.university_student E     ON C.reviewer_university_code = E.university_code     AND C.reviewer_school_id = E.school_id     AND C.reviewer_id = E.student_id     AND C.reviewer_type = 'S'     ) M     ON A.student_exercises_id = M.student_exercises_id     INNER JOIN shangshufang_customer.university_student_ability_analysis N     ON A.student_id = N.student_id     WHERE a.technology_id = ?     AND a.student_university_code = ?     AND a.student_school_id = ?     AND a.student_id = ?            ORDER BY A.course_class, A.knowledge_id, A.exercises_document_id, A.update_time DESC     LIMIT ?, ?;
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-350, 10' at line 128
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-350, 10' at line 128
[2020-06-06 22:42:19,137][http-nio-8081-exec-3][ERROR][com.shangshufang.apiservice.service.impl.UniversityStudentExercisesServiceImpl:101] org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-380, 10' at line 128
### The error may exist in file [/Users/zhangqiang/Documents/04-Project/ShangShuFang/SourceCode/shangshufang.apiservice/target/classes/mapping/UniversityStudentExercisesMapping.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT       A.student_exercises_id,       A.student_university_code,       B.university_name AS student_university_name,       A.student_school_id,       C.school_name AS student_school_name,       A.student_id,       F.full_name AS student_name,       F.photo AS student_photo,       F.cellphone,       F.enrollment_year,       N.ability_level,       N.position_site,       A.course_university_code,       D.university_name AS course_university_name,       A.course_school_id,       E.school_name AS course_school_name,       A.course_id,       G.course_name,       A.course_class,       A.technology_id,       I.technology_name,       A.learning_phase_id,       J.learning_phase_name,       A.knowledge_id,       K.knowledge_name,       A.exercises_document_id,       H.document_url AS exercises_document_url,       H.answer_url AS exercises_answer_url,       A.source_code_git_url,       A.data_status,       CASE WHEN A.data_status = 'P' THEN '未练习'       WHEN A.data_status = 'W' THEN '待批改'       WHEN A.data_status = 'R' THEN '待修改'       WHEN A.data_status = 'S' THEN '已通过'       ELSE '未知数据状态'       END AS data_status_text,       M.reviewer_id,       M.reviewer_name_teacher,       M.reviewer_name_student,       M.reviewer_type,       DATE_FORMAT(M.update_time, '%Y-%m-%d %H:%i:%s') AS review_time,       DATE_FORMAT(A.create_time, '%Y-%m-%d %H:%i:%s') AS create_time,       DATE_FORMAT(A.update_time, '%Y-%m-%d %H:%i:%s') AS update_time     FROM shangshufang_customer.university_student_exercises A     INNER JOIN shangshufang_customer.university B     ON A.student_university_code = B.university_code     INNER JOIN shangshufang_customer.school C     ON A.student_university_code = C.university_code     AND A.student_school_id = C.school_id     INNER JOIN shangshufang_customer.university D     ON A.course_university_code = D.university_code     INNER JOIN shangshufang_customer.school E     ON A.course_university_code = E.university_code     AND A.course_school_id = E.school_id     INNER JOIN shangshufang_customer.university_student F     ON A.student_id = F.student_id     INNER JOIN shangshufang_customer.course G     ON A.course_university_code = G.university_code     AND A.course_school_id = G.school_id     AND A.course_id = G.course_id     INNER JOIN shangshufang_base.technology_knowledge_exercises H     ON A.technology_id = H.technology_id     AND A.knowledge_id = H.knowledge_id     AND A.exercises_document_id = H.exercises_id     INNER JOIN shangshufang_base.technology I     ON A.technology_id = I.technology_id     INNER JOIN shangshufang_base.learning_phase J     ON A.learning_phase_id = J.learning_phase_id     INNER JOIN shangshufang_base.technology_knowledge K     ON A.technology_id = K.technology_id     AND A.learning_phase_id = K.learning_phase_id     AND A.knowledge_id = K.knowledge_id     AND K.data_status = 'A'     LEFT JOIN     (     SELECT     C.student_exercises_id,     C.reviewer_id,     C.reviewer_type,     D.full_name AS reviewer_name_teacher,     E.full_name AS reviewer_name_student,     C.update_time     FROM     (     SELECT     A.review_id,     A.student_exercises_id,     A.update_time,     B.reviewer_id,     B.reviewer_university_code,     B.reviewer_school_id,     B.reviewer_type     FROM     (     SELECT     student_exercises_id,     MAX(review_id) AS review_id,     MAX(update_time) AS update_time     FROM shangshufang_customer.university_student_exercises_review     GROUP BY student_exercises_id     ) A     INNER JOIN shangshufang_customer.university_student_exercises_review B     ON A.review_id = B.review_id     AND A.student_exercises_id = B.student_exercises_id     ) C     LEFT JOIN shangshufang_customer.university_customer D     ON C.reviewer_university_code = D.university_code     AND C.reviewer_school_id = D.school_id     AND C.reviewer_id = D.customer_id     AND C.reviewer_type = 'T'     LEFT JOIN shangshufang_customer.university_student E     ON C.reviewer_university_code = E.university_code     AND C.reviewer_school_id = E.school_id     AND C.reviewer_id = E.student_id     AND C.reviewer_type = 'S'     ) M     ON A.student_exercises_id = M.student_exercises_id     INNER JOIN shangshufang_customer.university_student_ability_analysis N     ON A.student_id = N.student_id     WHERE a.technology_id = ?     AND a.student_university_code = ?     AND a.student_school_id = ?     AND a.student_id = ?            ORDER BY A.course_class, A.knowledge_id, A.exercises_document_id, A.update_time DESC     LIMIT ?, ?;
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-380, 10' at line 128
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-380, 10' at line 128
[2020-06-06 22:42:19,137][http-nio-8081-exec-2][ERROR][com.shangshufang.apiservice.service.impl.UniversityStudentExercisesServiceImpl:101] org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-340, 10' at line 128
### The error may exist in file [/Users/zhangqiang/Documents/04-Project/ShangShuFang/SourceCode/shangshufang.apiservice/target/classes/mapping/UniversityStudentExercisesMapping.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT       A.student_exercises_id,       A.student_university_code,       B.university_name AS student_university_name,       A.student_school_id,       C.school_name AS student_school_name,       A.student_id,       F.full_name AS student_name,       F.photo AS student_photo,       F.cellphone,       F.enrollment_year,       N.ability_level,       N.position_site,       A.course_university_code,       D.university_name AS course_university_name,       A.course_school_id,       E.school_name AS course_school_name,       A.course_id,       G.course_name,       A.course_class,       A.technology_id,       I.technology_name,       A.learning_phase_id,       J.learning_phase_name,       A.knowledge_id,       K.knowledge_name,       A.exercises_document_id,       H.document_url AS exercises_document_url,       H.answer_url AS exercises_answer_url,       A.source_code_git_url,       A.data_status,       CASE WHEN A.data_status = 'P' THEN '未练习'       WHEN A.data_status = 'W' THEN '待批改'       WHEN A.data_status = 'R' THEN '待修改'       WHEN A.data_status = 'S' THEN '已通过'       ELSE '未知数据状态'       END AS data_status_text,       M.reviewer_id,       M.reviewer_name_teacher,       M.reviewer_name_student,       M.reviewer_type,       DATE_FORMAT(M.update_time, '%Y-%m-%d %H:%i:%s') AS review_time,       DATE_FORMAT(A.create_time, '%Y-%m-%d %H:%i:%s') AS create_time,       DATE_FORMAT(A.update_time, '%Y-%m-%d %H:%i:%s') AS update_time     FROM shangshufang_customer.university_student_exercises A     INNER JOIN shangshufang_customer.university B     ON A.student_university_code = B.university_code     INNER JOIN shangshufang_customer.school C     ON A.student_university_code = C.university_code     AND A.student_school_id = C.school_id     INNER JOIN shangshufang_customer.university D     ON A.course_university_code = D.university_code     INNER JOIN shangshufang_customer.school E     ON A.course_university_code = E.university_code     AND A.course_school_id = E.school_id     INNER JOIN shangshufang_customer.university_student F     ON A.student_id = F.student_id     INNER JOIN shangshufang_customer.course G     ON A.course_university_code = G.university_code     AND A.course_school_id = G.school_id     AND A.course_id = G.course_id     INNER JOIN shangshufang_base.technology_knowledge_exercises H     ON A.technology_id = H.technology_id     AND A.knowledge_id = H.knowledge_id     AND A.exercises_document_id = H.exercises_id     INNER JOIN shangshufang_base.technology I     ON A.technology_id = I.technology_id     INNER JOIN shangshufang_base.learning_phase J     ON A.learning_phase_id = J.learning_phase_id     INNER JOIN shangshufang_base.technology_knowledge K     ON A.technology_id = K.technology_id     AND A.learning_phase_id = K.learning_phase_id     AND A.knowledge_id = K.knowledge_id     AND K.data_status = 'A'     LEFT JOIN     (     SELECT     C.student_exercises_id,     C.reviewer_id,     C.reviewer_type,     D.full_name AS reviewer_name_teacher,     E.full_name AS reviewer_name_student,     C.update_time     FROM     (     SELECT     A.review_id,     A.student_exercises_id,     A.update_time,     B.reviewer_id,     B.reviewer_university_code,     B.reviewer_school_id,     B.reviewer_type     FROM     (     SELECT     student_exercises_id,     MAX(review_id) AS review_id,     MAX(update_time) AS update_time     FROM shangshufang_customer.university_student_exercises_review     GROUP BY student_exercises_id     ) A     INNER JOIN shangshufang_customer.university_student_exercises_review B     ON A.review_id = B.review_id     AND A.student_exercises_id = B.student_exercises_id     ) C     LEFT JOIN shangshufang_customer.university_customer D     ON C.reviewer_university_code = D.university_code     AND C.reviewer_school_id = D.school_id     AND C.reviewer_id = D.customer_id     AND C.reviewer_type = 'T'     LEFT JOIN shangshufang_customer.university_student E     ON C.reviewer_university_code = E.university_code     AND C.reviewer_school_id = E.school_id     AND C.reviewer_id = E.student_id     AND C.reviewer_type = 'S'     ) M     ON A.student_exercises_id = M.student_exercises_id     INNER JOIN shangshufang_customer.university_student_ability_analysis N     ON A.student_id = N.student_id     WHERE a.technology_id = ?     AND a.student_university_code = ?     AND a.student_school_id = ?     AND a.student_id = ?            ORDER BY A.course_class, A.knowledge_id, A.exercises_document_id, A.update_time DESC     LIMIT ?, ?;
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-340, 10' at line 128
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-340, 10' at line 128
[2020-06-06 22:42:19,137][http-nio-8081-exec-4][ERROR][com.shangshufang.apiservice.service.impl.UniversityStudentExercisesServiceImpl:101] org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-370, 10' at line 128
### The error may exist in file [/Users/zhangqiang/Documents/04-Project/ShangShuFang/SourceCode/shangshufang.apiservice/target/classes/mapping/UniversityStudentExercisesMapping.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT       A.student_exercises_id,       A.student_university_code,       B.university_name AS student_university_name,       A.student_school_id,       C.school_name AS student_school_name,       A.student_id,       F.full_name AS student_name,       F.photo AS student_photo,       F.cellphone,       F.enrollment_year,       N.ability_level,       N.position_site,       A.course_university_code,       D.university_name AS course_university_name,       A.course_school_id,       E.school_name AS course_school_name,       A.course_id,       G.course_name,       A.course_class,       A.technology_id,       I.technology_name,       A.learning_phase_id,       J.learning_phase_name,       A.knowledge_id,       K.knowledge_name,       A.exercises_document_id,       H.document_url AS exercises_document_url,       H.answer_url AS exercises_answer_url,       A.source_code_git_url,       A.data_status,       CASE WHEN A.data_status = 'P' THEN '未练习'       WHEN A.data_status = 'W' THEN '待批改'       WHEN A.data_status = 'R' THEN '待修改'       WHEN A.data_status = 'S' THEN '已通过'       ELSE '未知数据状态'       END AS data_status_text,       M.reviewer_id,       M.reviewer_name_teacher,       M.reviewer_name_student,       M.reviewer_type,       DATE_FORMAT(M.update_time, '%Y-%m-%d %H:%i:%s') AS review_time,       DATE_FORMAT(A.create_time, '%Y-%m-%d %H:%i:%s') AS create_time,       DATE_FORMAT(A.update_time, '%Y-%m-%d %H:%i:%s') AS update_time     FROM shangshufang_customer.university_student_exercises A     INNER JOIN shangshufang_customer.university B     ON A.student_university_code = B.university_code     INNER JOIN shangshufang_customer.school C     ON A.student_university_code = C.university_code     AND A.student_school_id = C.school_id     INNER JOIN shangshufang_customer.university D     ON A.course_university_code = D.university_code     INNER JOIN shangshufang_customer.school E     ON A.course_university_code = E.university_code     AND A.course_school_id = E.school_id     INNER JOIN shangshufang_customer.university_student F     ON A.student_id = F.student_id     INNER JOIN shangshufang_customer.course G     ON A.course_university_code = G.university_code     AND A.course_school_id = G.school_id     AND A.course_id = G.course_id     INNER JOIN shangshufang_base.technology_knowledge_exercises H     ON A.technology_id = H.technology_id     AND A.knowledge_id = H.knowledge_id     AND A.exercises_document_id = H.exercises_id     INNER JOIN shangshufang_base.technology I     ON A.technology_id = I.technology_id     INNER JOIN shangshufang_base.learning_phase J     ON A.learning_phase_id = J.learning_phase_id     INNER JOIN shangshufang_base.technology_knowledge K     ON A.technology_id = K.technology_id     AND A.learning_phase_id = K.learning_phase_id     AND A.knowledge_id = K.knowledge_id     AND K.data_status = 'A'     LEFT JOIN     (     SELECT     C.student_exercises_id,     C.reviewer_id,     C.reviewer_type,     D.full_name AS reviewer_name_teacher,     E.full_name AS reviewer_name_student,     C.update_time     FROM     (     SELECT     A.review_id,     A.student_exercises_id,     A.update_time,     B.reviewer_id,     B.reviewer_university_code,     B.reviewer_school_id,     B.reviewer_type     FROM     (     SELECT     student_exercises_id,     MAX(review_id) AS review_id,     MAX(update_time) AS update_time     FROM shangshufang_customer.university_student_exercises_review     GROUP BY student_exercises_id     ) A     INNER JOIN shangshufang_customer.university_student_exercises_review B     ON A.review_id = B.review_id     AND A.student_exercises_id = B.student_exercises_id     ) C     LEFT JOIN shangshufang_customer.university_customer D     ON C.reviewer_university_code = D.university_code     AND C.reviewer_school_id = D.school_id     AND C.reviewer_id = D.customer_id     AND C.reviewer_type = 'T'     LEFT JOIN shangshufang_customer.university_student E     ON C.reviewer_university_code = E.university_code     AND C.reviewer_school_id = E.school_id     AND C.reviewer_id = E.student_id     AND C.reviewer_type = 'S'     ) M     ON A.student_exercises_id = M.student_exercises_id     INNER JOIN shangshufang_customer.university_student_ability_analysis N     ON A.student_id = N.student_id     WHERE a.technology_id = ?     AND a.student_university_code = ?     AND a.student_school_id = ?     AND a.student_id = ?            ORDER BY A.course_class, A.knowledge_id, A.exercises_document_id, A.update_time DESC     LIMIT ?, ?;
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-370, 10' at line 128
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-370, 10' at line 128
[2020-06-06 22:42:19,137][http-nio-8081-exec-5][ERROR][com.shangshufang.apiservice.service.impl.UniversityStudentExercisesServiceImpl:101] org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-360, 10' at line 128
### The error may exist in file [/Users/zhangqiang/Documents/04-Project/ShangShuFang/SourceCode/shangshufang.apiservice/target/classes/mapping/UniversityStudentExercisesMapping.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT       A.student_exercises_id,       A.student_university_code,       B.university_name AS student_university_name,       A.student_school_id,       C.school_name AS student_school_name,       A.student_id,       F.full_name AS student_name,       F.photo AS student_photo,       F.cellphone,       F.enrollment_year,       N.ability_level,       N.position_site,       A.course_university_code,       D.university_name AS course_university_name,       A.course_school_id,       E.school_name AS course_school_name,       A.course_id,       G.course_name,       A.course_class,       A.technology_id,       I.technology_name,       A.learning_phase_id,       J.learning_phase_name,       A.knowledge_id,       K.knowledge_name,       A.exercises_document_id,       H.document_url AS exercises_document_url,       H.answer_url AS exercises_answer_url,       A.source_code_git_url,       A.data_status,       CASE WHEN A.data_status = 'P' THEN '未练习'       WHEN A.data_status = 'W' THEN '待批改'       WHEN A.data_status = 'R' THEN '待修改'       WHEN A.data_status = 'S' THEN '已通过'       ELSE '未知数据状态'       END AS data_status_text,       M.reviewer_id,       M.reviewer_name_teacher,       M.reviewer_name_student,       M.reviewer_type,       DATE_FORMAT(M.update_time, '%Y-%m-%d %H:%i:%s') AS review_time,       DATE_FORMAT(A.create_time, '%Y-%m-%d %H:%i:%s') AS create_time,       DATE_FORMAT(A.update_time, '%Y-%m-%d %H:%i:%s') AS update_time     FROM shangshufang_customer.university_student_exercises A     INNER JOIN shangshufang_customer.university B     ON A.student_university_code = B.university_code     INNER JOIN shangshufang_customer.school C     ON A.student_university_code = C.university_code     AND A.student_school_id = C.school_id     INNER JOIN shangshufang_customer.university D     ON A.course_university_code = D.university_code     INNER JOIN shangshufang_customer.school E     ON A.course_university_code = E.university_code     AND A.course_school_id = E.school_id     INNER JOIN shangshufang_customer.university_student F     ON A.student_id = F.student_id     INNER JOIN shangshufang_customer.course G     ON A.course_university_code = G.university_code     AND A.course_school_id = G.school_id     AND A.course_id = G.course_id     INNER JOIN shangshufang_base.technology_knowledge_exercises H     ON A.technology_id = H.technology_id     AND A.knowledge_id = H.knowledge_id     AND A.exercises_document_id = H.exercises_id     INNER JOIN shangshufang_base.technology I     ON A.technology_id = I.technology_id     INNER JOIN shangshufang_base.learning_phase J     ON A.learning_phase_id = J.learning_phase_id     INNER JOIN shangshufang_base.technology_knowledge K     ON A.technology_id = K.technology_id     AND A.learning_phase_id = K.learning_phase_id     AND A.knowledge_id = K.knowledge_id     AND K.data_status = 'A'     LEFT JOIN     (     SELECT     C.student_exercises_id,     C.reviewer_id,     C.reviewer_type,     D.full_name AS reviewer_name_teacher,     E.full_name AS reviewer_name_student,     C.update_time     FROM     (     SELECT     A.review_id,     A.student_exercises_id,     A.update_time,     B.reviewer_id,     B.reviewer_university_code,     B.reviewer_school_id,     B.reviewer_type     FROM     (     SELECT     student_exercises_id,     MAX(review_id) AS review_id,     MAX(update_time) AS update_time     FROM shangshufang_customer.university_student_exercises_review     GROUP BY student_exercises_id     ) A     INNER JOIN shangshufang_customer.university_student_exercises_review B     ON A.review_id = B.review_id     AND A.student_exercises_id = B.student_exercises_id     ) C     LEFT JOIN shangshufang_customer.university_customer D     ON C.reviewer_university_code = D.university_code     AND C.reviewer_school_id = D.school_id     AND C.reviewer_id = D.customer_id     AND C.reviewer_type = 'T'     LEFT JOIN shangshufang_customer.university_student E     ON C.reviewer_university_code = E.university_code     AND C.reviewer_school_id = E.school_id     AND C.reviewer_id = E.student_id     AND C.reviewer_type = 'S'     ) M     ON A.student_exercises_id = M.student_exercises_id     INNER JOIN shangshufang_customer.university_student_ability_analysis N     ON A.student_id = N.student_id     WHERE a.technology_id = ?     AND a.student_university_code = ?     AND a.student_school_id = ?     AND a.student_id = ?            ORDER BY A.course_class, A.knowledge_id, A.exercises_document_id, A.update_time DESC     LIMIT ?, ?;
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-360, 10' at line 128
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-360, 10' at line 128
[2020-06-06 22:42:19,154][http-nio-8081-exec-9][ERROR][com.shangshufang.apiservice.service.impl.UniversityStudentExercisesServiceImpl:101] org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-400, 10' at line 128
### The error may exist in file [/Users/zhangqiang/Documents/04-Project/ShangShuFang/SourceCode/shangshufang.apiservice/target/classes/mapping/UniversityStudentExercisesMapping.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT       A.student_exercises_id,       A.student_university_code,       B.university_name AS student_university_name,       A.student_school_id,       C.school_name AS student_school_name,       A.student_id,       F.full_name AS student_name,       F.photo AS student_photo,       F.cellphone,       F.enrollment_year,       N.ability_level,       N.position_site,       A.course_university_code,       D.university_name AS course_university_name,       A.course_school_id,       E.school_name AS course_school_name,       A.course_id,       G.course_name,       A.course_class,       A.technology_id,       I.technology_name,       A.learning_phase_id,       J.learning_phase_name,       A.knowledge_id,       K.knowledge_name,       A.exercises_document_id,       H.document_url AS exercises_document_url,       H.answer_url AS exercises_answer_url,       A.source_code_git_url,       A.data_status,       CASE WHEN A.data_status = 'P' THEN '未练习'       WHEN A.data_status = 'W' THEN '待批改'       WHEN A.data_status = 'R' THEN '待修改'       WHEN A.data_status = 'S' THEN '已通过'       ELSE '未知数据状态'       END AS data_status_text,       M.reviewer_id,       M.reviewer_name_teacher,       M.reviewer_name_student,       M.reviewer_type,       DATE_FORMAT(M.update_time, '%Y-%m-%d %H:%i:%s') AS review_time,       DATE_FORMAT(A.create_time, '%Y-%m-%d %H:%i:%s') AS create_time,       DATE_FORMAT(A.update_time, '%Y-%m-%d %H:%i:%s') AS update_time     FROM shangshufang_customer.university_student_exercises A     INNER JOIN shangshufang_customer.university B     ON A.student_university_code = B.university_code     INNER JOIN shangshufang_customer.school C     ON A.student_university_code = C.university_code     AND A.student_school_id = C.school_id     INNER JOIN shangshufang_customer.university D     ON A.course_university_code = D.university_code     INNER JOIN shangshufang_customer.school E     ON A.course_university_code = E.university_code     AND A.course_school_id = E.school_id     INNER JOIN shangshufang_customer.university_student F     ON A.student_id = F.student_id     INNER JOIN shangshufang_customer.course G     ON A.course_university_code = G.university_code     AND A.course_school_id = G.school_id     AND A.course_id = G.course_id     INNER JOIN shangshufang_base.technology_knowledge_exercises H     ON A.technology_id = H.technology_id     AND A.knowledge_id = H.knowledge_id     AND A.exercises_document_id = H.exercises_id     INNER JOIN shangshufang_base.technology I     ON A.technology_id = I.technology_id     INNER JOIN shangshufang_base.learning_phase J     ON A.learning_phase_id = J.learning_phase_id     INNER JOIN shangshufang_base.technology_knowledge K     ON A.technology_id = K.technology_id     AND A.learning_phase_id = K.learning_phase_id     AND A.knowledge_id = K.knowledge_id     AND K.data_status = 'A'     LEFT JOIN     (     SELECT     C.student_exercises_id,     C.reviewer_id,     C.reviewer_type,     D.full_name AS reviewer_name_teacher,     E.full_name AS reviewer_name_student,     C.update_time     FROM     (     SELECT     A.review_id,     A.student_exercises_id,     A.update_time,     B.reviewer_id,     B.reviewer_university_code,     B.reviewer_school_id,     B.reviewer_type     FROM     (     SELECT     student_exercises_id,     MAX(review_id) AS review_id,     MAX(update_time) AS update_time     FROM shangshufang_customer.university_student_exercises_review     GROUP BY student_exercises_id     ) A     INNER JOIN shangshufang_customer.university_student_exercises_review B     ON A.review_id = B.review_id     AND A.student_exercises_id = B.student_exercises_id     ) C     LEFT JOIN shangshufang_customer.university_customer D     ON C.reviewer_university_code = D.university_code     AND C.reviewer_school_id = D.school_id     AND C.reviewer_id = D.customer_id     AND C.reviewer_type = 'T'     LEFT JOIN shangshufang_customer.university_student E     ON C.reviewer_university_code = E.university_code     AND C.reviewer_school_id = E.school_id     AND C.reviewer_id = E.student_id     AND C.reviewer_type = 'S'     ) M     ON A.student_exercises_id = M.student_exercises_id     INNER JOIN shangshufang_customer.university_student_ability_analysis N     ON A.student_id = N.student_id     WHERE a.technology_id = ?     AND a.student_university_code = ?     AND a.student_school_id = ?     AND a.student_id = ?            ORDER BY A.course_class, A.knowledge_id, A.exercises_document_id, A.update_time DESC     LIMIT ?, ?;
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-400, 10' at line 128
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-400, 10' at line 128
[2020-06-06 22:42:19,154][http-nio-8081-exec-8][ERROR][com.shangshufang.apiservice.service.impl.UniversityStudentExercisesServiceImpl:101] org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-440, 10' at line 128
### The error may exist in file [/Users/zhangqiang/Documents/04-Project/ShangShuFang/SourceCode/shangshufang.apiservice/target/classes/mapping/UniversityStudentExercisesMapping.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT       A.student_exercises_id,       A.student_university_code,       B.university_name AS student_university_name,       A.student_school_id,       C.school_name AS student_school_name,       A.student_id,       F.full_name AS student_name,       F.photo AS student_photo,       F.cellphone,       F.enrollment_year,       N.ability_level,       N.position_site,       A.course_university_code,       D.university_name AS course_university_name,       A.course_school_id,       E.school_name AS course_school_name,       A.course_id,       G.course_name,       A.course_class,       A.technology_id,       I.technology_name,       A.learning_phase_id,       J.learning_phase_name,       A.knowledge_id,       K.knowledge_name,       A.exercises_document_id,       H.document_url AS exercises_document_url,       H.answer_url AS exercises_answer_url,       A.source_code_git_url,       A.data_status,       CASE WHEN A.data_status = 'P' THEN '未练习'       WHEN A.data_status = 'W' THEN '待批改'       WHEN A.data_status = 'R' THEN '待修改'       WHEN A.data_status = 'S' THEN '已通过'       ELSE '未知数据状态'       END AS data_status_text,       M.reviewer_id,       M.reviewer_name_teacher,       M.reviewer_name_student,       M.reviewer_type,       DATE_FORMAT(M.update_time, '%Y-%m-%d %H:%i:%s') AS review_time,       DATE_FORMAT(A.create_time, '%Y-%m-%d %H:%i:%s') AS create_time,       DATE_FORMAT(A.update_time, '%Y-%m-%d %H:%i:%s') AS update_time     FROM shangshufang_customer.university_student_exercises A     INNER JOIN shangshufang_customer.university B     ON A.student_university_code = B.university_code     INNER JOIN shangshufang_customer.school C     ON A.student_university_code = C.university_code     AND A.student_school_id = C.school_id     INNER JOIN shangshufang_customer.university D     ON A.course_university_code = D.university_code     INNER JOIN shangshufang_customer.school E     ON A.course_university_code = E.university_code     AND A.course_school_id = E.school_id     INNER JOIN shangshufang_customer.university_student F     ON A.student_id = F.student_id     INNER JOIN shangshufang_customer.course G     ON A.course_university_code = G.university_code     AND A.course_school_id = G.school_id     AND A.course_id = G.course_id     INNER JOIN shangshufang_base.technology_knowledge_exercises H     ON A.technology_id = H.technology_id     AND A.knowledge_id = H.knowledge_id     AND A.exercises_document_id = H.exercises_id     INNER JOIN shangshufang_base.technology I     ON A.technology_id = I.technology_id     INNER JOIN shangshufang_base.learning_phase J     ON A.learning_phase_id = J.learning_phase_id     INNER JOIN shangshufang_base.technology_knowledge K     ON A.technology_id = K.technology_id     AND A.learning_phase_id = K.learning_phase_id     AND A.knowledge_id = K.knowledge_id     AND K.data_status = 'A'     LEFT JOIN     (     SELECT     C.student_exercises_id,     C.reviewer_id,     C.reviewer_type,     D.full_name AS reviewer_name_teacher,     E.full_name AS reviewer_name_student,     C.update_time     FROM     (     SELECT     A.review_id,     A.student_exercises_id,     A.update_time,     B.reviewer_id,     B.reviewer_university_code,     B.reviewer_school_id,     B.reviewer_type     FROM     (     SELECT     student_exercises_id,     MAX(review_id) AS review_id,     MAX(update_time) AS update_time     FROM shangshufang_customer.university_student_exercises_review     GROUP BY student_exercises_id     ) A     INNER JOIN shangshufang_customer.university_student_exercises_review B     ON A.review_id = B.review_id     AND A.student_exercises_id = B.student_exercises_id     ) C     LEFT JOIN shangshufang_customer.university_customer D     ON C.reviewer_university_code = D.university_code     AND C.reviewer_school_id = D.school_id     AND C.reviewer_id = D.customer_id     AND C.reviewer_type = 'T'     LEFT JOIN shangshufang_customer.university_student E     ON C.reviewer_university_code = E.university_code     AND C.reviewer_school_id = E.school_id     AND C.reviewer_id = E.student_id     AND C.reviewer_type = 'S'     ) M     ON A.student_exercises_id = M.student_exercises_id     INNER JOIN shangshufang_customer.university_student_ability_analysis N     ON A.student_id = N.student_id     WHERE a.technology_id = ?     AND a.student_university_code = ?     AND a.student_school_id = ?     AND a.student_id = ?            ORDER BY A.course_class, A.knowledge_id, A.exercises_document_id, A.update_time DESC     LIMIT ?, ?;
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-440, 10' at line 128
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-440, 10' at line 128
[2020-06-06 22:42:19,154][http-nio-8081-exec-10][ERROR][com.shangshufang.apiservice.service.impl.UniversityStudentExercisesServiceImpl:101] org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-410, 10' at line 128
### The error may exist in file [/Users/zhangqiang/Documents/04-Project/ShangShuFang/SourceCode/shangshufang.apiservice/target/classes/mapping/UniversityStudentExercisesMapping.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT       A.student_exercises_id,       A.student_university_code,       B.university_name AS student_university_name,       A.student_school_id,       C.school_name AS student_school_name,       A.student_id,       F.full_name AS student_name,       F.photo AS student_photo,       F.cellphone,       F.enrollment_year,       N.ability_level,       N.position_site,       A.course_university_code,       D.university_name AS course_university_name,       A.course_school_id,       E.school_name AS course_school_name,       A.course_id,       G.course_name,       A.course_class,       A.technology_id,       I.technology_name,       A.learning_phase_id,       J.learning_phase_name,       A.knowledge_id,       K.knowledge_name,       A.exercises_document_id,       H.document_url AS exercises_document_url,       H.answer_url AS exercises_answer_url,       A.source_code_git_url,       A.data_status,       CASE WHEN A.data_status = 'P' THEN '未练习'       WHEN A.data_status = 'W' THEN '待批改'       WHEN A.data_status = 'R' THEN '待修改'       WHEN A.data_status = 'S' THEN '已通过'       ELSE '未知数据状态'       END AS data_status_text,       M.reviewer_id,       M.reviewer_name_teacher,       M.reviewer_name_student,       M.reviewer_type,       DATE_FORMAT(M.update_time, '%Y-%m-%d %H:%i:%s') AS review_time,       DATE_FORMAT(A.create_time, '%Y-%m-%d %H:%i:%s') AS create_time,       DATE_FORMAT(A.update_time, '%Y-%m-%d %H:%i:%s') AS update_time     FROM shangshufang_customer.university_student_exercises A     INNER JOIN shangshufang_customer.university B     ON A.student_university_code = B.university_code     INNER JOIN shangshufang_customer.school C     ON A.student_university_code = C.university_code     AND A.student_school_id = C.school_id     INNER JOIN shangshufang_customer.university D     ON A.course_university_code = D.university_code     INNER JOIN shangshufang_customer.school E     ON A.course_university_code = E.university_code     AND A.course_school_id = E.school_id     INNER JOIN shangshufang_customer.university_student F     ON A.student_id = F.student_id     INNER JOIN shangshufang_customer.course G     ON A.course_university_code = G.university_code     AND A.course_school_id = G.school_id     AND A.course_id = G.course_id     INNER JOIN shangshufang_base.technology_knowledge_exercises H     ON A.technology_id = H.technology_id     AND A.knowledge_id = H.knowledge_id     AND A.exercises_document_id = H.exercises_id     INNER JOIN shangshufang_base.technology I     ON A.technology_id = I.technology_id     INNER JOIN shangshufang_base.learning_phase J     ON A.learning_phase_id = J.learning_phase_id     INNER JOIN shangshufang_base.technology_knowledge K     ON A.technology_id = K.technology_id     AND A.learning_phase_id = K.learning_phase_id     AND A.knowledge_id = K.knowledge_id     AND K.data_status = 'A'     LEFT JOIN     (     SELECT     C.student_exercises_id,     C.reviewer_id,     C.reviewer_type,     D.full_name AS reviewer_name_teacher,     E.full_name AS reviewer_name_student,     C.update_time     FROM     (     SELECT     A.review_id,     A.student_exercises_id,     A.update_time,     B.reviewer_id,     B.reviewer_university_code,     B.reviewer_school_id,     B.reviewer_type     FROM     (     SELECT     student_exercises_id,     MAX(review_id) AS review_id,     MAX(update_time) AS update_time     FROM shangshufang_customer.university_student_exercises_review     GROUP BY student_exercises_id     ) A     INNER JOIN shangshufang_customer.university_student_exercises_review B     ON A.review_id = B.review_id     AND A.student_exercises_id = B.student_exercises_id     ) C     LEFT JOIN shangshufang_customer.university_customer D     ON C.reviewer_university_code = D.university_code     AND C.reviewer_school_id = D.school_id     AND C.reviewer_id = D.customer_id     AND C.reviewer_type = 'T'     LEFT JOIN shangshufang_customer.university_student E     ON C.reviewer_university_code = E.university_code     AND C.reviewer_school_id = E.school_id     AND C.reviewer_id = E.student_id     AND C.reviewer_type = 'S'     ) M     ON A.student_exercises_id = M.student_exercises_id     INNER JOIN shangshufang_customer.university_student_ability_analysis N     ON A.student_id = N.student_id     WHERE a.technology_id = ?     AND a.student_university_code = ?     AND a.student_school_id = ?     AND a.student_id = ?            ORDER BY A.course_class, A.knowledge_id, A.exercises_document_id, A.update_time DESC     LIMIT ?, ?;
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-410, 10' at line 128
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-410, 10' at line 128
[2020-06-06 22:42:19,154][http-nio-8081-exec-7][ERROR][com.shangshufang.apiservice.service.impl.UniversityStudentExercisesServiceImpl:101] org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-420, 10' at line 128
### The error may exist in file [/Users/zhangqiang/Documents/04-Project/ShangShuFang/SourceCode/shangshufang.apiservice/target/classes/mapping/UniversityStudentExercisesMapping.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT       A.student_exercises_id,       A.student_university_code,       B.university_name AS student_university_name,       A.student_school_id,       C.school_name AS student_school_name,       A.student_id,       F.full_name AS student_name,       F.photo AS student_photo,       F.cellphone,       F.enrollment_year,       N.ability_level,       N.position_site,       A.course_university_code,       D.university_name AS course_university_name,       A.course_school_id,       E.school_name AS course_school_name,       A.course_id,       G.course_name,       A.course_class,       A.technology_id,       I.technology_name,       A.learning_phase_id,       J.learning_phase_name,       A.knowledge_id,       K.knowledge_name,       A.exercises_document_id,       H.document_url AS exercises_document_url,       H.answer_url AS exercises_answer_url,       A.source_code_git_url,       A.data_status,       CASE WHEN A.data_status = 'P' THEN '未练习'       WHEN A.data_status = 'W' THEN '待批改'       WHEN A.data_status = 'R' THEN '待修改'       WHEN A.data_status = 'S' THEN '已通过'       ELSE '未知数据状态'       END AS data_status_text,       M.reviewer_id,       M.reviewer_name_teacher,       M.reviewer_name_student,       M.reviewer_type,       DATE_FORMAT(M.update_time, '%Y-%m-%d %H:%i:%s') AS review_time,       DATE_FORMAT(A.create_time, '%Y-%m-%d %H:%i:%s') AS create_time,       DATE_FORMAT(A.update_time, '%Y-%m-%d %H:%i:%s') AS update_time     FROM shangshufang_customer.university_student_exercises A     INNER JOIN shangshufang_customer.university B     ON A.student_university_code = B.university_code     INNER JOIN shangshufang_customer.school C     ON A.student_university_code = C.university_code     AND A.student_school_id = C.school_id     INNER JOIN shangshufang_customer.university D     ON A.course_university_code = D.university_code     INNER JOIN shangshufang_customer.school E     ON A.course_university_code = E.university_code     AND A.course_school_id = E.school_id     INNER JOIN shangshufang_customer.university_student F     ON A.student_id = F.student_id     INNER JOIN shangshufang_customer.course G     ON A.course_university_code = G.university_code     AND A.course_school_id = G.school_id     AND A.course_id = G.course_id     INNER JOIN shangshufang_base.technology_knowledge_exercises H     ON A.technology_id = H.technology_id     AND A.knowledge_id = H.knowledge_id     AND A.exercises_document_id = H.exercises_id     INNER JOIN shangshufang_base.technology I     ON A.technology_id = I.technology_id     INNER JOIN shangshufang_base.learning_phase J     ON A.learning_phase_id = J.learning_phase_id     INNER JOIN shangshufang_base.technology_knowledge K     ON A.technology_id = K.technology_id     AND A.learning_phase_id = K.learning_phase_id     AND A.knowledge_id = K.knowledge_id     AND K.data_status = 'A'     LEFT JOIN     (     SELECT     C.student_exercises_id,     C.reviewer_id,     C.reviewer_type,     D.full_name AS reviewer_name_teacher,     E.full_name AS reviewer_name_student,     C.update_time     FROM     (     SELECT     A.review_id,     A.student_exercises_id,     A.update_time,     B.reviewer_id,     B.reviewer_university_code,     B.reviewer_school_id,     B.reviewer_type     FROM     (     SELECT     student_exercises_id,     MAX(review_id) AS review_id,     MAX(update_time) AS update_time     FROM shangshufang_customer.university_student_exercises_review     GROUP BY student_exercises_id     ) A     INNER JOIN shangshufang_customer.university_student_exercises_review B     ON A.review_id = B.review_id     AND A.student_exercises_id = B.student_exercises_id     ) C     LEFT JOIN shangshufang_customer.university_customer D     ON C.reviewer_university_code = D.university_code     AND C.reviewer_school_id = D.school_id     AND C.reviewer_id = D.customer_id     AND C.reviewer_type = 'T'     LEFT JOIN shangshufang_customer.university_student E     ON C.reviewer_university_code = E.university_code     AND C.reviewer_school_id = E.school_id     AND C.reviewer_id = E.student_id     AND C.reviewer_type = 'S'     ) M     ON A.student_exercises_id = M.student_exercises_id     INNER JOIN shangshufang_customer.university_student_ability_analysis N     ON A.student_id = N.student_id     WHERE a.technology_id = ?     AND a.student_university_code = ?     AND a.student_school_id = ?     AND a.student_id = ?            ORDER BY A.course_class, A.knowledge_id, A.exercises_document_id, A.update_time DESC     LIMIT ?, ?;
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-420, 10' at line 128
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-420, 10' at line 128
[2020-06-06 22:42:19,154][http-nio-8081-exec-6][ERROR][com.shangshufang.apiservice.service.impl.UniversityStudentExercisesServiceImpl:101] org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-430, 10' at line 128
### The error may exist in file [/Users/zhangqiang/Documents/04-Project/ShangShuFang/SourceCode/shangshufang.apiservice/target/classes/mapping/UniversityStudentExercisesMapping.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT       A.student_exercises_id,       A.student_university_code,       B.university_name AS student_university_name,       A.student_school_id,       C.school_name AS student_school_name,       A.student_id,       F.full_name AS student_name,       F.photo AS student_photo,       F.cellphone,       F.enrollment_year,       N.ability_level,       N.position_site,       A.course_university_code,       D.university_name AS course_university_name,       A.course_school_id,       E.school_name AS course_school_name,       A.course_id,       G.course_name,       A.course_class,       A.technology_id,       I.technology_name,       A.learning_phase_id,       J.learning_phase_name,       A.knowledge_id,       K.knowledge_name,       A.exercises_document_id,       H.document_url AS exercises_document_url,       H.answer_url AS exercises_answer_url,       A.source_code_git_url,       A.data_status,       CASE WHEN A.data_status = 'P' THEN '未练习'       WHEN A.data_status = 'W' THEN '待批改'       WHEN A.data_status = 'R' THEN '待修改'       WHEN A.data_status = 'S' THEN '已通过'       ELSE '未知数据状态'       END AS data_status_text,       M.reviewer_id,       M.reviewer_name_teacher,       M.reviewer_name_student,       M.reviewer_type,       DATE_FORMAT(M.update_time, '%Y-%m-%d %H:%i:%s') AS review_time,       DATE_FORMAT(A.create_time, '%Y-%m-%d %H:%i:%s') AS create_time,       DATE_FORMAT(A.update_time, '%Y-%m-%d %H:%i:%s') AS update_time     FROM shangshufang_customer.university_student_exercises A     INNER JOIN shangshufang_customer.university B     ON A.student_university_code = B.university_code     INNER JOIN shangshufang_customer.school C     ON A.student_university_code = C.university_code     AND A.student_school_id = C.school_id     INNER JOIN shangshufang_customer.university D     ON A.course_university_code = D.university_code     INNER JOIN shangshufang_customer.school E     ON A.course_university_code = E.university_code     AND A.course_school_id = E.school_id     INNER JOIN shangshufang_customer.university_student F     ON A.student_id = F.student_id     INNER JOIN shangshufang_customer.course G     ON A.course_university_code = G.university_code     AND A.course_school_id = G.school_id     AND A.course_id = G.course_id     INNER JOIN shangshufang_base.technology_knowledge_exercises H     ON A.technology_id = H.technology_id     AND A.knowledge_id = H.knowledge_id     AND A.exercises_document_id = H.exercises_id     INNER JOIN shangshufang_base.technology I     ON A.technology_id = I.technology_id     INNER JOIN shangshufang_base.learning_phase J     ON A.learning_phase_id = J.learning_phase_id     INNER JOIN shangshufang_base.technology_knowledge K     ON A.technology_id = K.technology_id     AND A.learning_phase_id = K.learning_phase_id     AND A.knowledge_id = K.knowledge_id     AND K.data_status = 'A'     LEFT JOIN     (     SELECT     C.student_exercises_id,     C.reviewer_id,     C.reviewer_type,     D.full_name AS reviewer_name_teacher,     E.full_name AS reviewer_name_student,     C.update_time     FROM     (     SELECT     A.review_id,     A.student_exercises_id,     A.update_time,     B.reviewer_id,     B.reviewer_university_code,     B.reviewer_school_id,     B.reviewer_type     FROM     (     SELECT     student_exercises_id,     MAX(review_id) AS review_id,     MAX(update_time) AS update_time     FROM shangshufang_customer.university_student_exercises_review     GROUP BY student_exercises_id     ) A     INNER JOIN shangshufang_customer.university_student_exercises_review B     ON A.review_id = B.review_id     AND A.student_exercises_id = B.student_exercises_id     ) C     LEFT JOIN shangshufang_customer.university_customer D     ON C.reviewer_university_code = D.university_code     AND C.reviewer_school_id = D.school_id     AND C.reviewer_id = D.customer_id     AND C.reviewer_type = 'T'     LEFT JOIN shangshufang_customer.university_student E     ON C.reviewer_university_code = E.university_code     AND C.reviewer_school_id = E.school_id     AND C.reviewer_id = E.student_id     AND C.reviewer_type = 'S'     ) M     ON A.student_exercises_id = M.student_exercises_id     INNER JOIN shangshufang_customer.university_student_ability_analysis N     ON A.student_id = N.student_id     WHERE a.technology_id = ?     AND a.student_university_code = ?     AND a.student_school_id = ?     AND a.student_id = ?            ORDER BY A.course_class, A.knowledge_id, A.exercises_document_id, A.update_time DESC     LIMIT ?, ?;
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-430, 10' at line 128
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-430, 10' at line 128
[2020-06-06 22:42:19,154][http-nio-8081-exec-3][ERROR][com.shangshufang.apiservice.service.impl.UniversityStudentExercisesServiceImpl:101] org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-450, 10' at line 128
### The error may exist in file [/Users/zhangqiang/Documents/04-Project/ShangShuFang/SourceCode/shangshufang.apiservice/target/classes/mapping/UniversityStudentExercisesMapping.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT       A.student_exercises_id,       A.student_university_code,       B.university_name AS student_university_name,       A.student_school_id,       C.school_name AS student_school_name,       A.student_id,       F.full_name AS student_name,       F.photo AS student_photo,       F.cellphone,       F.enrollment_year,       N.ability_level,       N.position_site,       A.course_university_code,       D.university_name AS course_university_name,       A.course_school_id,       E.school_name AS course_school_name,       A.course_id,       G.course_name,       A.course_class,       A.technology_id,       I.technology_name,       A.learning_phase_id,       J.learning_phase_name,       A.knowledge_id,       K.knowledge_name,       A.exercises_document_id,       H.document_url AS exercises_document_url,       H.answer_url AS exercises_answer_url,       A.source_code_git_url,       A.data_status,       CASE WHEN A.data_status = 'P' THEN '未练习'       WHEN A.data_status = 'W' THEN '待批改'       WHEN A.data_status = 'R' THEN '待修改'       WHEN A.data_status = 'S' THEN '已通过'       ELSE '未知数据状态'       END AS data_status_text,       M.reviewer_id,       M.reviewer_name_teacher,       M.reviewer_name_student,       M.reviewer_type,       DATE_FORMAT(M.update_time, '%Y-%m-%d %H:%i:%s') AS review_time,       DATE_FORMAT(A.create_time, '%Y-%m-%d %H:%i:%s') AS create_time,       DATE_FORMAT(A.update_time, '%Y-%m-%d %H:%i:%s') AS update_time     FROM shangshufang_customer.university_student_exercises A     INNER JOIN shangshufang_customer.university B     ON A.student_university_code = B.university_code     INNER JOIN shangshufang_customer.school C     ON A.student_university_code = C.university_code     AND A.student_school_id = C.school_id     INNER JOIN shangshufang_customer.university D     ON A.course_university_code = D.university_code     INNER JOIN shangshufang_customer.school E     ON A.course_university_code = E.university_code     AND A.course_school_id = E.school_id     INNER JOIN shangshufang_customer.university_student F     ON A.student_id = F.student_id     INNER JOIN shangshufang_customer.course G     ON A.course_university_code = G.university_code     AND A.course_school_id = G.school_id     AND A.course_id = G.course_id     INNER JOIN shangshufang_base.technology_knowledge_exercises H     ON A.technology_id = H.technology_id     AND A.knowledge_id = H.knowledge_id     AND A.exercises_document_id = H.exercises_id     INNER JOIN shangshufang_base.technology I     ON A.technology_id = I.technology_id     INNER JOIN shangshufang_base.learning_phase J     ON A.learning_phase_id = J.learning_phase_id     INNER JOIN shangshufang_base.technology_knowledge K     ON A.technology_id = K.technology_id     AND A.learning_phase_id = K.learning_phase_id     AND A.knowledge_id = K.knowledge_id     AND K.data_status = 'A'     LEFT JOIN     (     SELECT     C.student_exercises_id,     C.reviewer_id,     C.reviewer_type,     D.full_name AS reviewer_name_teacher,     E.full_name AS reviewer_name_student,     C.update_time     FROM     (     SELECT     A.review_id,     A.student_exercises_id,     A.update_time,     B.reviewer_id,     B.reviewer_university_code,     B.reviewer_school_id,     B.reviewer_type     FROM     (     SELECT     student_exercises_id,     MAX(review_id) AS review_id,     MAX(update_time) AS update_time     FROM shangshufang_customer.university_student_exercises_review     GROUP BY student_exercises_id     ) A     INNER JOIN shangshufang_customer.university_student_exercises_review B     ON A.review_id = B.review_id     AND A.student_exercises_id = B.student_exercises_id     ) C     LEFT JOIN shangshufang_customer.university_customer D     ON C.reviewer_university_code = D.university_code     AND C.reviewer_school_id = D.school_id     AND C.reviewer_id = D.customer_id     AND C.reviewer_type = 'T'     LEFT JOIN shangshufang_customer.university_student E     ON C.reviewer_university_code = E.university_code     AND C.reviewer_school_id = E.school_id     AND C.reviewer_id = E.student_id     AND C.reviewer_type = 'S'     ) M     ON A.student_exercises_id = M.student_exercises_id     INNER JOIN shangshufang_customer.university_student_ability_analysis N     ON A.student_id = N.student_id     WHERE a.technology_id = ?     AND a.student_university_code = ?     AND a.student_school_id = ?     AND a.student_id = ?            ORDER BY A.course_class, A.knowledge_id, A.exercises_document_id, A.update_time DESC     LIMIT ?, ?;
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-450, 10' at line 128
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-450, 10' at line 128
[2020-06-06 22:42:19,169][http-nio-8081-exec-9][ERROR][com.shangshufang.apiservice.service.impl.UniversityStudentExercisesServiceImpl:101] org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-500, 10' at line 128
### The error may exist in file [/Users/zhangqiang/Documents/04-Project/ShangShuFang/SourceCode/shangshufang.apiservice/target/classes/mapping/UniversityStudentExercisesMapping.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT       A.student_exercises_id,       A.student_university_code,       B.university_name AS student_university_name,       A.student_school_id,       C.school_name AS student_school_name,       A.student_id,       F.full_name AS student_name,       F.photo AS student_photo,       F.cellphone,       F.enrollment_year,       N.ability_level,       N.position_site,       A.course_university_code,       D.university_name AS course_university_name,       A.course_school_id,       E.school_name AS course_school_name,       A.course_id,       G.course_name,       A.course_class,       A.technology_id,       I.technology_name,       A.learning_phase_id,       J.learning_phase_name,       A.knowledge_id,       K.knowledge_name,       A.exercises_document_id,       H.document_url AS exercises_document_url,       H.answer_url AS exercises_answer_url,       A.source_code_git_url,       A.data_status,       CASE WHEN A.data_status = 'P' THEN '未练习'       WHEN A.data_status = 'W' THEN '待批改'       WHEN A.data_status = 'R' THEN '待修改'       WHEN A.data_status = 'S' THEN '已通过'       ELSE '未知数据状态'       END AS data_status_text,       M.reviewer_id,       M.reviewer_name_teacher,       M.reviewer_name_student,       M.reviewer_type,       DATE_FORMAT(M.update_time, '%Y-%m-%d %H:%i:%s') AS review_time,       DATE_FORMAT(A.create_time, '%Y-%m-%d %H:%i:%s') AS create_time,       DATE_FORMAT(A.update_time, '%Y-%m-%d %H:%i:%s') AS update_time     FROM shangshufang_customer.university_student_exercises A     INNER JOIN shangshufang_customer.university B     ON A.student_university_code = B.university_code     INNER JOIN shangshufang_customer.school C     ON A.student_university_code = C.university_code     AND A.student_school_id = C.school_id     INNER JOIN shangshufang_customer.university D     ON A.course_university_code = D.university_code     INNER JOIN shangshufang_customer.school E     ON A.course_university_code = E.university_code     AND A.course_school_id = E.school_id     INNER JOIN shangshufang_customer.university_student F     ON A.student_id = F.student_id     INNER JOIN shangshufang_customer.course G     ON A.course_university_code = G.university_code     AND A.course_school_id = G.school_id     AND A.course_id = G.course_id     INNER JOIN shangshufang_base.technology_knowledge_exercises H     ON A.technology_id = H.technology_id     AND A.knowledge_id = H.knowledge_id     AND A.exercises_document_id = H.exercises_id     INNER JOIN shangshufang_base.technology I     ON A.technology_id = I.technology_id     INNER JOIN shangshufang_base.learning_phase J     ON A.learning_phase_id = J.learning_phase_id     INNER JOIN shangshufang_base.technology_knowledge K     ON A.technology_id = K.technology_id     AND A.learning_phase_id = K.learning_phase_id     AND A.knowledge_id = K.knowledge_id     AND K.data_status = 'A'     LEFT JOIN     (     SELECT     C.student_exercises_id,     C.reviewer_id,     C.reviewer_type,     D.full_name AS reviewer_name_teacher,     E.full_name AS reviewer_name_student,     C.update_time     FROM     (     SELECT     A.review_id,     A.student_exercises_id,     A.update_time,     B.reviewer_id,     B.reviewer_university_code,     B.reviewer_school_id,     B.reviewer_type     FROM     (     SELECT     student_exercises_id,     MAX(review_id) AS review_id,     MAX(update_time) AS update_time     FROM shangshufang_customer.university_student_exercises_review     GROUP BY student_exercises_id     ) A     INNER JOIN shangshufang_customer.university_student_exercises_review B     ON A.review_id = B.review_id     AND A.student_exercises_id = B.student_exercises_id     ) C     LEFT JOIN shangshufang_customer.university_customer D     ON C.reviewer_university_code = D.university_code     AND C.reviewer_school_id = D.school_id     AND C.reviewer_id = D.customer_id     AND C.reviewer_type = 'T'     LEFT JOIN shangshufang_customer.university_student E     ON C.reviewer_university_code = E.university_code     AND C.reviewer_school_id = E.school_id     AND C.reviewer_id = E.student_id     AND C.reviewer_type = 'S'     ) M     ON A.student_exercises_id = M.student_exercises_id     INNER JOIN shangshufang_customer.university_student_ability_analysis N     ON A.student_id = N.student_id     WHERE a.technology_id = ?     AND a.student_university_code = ?     AND a.student_school_id = ?     AND a.student_id = ?            ORDER BY A.course_class, A.knowledge_id, A.exercises_document_id, A.update_time DESC     LIMIT ?, ?;
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-500, 10' at line 128
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-500, 10' at line 128
[2020-06-06 22:42:19,169][http-nio-8081-exec-8][ERROR][com.shangshufang.apiservice.service.impl.UniversityStudentExercisesServiceImpl:101] org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-510, 10' at line 128
### The error may exist in file [/Users/zhangqiang/Documents/04-Project/ShangShuFang/SourceCode/shangshufang.apiservice/target/classes/mapping/UniversityStudentExercisesMapping.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT       A.student_exercises_id,       A.student_university_code,       B.university_name AS student_university_name,       A.student_school_id,       C.school_name AS student_school_name,       A.student_id,       F.full_name AS student_name,       F.photo AS student_photo,       F.cellphone,       F.enrollment_year,       N.ability_level,       N.position_site,       A.course_university_code,       D.university_name AS course_university_name,       A.course_school_id,       E.school_name AS course_school_name,       A.course_id,       G.course_name,       A.course_class,       A.technology_id,       I.technology_name,       A.learning_phase_id,       J.learning_phase_name,       A.knowledge_id,       K.knowledge_name,       A.exercises_document_id,       H.document_url AS exercises_document_url,       H.answer_url AS exercises_answer_url,       A.source_code_git_url,       A.data_status,       CASE WHEN A.data_status = 'P' THEN '未练习'       WHEN A.data_status = 'W' THEN '待批改'       WHEN A.data_status = 'R' THEN '待修改'       WHEN A.data_status = 'S' THEN '已通过'       ELSE '未知数据状态'       END AS data_status_text,       M.reviewer_id,       M.reviewer_name_teacher,       M.reviewer_name_student,       M.reviewer_type,       DATE_FORMAT(M.update_time, '%Y-%m-%d %H:%i:%s') AS review_time,       DATE_FORMAT(A.create_time, '%Y-%m-%d %H:%i:%s') AS create_time,       DATE_FORMAT(A.update_time, '%Y-%m-%d %H:%i:%s') AS update_time     FROM shangshufang_customer.university_student_exercises A     INNER JOIN shangshufang_customer.university B     ON A.student_university_code = B.university_code     INNER JOIN shangshufang_customer.school C     ON A.student_university_code = C.university_code     AND A.student_school_id = C.school_id     INNER JOIN shangshufang_customer.university D     ON A.course_university_code = D.university_code     INNER JOIN shangshufang_customer.school E     ON A.course_university_code = E.university_code     AND A.course_school_id = E.school_id     INNER JOIN shangshufang_customer.university_student F     ON A.student_id = F.student_id     INNER JOIN shangshufang_customer.course G     ON A.course_university_code = G.university_code     AND A.course_school_id = G.school_id     AND A.course_id = G.course_id     INNER JOIN shangshufang_base.technology_knowledge_exercises H     ON A.technology_id = H.technology_id     AND A.knowledge_id = H.knowledge_id     AND A.exercises_document_id = H.exercises_id     INNER JOIN shangshufang_base.technology I     ON A.technology_id = I.technology_id     INNER JOIN shangshufang_base.learning_phase J     ON A.learning_phase_id = J.learning_phase_id     INNER JOIN shangshufang_base.technology_knowledge K     ON A.technology_id = K.technology_id     AND A.learning_phase_id = K.learning_phase_id     AND A.knowledge_id = K.knowledge_id     AND K.data_status = 'A'     LEFT JOIN     (     SELECT     C.student_exercises_id,     C.reviewer_id,     C.reviewer_type,     D.full_name AS reviewer_name_teacher,     E.full_name AS reviewer_name_student,     C.update_time     FROM     (     SELECT     A.review_id,     A.student_exercises_id,     A.update_time,     B.reviewer_id,     B.reviewer_university_code,     B.reviewer_school_id,     B.reviewer_type     FROM     (     SELECT     student_exercises_id,     MAX(review_id) AS review_id,     MAX(update_time) AS update_time     FROM shangshufang_customer.university_student_exercises_review     GROUP BY student_exercises_id     ) A     INNER JOIN shangshufang_customer.university_student_exercises_review B     ON A.review_id = B.review_id     AND A.student_exercises_id = B.student_exercises_id     ) C     LEFT JOIN shangshufang_customer.university_customer D     ON C.reviewer_university_code = D.university_code     AND C.reviewer_school_id = D.school_id     AND C.reviewer_id = D.customer_id     AND C.reviewer_type = 'T'     LEFT JOIN shangshufang_customer.university_student E     ON C.reviewer_university_code = E.university_code     AND C.reviewer_school_id = E.school_id     AND C.reviewer_id = E.student_id     AND C.reviewer_type = 'S'     ) M     ON A.student_exercises_id = M.student_exercises_id     INNER JOIN shangshufang_customer.university_student_ability_analysis N     ON A.student_id = N.student_id     WHERE a.technology_id = ?     AND a.student_university_code = ?     AND a.student_school_id = ?     AND a.student_id = ?            ORDER BY A.course_class, A.knowledge_id, A.exercises_document_id, A.update_time DESC     LIMIT ?, ?;
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-510, 10' at line 128
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-510, 10' at line 128
[2020-06-06 22:42:19,169][http-nio-8081-exec-4][ERROR][com.shangshufang.apiservice.service.impl.UniversityStudentExercisesServiceImpl:101] org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-470, 10' at line 128
### The error may exist in file [/Users/zhangqiang/Documents/04-Project/ShangShuFang/SourceCode/shangshufang.apiservice/target/classes/mapping/UniversityStudentExercisesMapping.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT       A.student_exercises_id,       A.student_university_code,       B.university_name AS student_university_name,       A.student_school_id,       C.school_name AS student_school_name,       A.student_id,       F.full_name AS student_name,       F.photo AS student_photo,       F.cellphone,       F.enrollment_year,       N.ability_level,       N.position_site,       A.course_university_code,       D.university_name AS course_university_name,       A.course_school_id,       E.school_name AS course_school_name,       A.course_id,       G.course_name,       A.course_class,       A.technology_id,       I.technology_name,       A.learning_phase_id,       J.learning_phase_name,       A.knowledge_id,       K.knowledge_name,       A.exercises_document_id,       H.document_url AS exercises_document_url,       H.answer_url AS exercises_answer_url,       A.source_code_git_url,       A.data_status,       CASE WHEN A.data_status = 'P' THEN '未练习'       WHEN A.data_status = 'W' THEN '待批改'       WHEN A.data_status = 'R' THEN '待修改'       WHEN A.data_status = 'S' THEN '已通过'       ELSE '未知数据状态'       END AS data_status_text,       M.reviewer_id,       M.reviewer_name_teacher,       M.reviewer_name_student,       M.reviewer_type,       DATE_FORMAT(M.update_time, '%Y-%m-%d %H:%i:%s') AS review_time,       DATE_FORMAT(A.create_time, '%Y-%m-%d %H:%i:%s') AS create_time,       DATE_FORMAT(A.update_time, '%Y-%m-%d %H:%i:%s') AS update_time     FROM shangshufang_customer.university_student_exercises A     INNER JOIN shangshufang_customer.university B     ON A.student_university_code = B.university_code     INNER JOIN shangshufang_customer.school C     ON A.student_university_code = C.university_code     AND A.student_school_id = C.school_id     INNER JOIN shangshufang_customer.university D     ON A.course_university_code = D.university_code     INNER JOIN shangshufang_customer.school E     ON A.course_university_code = E.university_code     AND A.course_school_id = E.school_id     INNER JOIN shangshufang_customer.university_student F     ON A.student_id = F.student_id     INNER JOIN shangshufang_customer.course G     ON A.course_university_code = G.university_code     AND A.course_school_id = G.school_id     AND A.course_id = G.course_id     INNER JOIN shangshufang_base.technology_knowledge_exercises H     ON A.technology_id = H.technology_id     AND A.knowledge_id = H.knowledge_id     AND A.exercises_document_id = H.exercises_id     INNER JOIN shangshufang_base.technology I     ON A.technology_id = I.technology_id     INNER JOIN shangshufang_base.learning_phase J     ON A.learning_phase_id = J.learning_phase_id     INNER JOIN shangshufang_base.technology_knowledge K     ON A.technology_id = K.technology_id     AND A.learning_phase_id = K.learning_phase_id     AND A.knowledge_id = K.knowledge_id     AND K.data_status = 'A'     LEFT JOIN     (     SELECT     C.student_exercises_id,     C.reviewer_id,     C.reviewer_type,     D.full_name AS reviewer_name_teacher,     E.full_name AS reviewer_name_student,     C.update_time     FROM     (     SELECT     A.review_id,     A.student_exercises_id,     A.update_time,     B.reviewer_id,     B.reviewer_university_code,     B.reviewer_school_id,     B.reviewer_type     FROM     (     SELECT     student_exercises_id,     MAX(review_id) AS review_id,     MAX(update_time) AS update_time     FROM shangshufang_customer.university_student_exercises_review     GROUP BY student_exercises_id     ) A     INNER JOIN shangshufang_customer.university_student_exercises_review B     ON A.review_id = B.review_id     AND A.student_exercises_id = B.student_exercises_id     ) C     LEFT JOIN shangshufang_customer.university_customer D     ON C.reviewer_university_code = D.university_code     AND C.reviewer_school_id = D.school_id     AND C.reviewer_id = D.customer_id     AND C.reviewer_type = 'T'     LEFT JOIN shangshufang_customer.university_student E     ON C.reviewer_university_code = E.university_code     AND C.reviewer_school_id = E.school_id     AND C.reviewer_id = E.student_id     AND C.reviewer_type = 'S'     ) M     ON A.student_exercises_id = M.student_exercises_id     INNER JOIN shangshufang_customer.university_student_ability_analysis N     ON A.student_id = N.student_id     WHERE a.technology_id = ?     AND a.student_university_code = ?     AND a.student_school_id = ?     AND a.student_id = ?            ORDER BY A.course_class, A.knowledge_id, A.exercises_document_id, A.update_time DESC     LIMIT ?, ?;
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-470, 10' at line 128
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-470, 10' at line 128
[2020-06-06 22:42:19,169][http-nio-8081-exec-1][ERROR][com.shangshufang.apiservice.service.impl.UniversityStudentExercisesServiceImpl:101] org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-460, 10' at line 128
### The error may exist in file [/Users/zhangqiang/Documents/04-Project/ShangShuFang/SourceCode/shangshufang.apiservice/target/classes/mapping/UniversityStudentExercisesMapping.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT       A.student_exercises_id,       A.student_university_code,       B.university_name AS student_university_name,       A.student_school_id,       C.school_name AS student_school_name,       A.student_id,       F.full_name AS student_name,       F.photo AS student_photo,       F.cellphone,       F.enrollment_year,       N.ability_level,       N.position_site,       A.course_university_code,       D.university_name AS course_university_name,       A.course_school_id,       E.school_name AS course_school_name,       A.course_id,       G.course_name,       A.course_class,       A.technology_id,       I.technology_name,       A.learning_phase_id,       J.learning_phase_name,       A.knowledge_id,       K.knowledge_name,       A.exercises_document_id,       H.document_url AS exercises_document_url,       H.answer_url AS exercises_answer_url,       A.source_code_git_url,       A.data_status,       CASE WHEN A.data_status = 'P' THEN '未练习'       WHEN A.data_status = 'W' THEN '待批改'       WHEN A.data_status = 'R' THEN '待修改'       WHEN A.data_status = 'S' THEN '已通过'       ELSE '未知数据状态'       END AS data_status_text,       M.reviewer_id,       M.reviewer_name_teacher,       M.reviewer_name_student,       M.reviewer_type,       DATE_FORMAT(M.update_time, '%Y-%m-%d %H:%i:%s') AS review_time,       DATE_FORMAT(A.create_time, '%Y-%m-%d %H:%i:%s') AS create_time,       DATE_FORMAT(A.update_time, '%Y-%m-%d %H:%i:%s') AS update_time     FROM shangshufang_customer.university_student_exercises A     INNER JOIN shangshufang_customer.university B     ON A.student_university_code = B.university_code     INNER JOIN shangshufang_customer.school C     ON A.student_university_code = C.university_code     AND A.student_school_id = C.school_id     INNER JOIN shangshufang_customer.university D     ON A.course_university_code = D.university_code     INNER JOIN shangshufang_customer.school E     ON A.course_university_code = E.university_code     AND A.course_school_id = E.school_id     INNER JOIN shangshufang_customer.university_student F     ON A.student_id = F.student_id     INNER JOIN shangshufang_customer.course G     ON A.course_university_code = G.university_code     AND A.course_school_id = G.school_id     AND A.course_id = G.course_id     INNER JOIN shangshufang_base.technology_knowledge_exercises H     ON A.technology_id = H.technology_id     AND A.knowledge_id = H.knowledge_id     AND A.exercises_document_id = H.exercises_id     INNER JOIN shangshufang_base.technology I     ON A.technology_id = I.technology_id     INNER JOIN shangshufang_base.learning_phase J     ON A.learning_phase_id = J.learning_phase_id     INNER JOIN shangshufang_base.technology_knowledge K     ON A.technology_id = K.technology_id     AND A.learning_phase_id = K.learning_phase_id     AND A.knowledge_id = K.knowledge_id     AND K.data_status = 'A'     LEFT JOIN     (     SELECT     C.student_exercises_id,     C.reviewer_id,     C.reviewer_type,     D.full_name AS reviewer_name_teacher,     E.full_name AS reviewer_name_student,     C.update_time     FROM     (     SELECT     A.review_id,     A.student_exercises_id,     A.update_time,     B.reviewer_id,     B.reviewer_university_code,     B.reviewer_school_id,     B.reviewer_type     FROM     (     SELECT     student_exercises_id,     MAX(review_id) AS review_id,     MAX(update_time) AS update_time     FROM shangshufang_customer.university_student_exercises_review     GROUP BY student_exercises_id     ) A     INNER JOIN shangshufang_customer.university_student_exercises_review B     ON A.review_id = B.review_id     AND A.student_exercises_id = B.student_exercises_id     ) C     LEFT JOIN shangshufang_customer.university_customer D     ON C.reviewer_university_code = D.university_code     AND C.reviewer_school_id = D.school_id     AND C.reviewer_id = D.customer_id     AND C.reviewer_type = 'T'     LEFT JOIN shangshufang_customer.university_student E     ON C.reviewer_university_code = E.university_code     AND C.reviewer_school_id = E.school_id     AND C.reviewer_id = E.student_id     AND C.reviewer_type = 'S'     ) M     ON A.student_exercises_id = M.student_exercises_id     INNER JOIN shangshufang_customer.university_student_ability_analysis N     ON A.student_id = N.student_id     WHERE a.technology_id = ?     AND a.student_university_code = ?     AND a.student_school_id = ?     AND a.student_id = ?            ORDER BY A.course_class, A.knowledge_id, A.exercises_document_id, A.update_time DESC     LIMIT ?, ?;
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-460, 10' at line 128
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-460, 10' at line 128
[2020-06-06 22:42:19,169][http-nio-8081-exec-2][ERROR][com.shangshufang.apiservice.service.impl.UniversityStudentExercisesServiceImpl:101] org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-490, 10' at line 128
### The error may exist in file [/Users/zhangqiang/Documents/04-Project/ShangShuFang/SourceCode/shangshufang.apiservice/target/classes/mapping/UniversityStudentExercisesMapping.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT       A.student_exercises_id,       A.student_university_code,       B.university_name AS student_university_name,       A.student_school_id,       C.school_name AS student_school_name,       A.student_id,       F.full_name AS student_name,       F.photo AS student_photo,       F.cellphone,       F.enrollment_year,       N.ability_level,       N.position_site,       A.course_university_code,       D.university_name AS course_university_name,       A.course_school_id,       E.school_name AS course_school_name,       A.course_id,       G.course_name,       A.course_class,       A.technology_id,       I.technology_name,       A.learning_phase_id,       J.learning_phase_name,       A.knowledge_id,       K.knowledge_name,       A.exercises_document_id,       H.document_url AS exercises_document_url,       H.answer_url AS exercises_answer_url,       A.source_code_git_url,       A.data_status,       CASE WHEN A.data_status = 'P' THEN '未练习'       WHEN A.data_status = 'W' THEN '待批改'       WHEN A.data_status = 'R' THEN '待修改'       WHEN A.data_status = 'S' THEN '已通过'       ELSE '未知数据状态'       END AS data_status_text,       M.reviewer_id,       M.reviewer_name_teacher,       M.reviewer_name_student,       M.reviewer_type,       DATE_FORMAT(M.update_time, '%Y-%m-%d %H:%i:%s') AS review_time,       DATE_FORMAT(A.create_time, '%Y-%m-%d %H:%i:%s') AS create_time,       DATE_FORMAT(A.update_time, '%Y-%m-%d %H:%i:%s') AS update_time     FROM shangshufang_customer.university_student_exercises A     INNER JOIN shangshufang_customer.university B     ON A.student_university_code = B.university_code     INNER JOIN shangshufang_customer.school C     ON A.student_university_code = C.university_code     AND A.student_school_id = C.school_id     INNER JOIN shangshufang_customer.university D     ON A.course_university_code = D.university_code     INNER JOIN shangshufang_customer.school E     ON A.course_university_code = E.university_code     AND A.course_school_id = E.school_id     INNER JOIN shangshufang_customer.university_student F     ON A.student_id = F.student_id     INNER JOIN shangshufang_customer.course G     ON A.course_university_code = G.university_code     AND A.course_school_id = G.school_id     AND A.course_id = G.course_id     INNER JOIN shangshufang_base.technology_knowledge_exercises H     ON A.technology_id = H.technology_id     AND A.knowledge_id = H.knowledge_id     AND A.exercises_document_id = H.exercises_id     INNER JOIN shangshufang_base.technology I     ON A.technology_id = I.technology_id     INNER JOIN shangshufang_base.learning_phase J     ON A.learning_phase_id = J.learning_phase_id     INNER JOIN shangshufang_base.technology_knowledge K     ON A.technology_id = K.technology_id     AND A.learning_phase_id = K.learning_phase_id     AND A.knowledge_id = K.knowledge_id     AND K.data_status = 'A'     LEFT JOIN     (     SELECT     C.student_exercises_id,     C.reviewer_id,     C.reviewer_type,     D.full_name AS reviewer_name_teacher,     E.full_name AS reviewer_name_student,     C.update_time     FROM     (     SELECT     A.review_id,     A.student_exercises_id,     A.update_time,     B.reviewer_id,     B.reviewer_university_code,     B.reviewer_school_id,     B.reviewer_type     FROM     (     SELECT     student_exercises_id,     MAX(review_id) AS review_id,     MAX(update_time) AS update_time     FROM shangshufang_customer.university_student_exercises_review     GROUP BY student_exercises_id     ) A     INNER JOIN shangshufang_customer.university_student_exercises_review B     ON A.review_id = B.review_id     AND A.student_exercises_id = B.student_exercises_id     ) C     LEFT JOIN shangshufang_customer.university_customer D     ON C.reviewer_university_code = D.university_code     AND C.reviewer_school_id = D.school_id     AND C.reviewer_id = D.customer_id     AND C.reviewer_type = 'T'     LEFT JOIN shangshufang_customer.university_student E     ON C.reviewer_university_code = E.university_code     AND C.reviewer_school_id = E.school_id     AND C.reviewer_id = E.student_id     AND C.reviewer_type = 'S'     ) M     ON A.student_exercises_id = M.student_exercises_id     INNER JOIN shangshufang_customer.university_student_ability_analysis N     ON A.student_id = N.student_id     WHERE a.technology_id = ?     AND a.student_university_code = ?     AND a.student_school_id = ?     AND a.student_id = ?            ORDER BY A.course_class, A.knowledge_id, A.exercises_document_id, A.update_time DESC     LIMIT ?, ?;
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-490, 10' at line 128
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-490, 10' at line 128
[2020-06-06 22:42:19,169][http-nio-8081-exec-5][ERROR][com.shangshufang.apiservice.service.impl.UniversityStudentExercisesServiceImpl:101] org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-480, 10' at line 128
### The error may exist in file [/Users/zhangqiang/Documents/04-Project/ShangShuFang/SourceCode/shangshufang.apiservice/target/classes/mapping/UniversityStudentExercisesMapping.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT       A.student_exercises_id,       A.student_university_code,       B.university_name AS student_university_name,       A.student_school_id,       C.school_name AS student_school_name,       A.student_id,       F.full_name AS student_name,       F.photo AS student_photo,       F.cellphone,       F.enrollment_year,       N.ability_level,       N.position_site,       A.course_university_code,       D.university_name AS course_university_name,       A.course_school_id,       E.school_name AS course_school_name,       A.course_id,       G.course_name,       A.course_class,       A.technology_id,       I.technology_name,       A.learning_phase_id,       J.learning_phase_name,       A.knowledge_id,       K.knowledge_name,       A.exercises_document_id,       H.document_url AS exercises_document_url,       H.answer_url AS exercises_answer_url,       A.source_code_git_url,       A.data_status,       CASE WHEN A.data_status = 'P' THEN '未练习'       WHEN A.data_status = 'W' THEN '待批改'       WHEN A.data_status = 'R' THEN '待修改'       WHEN A.data_status = 'S' THEN '已通过'       ELSE '未知数据状态'       END AS data_status_text,       M.reviewer_id,       M.reviewer_name_teacher,       M.reviewer_name_student,       M.reviewer_type,       DATE_FORMAT(M.update_time, '%Y-%m-%d %H:%i:%s') AS review_time,       DATE_FORMAT(A.create_time, '%Y-%m-%d %H:%i:%s') AS create_time,       DATE_FORMAT(A.update_time, '%Y-%m-%d %H:%i:%s') AS update_time     FROM shangshufang_customer.university_student_exercises A     INNER JOIN shangshufang_customer.university B     ON A.student_university_code = B.university_code     INNER JOIN shangshufang_customer.school C     ON A.student_university_code = C.university_code     AND A.student_school_id = C.school_id     INNER JOIN shangshufang_customer.university D     ON A.course_university_code = D.university_code     INNER JOIN shangshufang_customer.school E     ON A.course_university_code = E.university_code     AND A.course_school_id = E.school_id     INNER JOIN shangshufang_customer.university_student F     ON A.student_id = F.student_id     INNER JOIN shangshufang_customer.course G     ON A.course_university_code = G.university_code     AND A.course_school_id = G.school_id     AND A.course_id = G.course_id     INNER JOIN shangshufang_base.technology_knowledge_exercises H     ON A.technology_id = H.technology_id     AND A.knowledge_id = H.knowledge_id     AND A.exercises_document_id = H.exercises_id     INNER JOIN shangshufang_base.technology I     ON A.technology_id = I.technology_id     INNER JOIN shangshufang_base.learning_phase J     ON A.learning_phase_id = J.learning_phase_id     INNER JOIN shangshufang_base.technology_knowledge K     ON A.technology_id = K.technology_id     AND A.learning_phase_id = K.learning_phase_id     AND A.knowledge_id = K.knowledge_id     AND K.data_status = 'A'     LEFT JOIN     (     SELECT     C.student_exercises_id,     C.reviewer_id,     C.reviewer_type,     D.full_name AS reviewer_name_teacher,     E.full_name AS reviewer_name_student,     C.update_time     FROM     (     SELECT     A.review_id,     A.student_exercises_id,     A.update_time,     B.reviewer_id,     B.reviewer_university_code,     B.reviewer_school_id,     B.reviewer_type     FROM     (     SELECT     student_exercises_id,     MAX(review_id) AS review_id,     MAX(update_time) AS update_time     FROM shangshufang_customer.university_student_exercises_review     GROUP BY student_exercises_id     ) A     INNER JOIN shangshufang_customer.university_student_exercises_review B     ON A.review_id = B.review_id     AND A.student_exercises_id = B.student_exercises_id     ) C     LEFT JOIN shangshufang_customer.university_customer D     ON C.reviewer_university_code = D.university_code     AND C.reviewer_school_id = D.school_id     AND C.reviewer_id = D.customer_id     AND C.reviewer_type = 'T'     LEFT JOIN shangshufang_customer.university_student E     ON C.reviewer_university_code = E.university_code     AND C.reviewer_school_id = E.school_id     AND C.reviewer_id = E.student_id     AND C.reviewer_type = 'S'     ) M     ON A.student_exercises_id = M.student_exercises_id     INNER JOIN shangshufang_customer.university_student_ability_analysis N     ON A.student_id = N.student_id     WHERE a.technology_id = ?     AND a.student_university_code = ?     AND a.student_school_id = ?     AND a.student_id = ?            ORDER BY A.course_class, A.knowledge_id, A.exercises_document_id, A.update_time DESC     LIMIT ?, ?;
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-480, 10' at line 128
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-480, 10' at line 128
[2020-06-06 22:42:19,186][http-nio-8081-exec-3][ERROR][com.shangshufang.apiservice.service.impl.UniversityStudentExercisesServiceImpl:101] org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-540, 10' at line 128
### The error may exist in file [/Users/zhangqiang/Documents/04-Project/ShangShuFang/SourceCode/shangshufang.apiservice/target/classes/mapping/UniversityStudentExercisesMapping.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT       A.student_exercises_id,       A.student_university_code,       B.university_name AS student_university_name,       A.student_school_id,       C.school_name AS student_school_name,       A.student_id,       F.full_name AS student_name,       F.photo AS student_photo,       F.cellphone,       F.enrollment_year,       N.ability_level,       N.position_site,       A.course_university_code,       D.university_name AS course_university_name,       A.course_school_id,       E.school_name AS course_school_name,       A.course_id,       G.course_name,       A.course_class,       A.technology_id,       I.technology_name,       A.learning_phase_id,       J.learning_phase_name,       A.knowledge_id,       K.knowledge_name,       A.exercises_document_id,       H.document_url AS exercises_document_url,       H.answer_url AS exercises_answer_url,       A.source_code_git_url,       A.data_status,       CASE WHEN A.data_status = 'P' THEN '未练习'       WHEN A.data_status = 'W' THEN '待批改'       WHEN A.data_status = 'R' THEN '待修改'       WHEN A.data_status = 'S' THEN '已通过'       ELSE '未知数据状态'       END AS data_status_text,       M.reviewer_id,       M.reviewer_name_teacher,       M.reviewer_name_student,       M.reviewer_type,       DATE_FORMAT(M.update_time, '%Y-%m-%d %H:%i:%s') AS review_time,       DATE_FORMAT(A.create_time, '%Y-%m-%d %H:%i:%s') AS create_time,       DATE_FORMAT(A.update_time, '%Y-%m-%d %H:%i:%s') AS update_time     FROM shangshufang_customer.university_student_exercises A     INNER JOIN shangshufang_customer.university B     ON A.student_university_code = B.university_code     INNER JOIN shangshufang_customer.school C     ON A.student_university_code = C.university_code     AND A.student_school_id = C.school_id     INNER JOIN shangshufang_customer.university D     ON A.course_university_code = D.university_code     INNER JOIN shangshufang_customer.school E     ON A.course_university_code = E.university_code     AND A.course_school_id = E.school_id     INNER JOIN shangshufang_customer.university_student F     ON A.student_id = F.student_id     INNER JOIN shangshufang_customer.course G     ON A.course_university_code = G.university_code     AND A.course_school_id = G.school_id     AND A.course_id = G.course_id     INNER JOIN shangshufang_base.technology_knowledge_exercises H     ON A.technology_id = H.technology_id     AND A.knowledge_id = H.knowledge_id     AND A.exercises_document_id = H.exercises_id     INNER JOIN shangshufang_base.technology I     ON A.technology_id = I.technology_id     INNER JOIN shangshufang_base.learning_phase J     ON A.learning_phase_id = J.learning_phase_id     INNER JOIN shangshufang_base.technology_knowledge K     ON A.technology_id = K.technology_id     AND A.learning_phase_id = K.learning_phase_id     AND A.knowledge_id = K.knowledge_id     AND K.data_status = 'A'     LEFT JOIN     (     SELECT     C.student_exercises_id,     C.reviewer_id,     C.reviewer_type,     D.full_name AS reviewer_name_teacher,     E.full_name AS reviewer_name_student,     C.update_time     FROM     (     SELECT     A.review_id,     A.student_exercises_id,     A.update_time,     B.reviewer_id,     B.reviewer_university_code,     B.reviewer_school_id,     B.reviewer_type     FROM     (     SELECT     student_exercises_id,     MAX(review_id) AS review_id,     MAX(update_time) AS update_time     FROM shangshufang_customer.university_student_exercises_review     GROUP BY student_exercises_id     ) A     INNER JOIN shangshufang_customer.university_student_exercises_review B     ON A.review_id = B.review_id     AND A.student_exercises_id = B.student_exercises_id     ) C     LEFT JOIN shangshufang_customer.university_customer D     ON C.reviewer_university_code = D.university_code     AND C.reviewer_school_id = D.school_id     AND C.reviewer_id = D.customer_id     AND C.reviewer_type = 'T'     LEFT JOIN shangshufang_customer.university_student E     ON C.reviewer_university_code = E.university_code     AND C.reviewer_school_id = E.school_id     AND C.reviewer_id = E.student_id     AND C.reviewer_type = 'S'     ) M     ON A.student_exercises_id = M.student_exercises_id     INNER JOIN shangshufang_customer.university_student_ability_analysis N     ON A.student_id = N.student_id     WHERE a.technology_id = ?     AND a.student_university_code = ?     AND a.student_school_id = ?     AND a.student_id = ?            ORDER BY A.course_class, A.knowledge_id, A.exercises_document_id, A.update_time DESC     LIMIT ?, ?;
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-540, 10' at line 128
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-540, 10' at line 128
[2020-06-06 22:42:19,186][http-nio-8081-exec-9][ERROR][com.shangshufang.apiservice.service.impl.UniversityStudentExercisesServiceImpl:101] org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-570, 10' at line 128
### The error may exist in file [/Users/zhangqiang/Documents/04-Project/ShangShuFang/SourceCode/shangshufang.apiservice/target/classes/mapping/UniversityStudentExercisesMapping.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT       A.student_exercises_id,       A.student_university_code,       B.university_name AS student_university_name,       A.student_school_id,       C.school_name AS student_school_name,       A.student_id,       F.full_name AS student_name,       F.photo AS student_photo,       F.cellphone,       F.enrollment_year,       N.ability_level,       N.position_site,       A.course_university_code,       D.university_name AS course_university_name,       A.course_school_id,       E.school_name AS course_school_name,       A.course_id,       G.course_name,       A.course_class,       A.technology_id,       I.technology_name,       A.learning_phase_id,       J.learning_phase_name,       A.knowledge_id,       K.knowledge_name,       A.exercises_document_id,       H.document_url AS exercises_document_url,       H.answer_url AS exercises_answer_url,       A.source_code_git_url,       A.data_status,       CASE WHEN A.data_status = 'P' THEN '未练习'       WHEN A.data_status = 'W' THEN '待批改'       WHEN A.data_status = 'R' THEN '待修改'       WHEN A.data_status = 'S' THEN '已通过'       ELSE '未知数据状态'       END AS data_status_text,       M.reviewer_id,       M.reviewer_name_teacher,       M.reviewer_name_student,       M.reviewer_type,       DATE_FORMAT(M.update_time, '%Y-%m-%d %H:%i:%s') AS review_time,       DATE_FORMAT(A.create_time, '%Y-%m-%d %H:%i:%s') AS create_time,       DATE_FORMAT(A.update_time, '%Y-%m-%d %H:%i:%s') AS update_time     FROM shangshufang_customer.university_student_exercises A     INNER JOIN shangshufang_customer.university B     ON A.student_university_code = B.university_code     INNER JOIN shangshufang_customer.school C     ON A.student_university_code = C.university_code     AND A.student_school_id = C.school_id     INNER JOIN shangshufang_customer.university D     ON A.course_university_code = D.university_code     INNER JOIN shangshufang_customer.school E     ON A.course_university_code = E.university_code     AND A.course_school_id = E.school_id     INNER JOIN shangshufang_customer.university_student F     ON A.student_id = F.student_id     INNER JOIN shangshufang_customer.course G     ON A.course_university_code = G.university_code     AND A.course_school_id = G.school_id     AND A.course_id = G.course_id     INNER JOIN shangshufang_base.technology_knowledge_exercises H     ON A.technology_id = H.technology_id     AND A.knowledge_id = H.knowledge_id     AND A.exercises_document_id = H.exercises_id     INNER JOIN shangshufang_base.technology I     ON A.technology_id = I.technology_id     INNER JOIN shangshufang_base.learning_phase J     ON A.learning_phase_id = J.learning_phase_id     INNER JOIN shangshufang_base.technology_knowledge K     ON A.technology_id = K.technology_id     AND A.learning_phase_id = K.learning_phase_id     AND A.knowledge_id = K.knowledge_id     AND K.data_status = 'A'     LEFT JOIN     (     SELECT     C.student_exercises_id,     C.reviewer_id,     C.reviewer_type,     D.full_name AS reviewer_name_teacher,     E.full_name AS reviewer_name_student,     C.update_time     FROM     (     SELECT     A.review_id,     A.student_exercises_id,     A.update_time,     B.reviewer_id,     B.reviewer_university_code,     B.reviewer_school_id,     B.reviewer_type     FROM     (     SELECT     student_exercises_id,     MAX(review_id) AS review_id,     MAX(update_time) AS update_time     FROM shangshufang_customer.university_student_exercises_review     GROUP BY student_exercises_id     ) A     INNER JOIN shangshufang_customer.university_student_exercises_review B     ON A.review_id = B.review_id     AND A.student_exercises_id = B.student_exercises_id     ) C     LEFT JOIN shangshufang_customer.university_customer D     ON C.reviewer_university_code = D.university_code     AND C.reviewer_school_id = D.school_id     AND C.reviewer_id = D.customer_id     AND C.reviewer_type = 'T'     LEFT JOIN shangshufang_customer.university_student E     ON C.reviewer_university_code = E.university_code     AND C.reviewer_school_id = E.school_id     AND C.reviewer_id = E.student_id     AND C.reviewer_type = 'S'     ) M     ON A.student_exercises_id = M.student_exercises_id     INNER JOIN shangshufang_customer.university_student_ability_analysis N     ON A.student_id = N.student_id     WHERE a.technology_id = ?     AND a.student_university_code = ?     AND a.student_school_id = ?     AND a.student_id = ?            ORDER BY A.course_class, A.knowledge_id, A.exercises_document_id, A.update_time DESC     LIMIT ?, ?;
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-570, 10' at line 128
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-570, 10' at line 128
[2020-06-06 22:42:19,186][http-nio-8081-exec-10][ERROR][com.shangshufang.apiservice.service.impl.UniversityStudentExercisesServiceImpl:101] org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-530, 10' at line 128
### The error may exist in file [/Users/zhangqiang/Documents/04-Project/ShangShuFang/SourceCode/shangshufang.apiservice/target/classes/mapping/UniversityStudentExercisesMapping.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT       A.student_exercises_id,       A.student_university_code,       B.university_name AS student_university_name,       A.student_school_id,       C.school_name AS student_school_name,       A.student_id,       F.full_name AS student_name,       F.photo AS student_photo,       F.cellphone,       F.enrollment_year,       N.ability_level,       N.position_site,       A.course_university_code,       D.university_name AS course_university_name,       A.course_school_id,       E.school_name AS course_school_name,       A.course_id,       G.course_name,       A.course_class,       A.technology_id,       I.technology_name,       A.learning_phase_id,       J.learning_phase_name,       A.knowledge_id,       K.knowledge_name,       A.exercises_document_id,       H.document_url AS exercises_document_url,       H.answer_url AS exercises_answer_url,       A.source_code_git_url,       A.data_status,       CASE WHEN A.data_status = 'P' THEN '未练习'       WHEN A.data_status = 'W' THEN '待批改'       WHEN A.data_status = 'R' THEN '待修改'       WHEN A.data_status = 'S' THEN '已通过'       ELSE '未知数据状态'       END AS data_status_text,       M.reviewer_id,       M.reviewer_name_teacher,       M.reviewer_name_student,       M.reviewer_type,       DATE_FORMAT(M.update_time, '%Y-%m-%d %H:%i:%s') AS review_time,       DATE_FORMAT(A.create_time, '%Y-%m-%d %H:%i:%s') AS create_time,       DATE_FORMAT(A.update_time, '%Y-%m-%d %H:%i:%s') AS update_time     FROM shangshufang_customer.university_student_exercises A     INNER JOIN shangshufang_customer.university B     ON A.student_university_code = B.university_code     INNER JOIN shangshufang_customer.school C     ON A.student_university_code = C.university_code     AND A.student_school_id = C.school_id     INNER JOIN shangshufang_customer.university D     ON A.course_university_code = D.university_code     INNER JOIN shangshufang_customer.school E     ON A.course_university_code = E.university_code     AND A.course_school_id = E.school_id     INNER JOIN shangshufang_customer.university_student F     ON A.student_id = F.student_id     INNER JOIN shangshufang_customer.course G     ON A.course_university_code = G.university_code     AND A.course_school_id = G.school_id     AND A.course_id = G.course_id     INNER JOIN shangshufang_base.technology_knowledge_exercises H     ON A.technology_id = H.technology_id     AND A.knowledge_id = H.knowledge_id     AND A.exercises_document_id = H.exercises_id     INNER JOIN shangshufang_base.technology I     ON A.technology_id = I.technology_id     INNER JOIN shangshufang_base.learning_phase J     ON A.learning_phase_id = J.learning_phase_id     INNER JOIN shangshufang_base.technology_knowledge K     ON A.technology_id = K.technology_id     AND A.learning_phase_id = K.learning_phase_id     AND A.knowledge_id = K.knowledge_id     AND K.data_status = 'A'     LEFT JOIN     (     SELECT     C.student_exercises_id,     C.reviewer_id,     C.reviewer_type,     D.full_name AS reviewer_name_teacher,     E.full_name AS reviewer_name_student,     C.update_time     FROM     (     SELECT     A.review_id,     A.student_exercises_id,     A.update_time,     B.reviewer_id,     B.reviewer_university_code,     B.reviewer_school_id,     B.reviewer_type     FROM     (     SELECT     student_exercises_id,     MAX(review_id) AS review_id,     MAX(update_time) AS update_time     FROM shangshufang_customer.university_student_exercises_review     GROUP BY student_exercises_id     ) A     INNER JOIN shangshufang_customer.university_student_exercises_review B     ON A.review_id = B.review_id     AND A.student_exercises_id = B.student_exercises_id     ) C     LEFT JOIN shangshufang_customer.university_customer D     ON C.reviewer_university_code = D.university_code     AND C.reviewer_school_id = D.school_id     AND C.reviewer_id = D.customer_id     AND C.reviewer_type = 'T'     LEFT JOIN shangshufang_customer.university_student E     ON C.reviewer_university_code = E.university_code     AND C.reviewer_school_id = E.school_id     AND C.reviewer_id = E.student_id     AND C.reviewer_type = 'S'     ) M     ON A.student_exercises_id = M.student_exercises_id     INNER JOIN shangshufang_customer.university_student_ability_analysis N     ON A.student_id = N.student_id     WHERE a.technology_id = ?     AND a.student_university_code = ?     AND a.student_school_id = ?     AND a.student_id = ?            ORDER BY A.course_class, A.knowledge_id, A.exercises_document_id, A.update_time DESC     LIMIT ?, ?;
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-530, 10' at line 128
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-530, 10' at line 128
[2020-06-06 22:42:19,186][http-nio-8081-exec-8][ERROR][com.shangshufang.apiservice.service.impl.UniversityStudentExercisesServiceImpl:101] org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-560, 10' at line 128
### The error may exist in file [/Users/zhangqiang/Documents/04-Project/ShangShuFang/SourceCode/shangshufang.apiservice/target/classes/mapping/UniversityStudentExercisesMapping.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT       A.student_exercises_id,       A.student_university_code,       B.university_name AS student_university_name,       A.student_school_id,       C.school_name AS student_school_name,       A.student_id,       F.full_name AS student_name,       F.photo AS student_photo,       F.cellphone,       F.enrollment_year,       N.ability_level,       N.position_site,       A.course_university_code,       D.university_name AS course_university_name,       A.course_school_id,       E.school_name AS course_school_name,       A.course_id,       G.course_name,       A.course_class,       A.technology_id,       I.technology_name,       A.learning_phase_id,       J.learning_phase_name,       A.knowledge_id,       K.knowledge_name,       A.exercises_document_id,       H.document_url AS exercises_document_url,       H.answer_url AS exercises_answer_url,       A.source_code_git_url,       A.data_status,       CASE WHEN A.data_status = 'P' THEN '未练习'       WHEN A.data_status = 'W' THEN '待批改'       WHEN A.data_status = 'R' THEN '待修改'       WHEN A.data_status = 'S' THEN '已通过'       ELSE '未知数据状态'       END AS data_status_text,       M.reviewer_id,       M.reviewer_name_teacher,       M.reviewer_name_student,       M.reviewer_type,       DATE_FORMAT(M.update_time, '%Y-%m-%d %H:%i:%s') AS review_time,       DATE_FORMAT(A.create_time, '%Y-%m-%d %H:%i:%s') AS create_time,       DATE_FORMAT(A.update_time, '%Y-%m-%d %H:%i:%s') AS update_time     FROM shangshufang_customer.university_student_exercises A     INNER JOIN shangshufang_customer.university B     ON A.student_university_code = B.university_code     INNER JOIN shangshufang_customer.school C     ON A.student_university_code = C.university_code     AND A.student_school_id = C.school_id     INNER JOIN shangshufang_customer.university D     ON A.course_university_code = D.university_code     INNER JOIN shangshufang_customer.school E     ON A.course_university_code = E.university_code     AND A.course_school_id = E.school_id     INNER JOIN shangshufang_customer.university_student F     ON A.student_id = F.student_id     INNER JOIN shangshufang_customer.course G     ON A.course_university_code = G.university_code     AND A.course_school_id = G.school_id     AND A.course_id = G.course_id     INNER JOIN shangshufang_base.technology_knowledge_exercises H     ON A.technology_id = H.technology_id     AND A.knowledge_id = H.knowledge_id     AND A.exercises_document_id = H.exercises_id     INNER JOIN shangshufang_base.technology I     ON A.technology_id = I.technology_id     INNER JOIN shangshufang_base.learning_phase J     ON A.learning_phase_id = J.learning_phase_id     INNER JOIN shangshufang_base.technology_knowledge K     ON A.technology_id = K.technology_id     AND A.learning_phase_id = K.learning_phase_id     AND A.knowledge_id = K.knowledge_id     AND K.data_status = 'A'     LEFT JOIN     (     SELECT     C.student_exercises_id,     C.reviewer_id,     C.reviewer_type,     D.full_name AS reviewer_name_teacher,     E.full_name AS reviewer_name_student,     C.update_time     FROM     (     SELECT     A.review_id,     A.student_exercises_id,     A.update_time,     B.reviewer_id,     B.reviewer_university_code,     B.reviewer_school_id,     B.reviewer_type     FROM     (     SELECT     student_exercises_id,     MAX(review_id) AS review_id,     MAX(update_time) AS update_time     FROM shangshufang_customer.university_student_exercises_review     GROUP BY student_exercises_id     ) A     INNER JOIN shangshufang_customer.university_student_exercises_review B     ON A.review_id = B.review_id     AND A.student_exercises_id = B.student_exercises_id     ) C     LEFT JOIN shangshufang_customer.university_customer D     ON C.reviewer_university_code = D.university_code     AND C.reviewer_school_id = D.school_id     AND C.reviewer_id = D.customer_id     AND C.reviewer_type = 'T'     LEFT JOIN shangshufang_customer.university_student E     ON C.reviewer_university_code = E.university_code     AND C.reviewer_school_id = E.school_id     AND C.reviewer_id = E.student_id     AND C.reviewer_type = 'S'     ) M     ON A.student_exercises_id = M.student_exercises_id     INNER JOIN shangshufang_customer.university_student_ability_analysis N     ON A.student_id = N.student_id     WHERE a.technology_id = ?     AND a.student_university_code = ?     AND a.student_school_id = ?     AND a.student_id = ?            ORDER BY A.course_class, A.knowledge_id, A.exercises_document_id, A.update_time DESC     LIMIT ?, ?;
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-560, 10' at line 128
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-560, 10' at line 128
[2020-06-06 22:42:19,186][http-nio-8081-exec-7][ERROR][com.shangshufang.apiservice.service.impl.UniversityStudentExercisesServiceImpl:101] org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-550, 10' at line 128
### The error may exist in file [/Users/zhangqiang/Documents/04-Project/ShangShuFang/SourceCode/shangshufang.apiservice/target/classes/mapping/UniversityStudentExercisesMapping.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT       A.student_exercises_id,       A.student_university_code,       B.university_name AS student_university_name,       A.student_school_id,       C.school_name AS student_school_name,       A.student_id,       F.full_name AS student_name,       F.photo AS student_photo,       F.cellphone,       F.enrollment_year,       N.ability_level,       N.position_site,       A.course_university_code,       D.university_name AS course_university_name,       A.course_school_id,       E.school_name AS course_school_name,       A.course_id,       G.course_name,       A.course_class,       A.technology_id,       I.technology_name,       A.learning_phase_id,       J.learning_phase_name,       A.knowledge_id,       K.knowledge_name,       A.exercises_document_id,       H.document_url AS exercises_document_url,       H.answer_url AS exercises_answer_url,       A.source_code_git_url,       A.data_status,       CASE WHEN A.data_status = 'P' THEN '未练习'       WHEN A.data_status = 'W' THEN '待批改'       WHEN A.data_status = 'R' THEN '待修改'       WHEN A.data_status = 'S' THEN '已通过'       ELSE '未知数据状态'       END AS data_status_text,       M.reviewer_id,       M.reviewer_name_teacher,       M.reviewer_name_student,       M.reviewer_type,       DATE_FORMAT(M.update_time, '%Y-%m-%d %H:%i:%s') AS review_time,       DATE_FORMAT(A.create_time, '%Y-%m-%d %H:%i:%s') AS create_time,       DATE_FORMAT(A.update_time, '%Y-%m-%d %H:%i:%s') AS update_time     FROM shangshufang_customer.university_student_exercises A     INNER JOIN shangshufang_customer.university B     ON A.student_university_code = B.university_code     INNER JOIN shangshufang_customer.school C     ON A.student_university_code = C.university_code     AND A.student_school_id = C.school_id     INNER JOIN shangshufang_customer.university D     ON A.course_university_code = D.university_code     INNER JOIN shangshufang_customer.school E     ON A.course_university_code = E.university_code     AND A.course_school_id = E.school_id     INNER JOIN shangshufang_customer.university_student F     ON A.student_id = F.student_id     INNER JOIN shangshufang_customer.course G     ON A.course_university_code = G.university_code     AND A.course_school_id = G.school_id     AND A.course_id = G.course_id     INNER JOIN shangshufang_base.technology_knowledge_exercises H     ON A.technology_id = H.technology_id     AND A.knowledge_id = H.knowledge_id     AND A.exercises_document_id = H.exercises_id     INNER JOIN shangshufang_base.technology I     ON A.technology_id = I.technology_id     INNER JOIN shangshufang_base.learning_phase J     ON A.learning_phase_id = J.learning_phase_id     INNER JOIN shangshufang_base.technology_knowledge K     ON A.technology_id = K.technology_id     AND A.learning_phase_id = K.learning_phase_id     AND A.knowledge_id = K.knowledge_id     AND K.data_status = 'A'     LEFT JOIN     (     SELECT     C.student_exercises_id,     C.reviewer_id,     C.reviewer_type,     D.full_name AS reviewer_name_teacher,     E.full_name AS reviewer_name_student,     C.update_time     FROM     (     SELECT     A.review_id,     A.student_exercises_id,     A.update_time,     B.reviewer_id,     B.reviewer_university_code,     B.reviewer_school_id,     B.reviewer_type     FROM     (     SELECT     student_exercises_id,     MAX(review_id) AS review_id,     MAX(update_time) AS update_time     FROM shangshufang_customer.university_student_exercises_review     GROUP BY student_exercises_id     ) A     INNER JOIN shangshufang_customer.university_student_exercises_review B     ON A.review_id = B.review_id     AND A.student_exercises_id = B.student_exercises_id     ) C     LEFT JOIN shangshufang_customer.university_customer D     ON C.reviewer_university_code = D.university_code     AND C.reviewer_school_id = D.school_id     AND C.reviewer_id = D.customer_id     AND C.reviewer_type = 'T'     LEFT JOIN shangshufang_customer.university_student E     ON C.reviewer_university_code = E.university_code     AND C.reviewer_school_id = E.school_id     AND C.reviewer_id = E.student_id     AND C.reviewer_type = 'S'     ) M     ON A.student_exercises_id = M.student_exercises_id     INNER JOIN shangshufang_customer.university_student_ability_analysis N     ON A.student_id = N.student_id     WHERE a.technology_id = ?     AND a.student_university_code = ?     AND a.student_school_id = ?     AND a.student_id = ?            ORDER BY A.course_class, A.knowledge_id, A.exercises_document_id, A.update_time DESC     LIMIT ?, ?;
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-550, 10' at line 128
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-550, 10' at line 128
[2020-06-06 22:42:19,186][http-nio-8081-exec-6][ERROR][com.shangshufang.apiservice.service.impl.UniversityStudentExercisesServiceImpl:101] org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-520, 10' at line 128
### The error may exist in file [/Users/zhangqiang/Documents/04-Project/ShangShuFang/SourceCode/shangshufang.apiservice/target/classes/mapping/UniversityStudentExercisesMapping.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT       A.student_exercises_id,       A.student_university_code,       B.university_name AS student_university_name,       A.student_school_id,       C.school_name AS student_school_name,       A.student_id,       F.full_name AS student_name,       F.photo AS student_photo,       F.cellphone,       F.enrollment_year,       N.ability_level,       N.position_site,       A.course_university_code,       D.university_name AS course_university_name,       A.course_school_id,       E.school_name AS course_school_name,       A.course_id,       G.course_name,       A.course_class,       A.technology_id,       I.technology_name,       A.learning_phase_id,       J.learning_phase_name,       A.knowledge_id,       K.knowledge_name,       A.exercises_document_id,       H.document_url AS exercises_document_url,       H.answer_url AS exercises_answer_url,       A.source_code_git_url,       A.data_status,       CASE WHEN A.data_status = 'P' THEN '未练习'       WHEN A.data_status = 'W' THEN '待批改'       WHEN A.data_status = 'R' THEN '待修改'       WHEN A.data_status = 'S' THEN '已通过'       ELSE '未知数据状态'       END AS data_status_text,       M.reviewer_id,       M.reviewer_name_teacher,       M.reviewer_name_student,       M.reviewer_type,       DATE_FORMAT(M.update_time, '%Y-%m-%d %H:%i:%s') AS review_time,       DATE_FORMAT(A.create_time, '%Y-%m-%d %H:%i:%s') AS create_time,       DATE_FORMAT(A.update_time, '%Y-%m-%d %H:%i:%s') AS update_time     FROM shangshufang_customer.university_student_exercises A     INNER JOIN shangshufang_customer.university B     ON A.student_university_code = B.university_code     INNER JOIN shangshufang_customer.school C     ON A.student_university_code = C.university_code     AND A.student_school_id = C.school_id     INNER JOIN shangshufang_customer.university D     ON A.course_university_code = D.university_code     INNER JOIN shangshufang_customer.school E     ON A.course_university_code = E.university_code     AND A.course_school_id = E.school_id     INNER JOIN shangshufang_customer.university_student F     ON A.student_id = F.student_id     INNER JOIN shangshufang_customer.course G     ON A.course_university_code = G.university_code     AND A.course_school_id = G.school_id     AND A.course_id = G.course_id     INNER JOIN shangshufang_base.technology_knowledge_exercises H     ON A.technology_id = H.technology_id     AND A.knowledge_id = H.knowledge_id     AND A.exercises_document_id = H.exercises_id     INNER JOIN shangshufang_base.technology I     ON A.technology_id = I.technology_id     INNER JOIN shangshufang_base.learning_phase J     ON A.learning_phase_id = J.learning_phase_id     INNER JOIN shangshufang_base.technology_knowledge K     ON A.technology_id = K.technology_id     AND A.learning_phase_id = K.learning_phase_id     AND A.knowledge_id = K.knowledge_id     AND K.data_status = 'A'     LEFT JOIN     (     SELECT     C.student_exercises_id,     C.reviewer_id,     C.reviewer_type,     D.full_name AS reviewer_name_teacher,     E.full_name AS reviewer_name_student,     C.update_time     FROM     (     SELECT     A.review_id,     A.student_exercises_id,     A.update_time,     B.reviewer_id,     B.reviewer_university_code,     B.reviewer_school_id,     B.reviewer_type     FROM     (     SELECT     student_exercises_id,     MAX(review_id) AS review_id,     MAX(update_time) AS update_time     FROM shangshufang_customer.university_student_exercises_review     GROUP BY student_exercises_id     ) A     INNER JOIN shangshufang_customer.university_student_exercises_review B     ON A.review_id = B.review_id     AND A.student_exercises_id = B.student_exercises_id     ) C     LEFT JOIN shangshufang_customer.university_customer D     ON C.reviewer_university_code = D.university_code     AND C.reviewer_school_id = D.school_id     AND C.reviewer_id = D.customer_id     AND C.reviewer_type = 'T'     LEFT JOIN shangshufang_customer.university_student E     ON C.reviewer_university_code = E.university_code     AND C.reviewer_school_id = E.school_id     AND C.reviewer_id = E.student_id     AND C.reviewer_type = 'S'     ) M     ON A.student_exercises_id = M.student_exercises_id     INNER JOIN shangshufang_customer.university_student_ability_analysis N     ON A.student_id = N.student_id     WHERE a.technology_id = ?     AND a.student_university_code = ?     AND a.student_school_id = ?     AND a.student_id = ?            ORDER BY A.course_class, A.knowledge_id, A.exercises_document_id, A.update_time DESC     LIMIT ?, ?;
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-520, 10' at line 128
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-520, 10' at line 128
[2020-06-06 22:42:19,200][http-nio-8081-exec-2][ERROR][com.shangshufang.apiservice.service.impl.UniversityStudentExercisesServiceImpl:101] org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-600, 10' at line 128
### The error may exist in file [/Users/zhangqiang/Documents/04-Project/ShangShuFang/SourceCode/shangshufang.apiservice/target/classes/mapping/UniversityStudentExercisesMapping.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT       A.student_exercises_id,       A.student_university_code,       B.university_name AS student_university_name,       A.student_school_id,       C.school_name AS student_school_name,       A.student_id,       F.full_name AS student_name,       F.photo AS student_photo,       F.cellphone,       F.enrollment_year,       N.ability_level,       N.position_site,       A.course_university_code,       D.university_name AS course_university_name,       A.course_school_id,       E.school_name AS course_school_name,       A.course_id,       G.course_name,       A.course_class,       A.technology_id,       I.technology_name,       A.learning_phase_id,       J.learning_phase_name,       A.knowledge_id,       K.knowledge_name,       A.exercises_document_id,       H.document_url AS exercises_document_url,       H.answer_url AS exercises_answer_url,       A.source_code_git_url,       A.data_status,       CASE WHEN A.data_status = 'P' THEN '未练习'       WHEN A.data_status = 'W' THEN '待批改'       WHEN A.data_status = 'R' THEN '待修改'       WHEN A.data_status = 'S' THEN '已通过'       ELSE '未知数据状态'       END AS data_status_text,       M.reviewer_id,       M.reviewer_name_teacher,       M.reviewer_name_student,       M.reviewer_type,       DATE_FORMAT(M.update_time, '%Y-%m-%d %H:%i:%s') AS review_time,       DATE_FORMAT(A.create_time, '%Y-%m-%d %H:%i:%s') AS create_time,       DATE_FORMAT(A.update_time, '%Y-%m-%d %H:%i:%s') AS update_time     FROM shangshufang_customer.university_student_exercises A     INNER JOIN shangshufang_customer.university B     ON A.student_university_code = B.university_code     INNER JOIN shangshufang_customer.school C     ON A.student_university_code = C.university_code     AND A.student_school_id = C.school_id     INNER JOIN shangshufang_customer.university D     ON A.course_university_code = D.university_code     INNER JOIN shangshufang_customer.school E     ON A.course_university_code = E.university_code     AND A.course_school_id = E.school_id     INNER JOIN shangshufang_customer.university_student F     ON A.student_id = F.student_id     INNER JOIN shangshufang_customer.course G     ON A.course_university_code = G.university_code     AND A.course_school_id = G.school_id     AND A.course_id = G.course_id     INNER JOIN shangshufang_base.technology_knowledge_exercises H     ON A.technology_id = H.technology_id     AND A.knowledge_id = H.knowledge_id     AND A.exercises_document_id = H.exercises_id     INNER JOIN shangshufang_base.technology I     ON A.technology_id = I.technology_id     INNER JOIN shangshufang_base.learning_phase J     ON A.learning_phase_id = J.learning_phase_id     INNER JOIN shangshufang_base.technology_knowledge K     ON A.technology_id = K.technology_id     AND A.learning_phase_id = K.learning_phase_id     AND A.knowledge_id = K.knowledge_id     AND K.data_status = 'A'     LEFT JOIN     (     SELECT     C.student_exercises_id,     C.reviewer_id,     C.reviewer_type,     D.full_name AS reviewer_name_teacher,     E.full_name AS reviewer_name_student,     C.update_time     FROM     (     SELECT     A.review_id,     A.student_exercises_id,     A.update_time,     B.reviewer_id,     B.reviewer_university_code,     B.reviewer_school_id,     B.reviewer_type     FROM     (     SELECT     student_exercises_id,     MAX(review_id) AS review_id,     MAX(update_time) AS update_time     FROM shangshufang_customer.university_student_exercises_review     GROUP BY student_exercises_id     ) A     INNER JOIN shangshufang_customer.university_student_exercises_review B     ON A.review_id = B.review_id     AND A.student_exercises_id = B.student_exercises_id     ) C     LEFT JOIN shangshufang_customer.university_customer D     ON C.reviewer_university_code = D.university_code     AND C.reviewer_school_id = D.school_id     AND C.reviewer_id = D.customer_id     AND C.reviewer_type = 'T'     LEFT JOIN shangshufang_customer.university_student E     ON C.reviewer_university_code = E.university_code     AND C.reviewer_school_id = E.school_id     AND C.reviewer_id = E.student_id     AND C.reviewer_type = 'S'     ) M     ON A.student_exercises_id = M.student_exercises_id     INNER JOIN shangshufang_customer.university_student_ability_analysis N     ON A.student_id = N.student_id     WHERE a.technology_id = ?     AND a.student_university_code = ?     AND a.student_school_id = ?     AND a.student_id = ?            ORDER BY A.course_class, A.knowledge_id, A.exercises_document_id, A.update_time DESC     LIMIT ?, ?;
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-600, 10' at line 128
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-600, 10' at line 128
[2020-06-06 22:42:19,200][http-nio-8081-exec-4][ERROR][com.shangshufang.apiservice.service.impl.UniversityStudentExercisesServiceImpl:101] org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-580, 10' at line 128
### The error may exist in file [/Users/zhangqiang/Documents/04-Project/ShangShuFang/SourceCode/shangshufang.apiservice/target/classes/mapping/UniversityStudentExercisesMapping.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT       A.student_exercises_id,       A.student_university_code,       B.university_name AS student_university_name,       A.student_school_id,       C.school_name AS student_school_name,       A.student_id,       F.full_name AS student_name,       F.photo AS student_photo,       F.cellphone,       F.enrollment_year,       N.ability_level,       N.position_site,       A.course_university_code,       D.university_name AS course_university_name,       A.course_school_id,       E.school_name AS course_school_name,       A.course_id,       G.course_name,       A.course_class,       A.technology_id,       I.technology_name,       A.learning_phase_id,       J.learning_phase_name,       A.knowledge_id,       K.knowledge_name,       A.exercises_document_id,       H.document_url AS exercises_document_url,       H.answer_url AS exercises_answer_url,       A.source_code_git_url,       A.data_status,       CASE WHEN A.data_status = 'P' THEN '未练习'       WHEN A.data_status = 'W' THEN '待批改'       WHEN A.data_status = 'R' THEN '待修改'       WHEN A.data_status = 'S' THEN '已通过'       ELSE '未知数据状态'       END AS data_status_text,       M.reviewer_id,       M.reviewer_name_teacher,       M.reviewer_name_student,       M.reviewer_type,       DATE_FORMAT(M.update_time, '%Y-%m-%d %H:%i:%s') AS review_time,       DATE_FORMAT(A.create_time, '%Y-%m-%d %H:%i:%s') AS create_time,       DATE_FORMAT(A.update_time, '%Y-%m-%d %H:%i:%s') AS update_time     FROM shangshufang_customer.university_student_exercises A     INNER JOIN shangshufang_customer.university B     ON A.student_university_code = B.university_code     INNER JOIN shangshufang_customer.school C     ON A.student_university_code = C.university_code     AND A.student_school_id = C.school_id     INNER JOIN shangshufang_customer.university D     ON A.course_university_code = D.university_code     INNER JOIN shangshufang_customer.school E     ON A.course_university_code = E.university_code     AND A.course_school_id = E.school_id     INNER JOIN shangshufang_customer.university_student F     ON A.student_id = F.student_id     INNER JOIN shangshufang_customer.course G     ON A.course_university_code = G.university_code     AND A.course_school_id = G.school_id     AND A.course_id = G.course_id     INNER JOIN shangshufang_base.technology_knowledge_exercises H     ON A.technology_id = H.technology_id     AND A.knowledge_id = H.knowledge_id     AND A.exercises_document_id = H.exercises_id     INNER JOIN shangshufang_base.technology I     ON A.technology_id = I.technology_id     INNER JOIN shangshufang_base.learning_phase J     ON A.learning_phase_id = J.learning_phase_id     INNER JOIN shangshufang_base.technology_knowledge K     ON A.technology_id = K.technology_id     AND A.learning_phase_id = K.learning_phase_id     AND A.knowledge_id = K.knowledge_id     AND K.data_status = 'A'     LEFT JOIN     (     SELECT     C.student_exercises_id,     C.reviewer_id,     C.reviewer_type,     D.full_name AS reviewer_name_teacher,     E.full_name AS reviewer_name_student,     C.update_time     FROM     (     SELECT     A.review_id,     A.student_exercises_id,     A.update_time,     B.reviewer_id,     B.reviewer_university_code,     B.reviewer_school_id,     B.reviewer_type     FROM     (     SELECT     student_exercises_id,     MAX(review_id) AS review_id,     MAX(update_time) AS update_time     FROM shangshufang_customer.university_student_exercises_review     GROUP BY student_exercises_id     ) A     INNER JOIN shangshufang_customer.university_student_exercises_review B     ON A.review_id = B.review_id     AND A.student_exercises_id = B.student_exercises_id     ) C     LEFT JOIN shangshufang_customer.university_customer D     ON C.reviewer_university_code = D.university_code     AND C.reviewer_school_id = D.school_id     AND C.reviewer_id = D.customer_id     AND C.reviewer_type = 'T'     LEFT JOIN shangshufang_customer.university_student E     ON C.reviewer_university_code = E.university_code     AND C.reviewer_school_id = E.school_id     AND C.reviewer_id = E.student_id     AND C.reviewer_type = 'S'     ) M     ON A.student_exercises_id = M.student_exercises_id     INNER JOIN shangshufang_customer.university_student_ability_analysis N     ON A.student_id = N.student_id     WHERE a.technology_id = ?     AND a.student_university_code = ?     AND a.student_school_id = ?     AND a.student_id = ?            ORDER BY A.course_class, A.knowledge_id, A.exercises_document_id, A.update_time DESC     LIMIT ?, ?;
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-580, 10' at line 128
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-580, 10' at line 128
[2020-06-06 22:42:19,200][http-nio-8081-exec-5][ERROR][com.shangshufang.apiservice.service.impl.UniversityStudentExercisesServiceImpl:101] org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-610, 10' at line 128
### The error may exist in file [/Users/zhangqiang/Documents/04-Project/ShangShuFang/SourceCode/shangshufang.apiservice/target/classes/mapping/UniversityStudentExercisesMapping.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT       A.student_exercises_id,       A.student_university_code,       B.university_name AS student_university_name,       A.student_school_id,       C.school_name AS student_school_name,       A.student_id,       F.full_name AS student_name,       F.photo AS student_photo,       F.cellphone,       F.enrollment_year,       N.ability_level,       N.position_site,       A.course_university_code,       D.university_name AS course_university_name,       A.course_school_id,       E.school_name AS course_school_name,       A.course_id,       G.course_name,       A.course_class,       A.technology_id,       I.technology_name,       A.learning_phase_id,       J.learning_phase_name,       A.knowledge_id,       K.knowledge_name,       A.exercises_document_id,       H.document_url AS exercises_document_url,       H.answer_url AS exercises_answer_url,       A.source_code_git_url,       A.data_status,       CASE WHEN A.data_status = 'P' THEN '未练习'       WHEN A.data_status = 'W' THEN '待批改'       WHEN A.data_status = 'R' THEN '待修改'       WHEN A.data_status = 'S' THEN '已通过'       ELSE '未知数据状态'       END AS data_status_text,       M.reviewer_id,       M.reviewer_name_teacher,       M.reviewer_name_student,       M.reviewer_type,       DATE_FORMAT(M.update_time, '%Y-%m-%d %H:%i:%s') AS review_time,       DATE_FORMAT(A.create_time, '%Y-%m-%d %H:%i:%s') AS create_time,       DATE_FORMAT(A.update_time, '%Y-%m-%d %H:%i:%s') AS update_time     FROM shangshufang_customer.university_student_exercises A     INNER JOIN shangshufang_customer.university B     ON A.student_university_code = B.university_code     INNER JOIN shangshufang_customer.school C     ON A.student_university_code = C.university_code     AND A.student_school_id = C.school_id     INNER JOIN shangshufang_customer.university D     ON A.course_university_code = D.university_code     INNER JOIN shangshufang_customer.school E     ON A.course_university_code = E.university_code     AND A.course_school_id = E.school_id     INNER JOIN shangshufang_customer.university_student F     ON A.student_id = F.student_id     INNER JOIN shangshufang_customer.course G     ON A.course_university_code = G.university_code     AND A.course_school_id = G.school_id     AND A.course_id = G.course_id     INNER JOIN shangshufang_base.technology_knowledge_exercises H     ON A.technology_id = H.technology_id     AND A.knowledge_id = H.knowledge_id     AND A.exercises_document_id = H.exercises_id     INNER JOIN shangshufang_base.technology I     ON A.technology_id = I.technology_id     INNER JOIN shangshufang_base.learning_phase J     ON A.learning_phase_id = J.learning_phase_id     INNER JOIN shangshufang_base.technology_knowledge K     ON A.technology_id = K.technology_id     AND A.learning_phase_id = K.learning_phase_id     AND A.knowledge_id = K.knowledge_id     AND K.data_status = 'A'     LEFT JOIN     (     SELECT     C.student_exercises_id,     C.reviewer_id,     C.reviewer_type,     D.full_name AS reviewer_name_teacher,     E.full_name AS reviewer_name_student,     C.update_time     FROM     (     SELECT     A.review_id,     A.student_exercises_id,     A.update_time,     B.reviewer_id,     B.reviewer_university_code,     B.reviewer_school_id,     B.reviewer_type     FROM     (     SELECT     student_exercises_id,     MAX(review_id) AS review_id,     MAX(update_time) AS update_time     FROM shangshufang_customer.university_student_exercises_review     GROUP BY student_exercises_id     ) A     INNER JOIN shangshufang_customer.university_student_exercises_review B     ON A.review_id = B.review_id     AND A.student_exercises_id = B.student_exercises_id     ) C     LEFT JOIN shangshufang_customer.university_customer D     ON C.reviewer_university_code = D.university_code     AND C.reviewer_school_id = D.school_id     AND C.reviewer_id = D.customer_id     AND C.reviewer_type = 'T'     LEFT JOIN shangshufang_customer.university_student E     ON C.reviewer_university_code = E.university_code     AND C.reviewer_school_id = E.school_id     AND C.reviewer_id = E.student_id     AND C.reviewer_type = 'S'     ) M     ON A.student_exercises_id = M.student_exercises_id     INNER JOIN shangshufang_customer.university_student_ability_analysis N     ON A.student_id = N.student_id     WHERE a.technology_id = ?     AND a.student_university_code = ?     AND a.student_school_id = ?     AND a.student_id = ?            ORDER BY A.course_class, A.knowledge_id, A.exercises_document_id, A.update_time DESC     LIMIT ?, ?;
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-610, 10' at line 128
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-610, 10' at line 128
[2020-06-06 22:42:19,200][http-nio-8081-exec-1][ERROR][com.shangshufang.apiservice.service.impl.UniversityStudentExercisesServiceImpl:101] org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-590, 10' at line 128
### The error may exist in file [/Users/zhangqiang/Documents/04-Project/ShangShuFang/SourceCode/shangshufang.apiservice/target/classes/mapping/UniversityStudentExercisesMapping.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT       A.student_exercises_id,       A.student_university_code,       B.university_name AS student_university_name,       A.student_school_id,       C.school_name AS student_school_name,       A.student_id,       F.full_name AS student_name,       F.photo AS student_photo,       F.cellphone,       F.enrollment_year,       N.ability_level,       N.position_site,       A.course_university_code,       D.university_name AS course_university_name,       A.course_school_id,       E.school_name AS course_school_name,       A.course_id,       G.course_name,       A.course_class,       A.technology_id,       I.technology_name,       A.learning_phase_id,       J.learning_phase_name,       A.knowledge_id,       K.knowledge_name,       A.exercises_document_id,       H.document_url AS exercises_document_url,       H.answer_url AS exercises_answer_url,       A.source_code_git_url,       A.data_status,       CASE WHEN A.data_status = 'P' THEN '未练习'       WHEN A.data_status = 'W' THEN '待批改'       WHEN A.data_status = 'R' THEN '待修改'       WHEN A.data_status = 'S' THEN '已通过'       ELSE '未知数据状态'       END AS data_status_text,       M.reviewer_id,       M.reviewer_name_teacher,       M.reviewer_name_student,       M.reviewer_type,       DATE_FORMAT(M.update_time, '%Y-%m-%d %H:%i:%s') AS review_time,       DATE_FORMAT(A.create_time, '%Y-%m-%d %H:%i:%s') AS create_time,       DATE_FORMAT(A.update_time, '%Y-%m-%d %H:%i:%s') AS update_time     FROM shangshufang_customer.university_student_exercises A     INNER JOIN shangshufang_customer.university B     ON A.student_university_code = B.university_code     INNER JOIN shangshufang_customer.school C     ON A.student_university_code = C.university_code     AND A.student_school_id = C.school_id     INNER JOIN shangshufang_customer.university D     ON A.course_university_code = D.university_code     INNER JOIN shangshufang_customer.school E     ON A.course_university_code = E.university_code     AND A.course_school_id = E.school_id     INNER JOIN shangshufang_customer.university_student F     ON A.student_id = F.student_id     INNER JOIN shangshufang_customer.course G     ON A.course_university_code = G.university_code     AND A.course_school_id = G.school_id     AND A.course_id = G.course_id     INNER JOIN shangshufang_base.technology_knowledge_exercises H     ON A.technology_id = H.technology_id     AND A.knowledge_id = H.knowledge_id     AND A.exercises_document_id = H.exercises_id     INNER JOIN shangshufang_base.technology I     ON A.technology_id = I.technology_id     INNER JOIN shangshufang_base.learning_phase J     ON A.learning_phase_id = J.learning_phase_id     INNER JOIN shangshufang_base.technology_knowledge K     ON A.technology_id = K.technology_id     AND A.learning_phase_id = K.learning_phase_id     AND A.knowledge_id = K.knowledge_id     AND K.data_status = 'A'     LEFT JOIN     (     SELECT     C.student_exercises_id,     C.reviewer_id,     C.reviewer_type,     D.full_name AS reviewer_name_teacher,     E.full_name AS reviewer_name_student,     C.update_time     FROM     (     SELECT     A.review_id,     A.student_exercises_id,     A.update_time,     B.reviewer_id,     B.reviewer_university_code,     B.reviewer_school_id,     B.reviewer_type     FROM     (     SELECT     student_exercises_id,     MAX(review_id) AS review_id,     MAX(update_time) AS update_time     FROM shangshufang_customer.university_student_exercises_review     GROUP BY student_exercises_id     ) A     INNER JOIN shangshufang_customer.university_student_exercises_review B     ON A.review_id = B.review_id     AND A.student_exercises_id = B.student_exercises_id     ) C     LEFT JOIN shangshufang_customer.university_customer D     ON C.reviewer_university_code = D.university_code     AND C.reviewer_school_id = D.school_id     AND C.reviewer_id = D.customer_id     AND C.reviewer_type = 'T'     LEFT JOIN shangshufang_customer.university_student E     ON C.reviewer_university_code = E.university_code     AND C.reviewer_school_id = E.school_id     AND C.reviewer_id = E.student_id     AND C.reviewer_type = 'S'     ) M     ON A.student_exercises_id = M.student_exercises_id     INNER JOIN shangshufang_customer.university_student_ability_analysis N     ON A.student_id = N.student_id     WHERE a.technology_id = ?     AND a.student_university_code = ?     AND a.student_school_id = ?     AND a.student_id = ?            ORDER BY A.course_class, A.knowledge_id, A.exercises_document_id, A.update_time DESC     LIMIT ?, ?;
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-590, 10' at line 128
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-590, 10' at line 128
[2020-06-06 22:43:55,164][http-nio-8081-exec-8][ERROR][com.shangshufang.apiservice.service.impl.UniversityStudentExercisesServiceImpl:101] org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-10, 10' at line 128
### The error may exist in file [/Users/zhangqiang/Documents/04-Project/ShangShuFang/SourceCode/shangshufang.apiservice/target/classes/mapping/UniversityStudentExercisesMapping.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT       A.student_exercises_id,       A.student_university_code,       B.university_name AS student_university_name,       A.student_school_id,       C.school_name AS student_school_name,       A.student_id,       F.full_name AS student_name,       F.photo AS student_photo,       F.cellphone,       F.enrollment_year,       N.ability_level,       N.position_site,       A.course_university_code,       D.university_name AS course_university_name,       A.course_school_id,       E.school_name AS course_school_name,       A.course_id,       G.course_name,       A.course_class,       A.technology_id,       I.technology_name,       A.learning_phase_id,       J.learning_phase_name,       A.knowledge_id,       K.knowledge_name,       A.exercises_document_id,       H.document_url AS exercises_document_url,       H.answer_url AS exercises_answer_url,       A.source_code_git_url,       A.data_status,       CASE WHEN A.data_status = 'P' THEN '未练习'       WHEN A.data_status = 'W' THEN '待批改'       WHEN A.data_status = 'R' THEN '待修改'       WHEN A.data_status = 'S' THEN '已通过'       ELSE '未知数据状态'       END AS data_status_text,       M.reviewer_id,       M.reviewer_name_teacher,       M.reviewer_name_student,       M.reviewer_type,       DATE_FORMAT(M.update_time, '%Y-%m-%d %H:%i:%s') AS review_time,       DATE_FORMAT(A.create_time, '%Y-%m-%d %H:%i:%s') AS create_time,       DATE_FORMAT(A.update_time, '%Y-%m-%d %H:%i:%s') AS update_time     FROM shangshufang_customer.university_student_exercises A     INNER JOIN shangshufang_customer.university B     ON A.student_university_code = B.university_code     INNER JOIN shangshufang_customer.school C     ON A.student_university_code = C.university_code     AND A.student_school_id = C.school_id     INNER JOIN shangshufang_customer.university D     ON A.course_university_code = D.university_code     INNER JOIN shangshufang_customer.school E     ON A.course_university_code = E.university_code     AND A.course_school_id = E.school_id     INNER JOIN shangshufang_customer.university_student F     ON A.student_id = F.student_id     INNER JOIN shangshufang_customer.course G     ON A.course_university_code = G.university_code     AND A.course_school_id = G.school_id     AND A.course_id = G.course_id     INNER JOIN shangshufang_base.technology_knowledge_exercises H     ON A.technology_id = H.technology_id     AND A.knowledge_id = H.knowledge_id     AND A.exercises_document_id = H.exercises_id     INNER JOIN shangshufang_base.technology I     ON A.technology_id = I.technology_id     INNER JOIN shangshufang_base.learning_phase J     ON A.learning_phase_id = J.learning_phase_id     INNER JOIN shangshufang_base.technology_knowledge K     ON A.technology_id = K.technology_id     AND A.learning_phase_id = K.learning_phase_id     AND A.knowledge_id = K.knowledge_id     AND K.data_status = 'A'     LEFT JOIN     (     SELECT     C.student_exercises_id,     C.reviewer_id,     C.reviewer_type,     D.full_name AS reviewer_name_teacher,     E.full_name AS reviewer_name_student,     C.update_time     FROM     (     SELECT     A.review_id,     A.student_exercises_id,     A.update_time,     B.reviewer_id,     B.reviewer_university_code,     B.reviewer_school_id,     B.reviewer_type     FROM     (     SELECT     student_exercises_id,     MAX(review_id) AS review_id,     MAX(update_time) AS update_time     FROM shangshufang_customer.university_student_exercises_review     GROUP BY student_exercises_id     ) A     INNER JOIN shangshufang_customer.university_student_exercises_review B     ON A.review_id = B.review_id     AND A.student_exercises_id = B.student_exercises_id     ) C     LEFT JOIN shangshufang_customer.university_customer D     ON C.reviewer_university_code = D.university_code     AND C.reviewer_school_id = D.school_id     AND C.reviewer_id = D.customer_id     AND C.reviewer_type = 'T'     LEFT JOIN shangshufang_customer.university_student E     ON C.reviewer_university_code = E.university_code     AND C.reviewer_school_id = E.school_id     AND C.reviewer_id = E.student_id     AND C.reviewer_type = 'S'     ) M     ON A.student_exercises_id = M.student_exercises_id     INNER JOIN shangshufang_customer.university_student_ability_analysis N     ON A.student_id = N.student_id     WHERE a.technology_id = ?     AND a.student_university_code = ?     AND a.student_school_id = ?     AND a.student_id = ?            ORDER BY A.course_class, A.knowledge_id, A.exercises_document_id, A.update_time DESC     LIMIT ?, ?;
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-10, 10' at line 128
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-10, 10' at line 128
[2020-06-06 22:52:27,930][http-nio-8081-exec-2][ERROR][com.shangshufang.apiservice.service.impl.UniversityStudentExercisesServiceImpl:101] org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-10, 10' at line 128
### The error may exist in file [/Users/zhangqiang/Documents/04-Project/ShangShuFang/SourceCode/shangshufang.apiservice/target/classes/mapping/UniversityStudentExercisesMapping.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT       A.student_exercises_id,       A.student_university_code,       B.university_name AS student_university_name,       A.student_school_id,       C.school_name AS student_school_name,       A.student_id,       F.full_name AS student_name,       F.photo AS student_photo,       F.cellphone,       F.enrollment_year,       N.ability_level,       N.position_site,       A.course_university_code,       D.university_name AS course_university_name,       A.course_school_id,       E.school_name AS course_school_name,       A.course_id,       G.course_name,       A.course_class,       A.technology_id,       I.technology_name,       A.learning_phase_id,       J.learning_phase_name,       A.knowledge_id,       K.knowledge_name,       A.exercises_document_id,       H.document_url AS exercises_document_url,       H.answer_url AS exercises_answer_url,       A.source_code_git_url,       A.data_status,       CASE WHEN A.data_status = 'P' THEN '未练习'       WHEN A.data_status = 'W' THEN '待批改'       WHEN A.data_status = 'R' THEN '待修改'       WHEN A.data_status = 'S' THEN '已通过'       ELSE '未知数据状态'       END AS data_status_text,       M.reviewer_id,       M.reviewer_name_teacher,       M.reviewer_name_student,       M.reviewer_type,       DATE_FORMAT(M.update_time, '%Y-%m-%d %H:%i:%s') AS review_time,       DATE_FORMAT(A.create_time, '%Y-%m-%d %H:%i:%s') AS create_time,       DATE_FORMAT(A.update_time, '%Y-%m-%d %H:%i:%s') AS update_time     FROM shangshufang_customer.university_student_exercises A     INNER JOIN shangshufang_customer.university B     ON A.student_university_code = B.university_code     INNER JOIN shangshufang_customer.school C     ON A.student_university_code = C.university_code     AND A.student_school_id = C.school_id     INNER JOIN shangshufang_customer.university D     ON A.course_university_code = D.university_code     INNER JOIN shangshufang_customer.school E     ON A.course_university_code = E.university_code     AND A.course_school_id = E.school_id     INNER JOIN shangshufang_customer.university_student F     ON A.student_id = F.student_id     INNER JOIN shangshufang_customer.course G     ON A.course_university_code = G.university_code     AND A.course_school_id = G.school_id     AND A.course_id = G.course_id     INNER JOIN shangshufang_base.technology_knowledge_exercises H     ON A.technology_id = H.technology_id     AND A.knowledge_id = H.knowledge_id     AND A.exercises_document_id = H.exercises_id     INNER JOIN shangshufang_base.technology I     ON A.technology_id = I.technology_id     INNER JOIN shangshufang_base.learning_phase J     ON A.learning_phase_id = J.learning_phase_id     INNER JOIN shangshufang_base.technology_knowledge K     ON A.technology_id = K.technology_id     AND A.learning_phase_id = K.learning_phase_id     AND A.knowledge_id = K.knowledge_id     AND K.data_status = 'A'     LEFT JOIN     (     SELECT     C.student_exercises_id,     C.reviewer_id,     C.reviewer_type,     D.full_name AS reviewer_name_teacher,     E.full_name AS reviewer_name_student,     C.update_time     FROM     (     SELECT     A.review_id,     A.student_exercises_id,     A.update_time,     B.reviewer_id,     B.reviewer_university_code,     B.reviewer_school_id,     B.reviewer_type     FROM     (     SELECT     student_exercises_id,     MAX(review_id) AS review_id,     MAX(update_time) AS update_time     FROM shangshufang_customer.university_student_exercises_review     GROUP BY student_exercises_id     ) A     INNER JOIN shangshufang_customer.university_student_exercises_review B     ON A.review_id = B.review_id     AND A.student_exercises_id = B.student_exercises_id     ) C     LEFT JOIN shangshufang_customer.university_customer D     ON C.reviewer_university_code = D.university_code     AND C.reviewer_school_id = D.school_id     AND C.reviewer_id = D.customer_id     AND C.reviewer_type = 'T'     LEFT JOIN shangshufang_customer.university_student E     ON C.reviewer_university_code = E.university_code     AND C.reviewer_school_id = E.school_id     AND C.reviewer_id = E.student_id     AND C.reviewer_type = 'S'     ) M     ON A.student_exercises_id = M.student_exercises_id     INNER JOIN shangshufang_customer.university_student_ability_analysis N     ON A.student_id = N.student_id     WHERE a.technology_id = ?     AND a.student_university_code = ?     AND a.student_school_id = ?     AND a.student_id = ?            ORDER BY A.course_class, A.knowledge_id, A.exercises_document_id, A.update_time DESC     LIMIT ?, ?;
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-10, 10' at line 128
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-10, 10' at line 128
[2020-06-06 22:52:30,448][http-nio-8081-exec-7][ERROR][com.shangshufang.apiservice.service.impl.UniversityStudentExercisesServiceImpl:101] org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-10, 10' at line 128
### The error may exist in file [/Users/zhangqiang/Documents/04-Project/ShangShuFang/SourceCode/shangshufang.apiservice/target/classes/mapping/UniversityStudentExercisesMapping.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT       A.student_exercises_id,       A.student_university_code,       B.university_name AS student_university_name,       A.student_school_id,       C.school_name AS student_school_name,       A.student_id,       F.full_name AS student_name,       F.photo AS student_photo,       F.cellphone,       F.enrollment_year,       N.ability_level,       N.position_site,       A.course_university_code,       D.university_name AS course_university_name,       A.course_school_id,       E.school_name AS course_school_name,       A.course_id,       G.course_name,       A.course_class,       A.technology_id,       I.technology_name,       A.learning_phase_id,       J.learning_phase_name,       A.knowledge_id,       K.knowledge_name,       A.exercises_document_id,       H.document_url AS exercises_document_url,       H.answer_url AS exercises_answer_url,       A.source_code_git_url,       A.data_status,       CASE WHEN A.data_status = 'P' THEN '未练习'       WHEN A.data_status = 'W' THEN '待批改'       WHEN A.data_status = 'R' THEN '待修改'       WHEN A.data_status = 'S' THEN '已通过'       ELSE '未知数据状态'       END AS data_status_text,       M.reviewer_id,       M.reviewer_name_teacher,       M.reviewer_name_student,       M.reviewer_type,       DATE_FORMAT(M.update_time, '%Y-%m-%d %H:%i:%s') AS review_time,       DATE_FORMAT(A.create_time, '%Y-%m-%d %H:%i:%s') AS create_time,       DATE_FORMAT(A.update_time, '%Y-%m-%d %H:%i:%s') AS update_time     FROM shangshufang_customer.university_student_exercises A     INNER JOIN shangshufang_customer.university B     ON A.student_university_code = B.university_code     INNER JOIN shangshufang_customer.school C     ON A.student_university_code = C.university_code     AND A.student_school_id = C.school_id     INNER JOIN shangshufang_customer.university D     ON A.course_university_code = D.university_code     INNER JOIN shangshufang_customer.school E     ON A.course_university_code = E.university_code     AND A.course_school_id = E.school_id     INNER JOIN shangshufang_customer.university_student F     ON A.student_id = F.student_id     INNER JOIN shangshufang_customer.course G     ON A.course_university_code = G.university_code     AND A.course_school_id = G.school_id     AND A.course_id = G.course_id     INNER JOIN shangshufang_base.technology_knowledge_exercises H     ON A.technology_id = H.technology_id     AND A.knowledge_id = H.knowledge_id     AND A.exercises_document_id = H.exercises_id     INNER JOIN shangshufang_base.technology I     ON A.technology_id = I.technology_id     INNER JOIN shangshufang_base.learning_phase J     ON A.learning_phase_id = J.learning_phase_id     INNER JOIN shangshufang_base.technology_knowledge K     ON A.technology_id = K.technology_id     AND A.learning_phase_id = K.learning_phase_id     AND A.knowledge_id = K.knowledge_id     AND K.data_status = 'A'     LEFT JOIN     (     SELECT     C.student_exercises_id,     C.reviewer_id,     C.reviewer_type,     D.full_name AS reviewer_name_teacher,     E.full_name AS reviewer_name_student,     C.update_time     FROM     (     SELECT     A.review_id,     A.student_exercises_id,     A.update_time,     B.reviewer_id,     B.reviewer_university_code,     B.reviewer_school_id,     B.reviewer_type     FROM     (     SELECT     student_exercises_id,     MAX(review_id) AS review_id,     MAX(update_time) AS update_time     FROM shangshufang_customer.university_student_exercises_review     GROUP BY student_exercises_id     ) A     INNER JOIN shangshufang_customer.university_student_exercises_review B     ON A.review_id = B.review_id     AND A.student_exercises_id = B.student_exercises_id     ) C     LEFT JOIN shangshufang_customer.university_customer D     ON C.reviewer_university_code = D.university_code     AND C.reviewer_school_id = D.school_id     AND C.reviewer_id = D.customer_id     AND C.reviewer_type = 'T'     LEFT JOIN shangshufang_customer.university_student E     ON C.reviewer_university_code = E.university_code     AND C.reviewer_school_id = E.school_id     AND C.reviewer_id = E.student_id     AND C.reviewer_type = 'S'     ) M     ON A.student_exercises_id = M.student_exercises_id     INNER JOIN shangshufang_customer.university_student_ability_analysis N     ON A.student_id = N.student_id     WHERE a.technology_id = ?     AND a.student_university_code = ?     AND a.student_school_id = ?     AND a.student_id = ?            ORDER BY A.course_class, A.knowledge_id, A.exercises_document_id, A.update_time DESC     LIMIT ?, ?;
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-10, 10' at line 128
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-10, 10' at line 128
[2020-06-06 22:52:30,454][http-nio-8081-exec-7][ERROR][com.shangshufang.apiservice.service.impl.UniversityStudentExercisesServiceImpl:101] org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-30, 10' at line 128
### The error may exist in file [/Users/zhangqiang/Documents/04-Project/ShangShuFang/SourceCode/shangshufang.apiservice/target/classes/mapping/UniversityStudentExercisesMapping.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT       A.student_exercises_id,       A.student_university_code,       B.university_name AS student_university_name,       A.student_school_id,       C.school_name AS student_school_name,       A.student_id,       F.full_name AS student_name,       F.photo AS student_photo,       F.cellphone,       F.enrollment_year,       N.ability_level,       N.position_site,       A.course_university_code,       D.university_name AS course_university_name,       A.course_school_id,       E.school_name AS course_school_name,       A.course_id,       G.course_name,       A.course_class,       A.technology_id,       I.technology_name,       A.learning_phase_id,       J.learning_phase_name,       A.knowledge_id,       K.knowledge_name,       A.exercises_document_id,       H.document_url AS exercises_document_url,       H.answer_url AS exercises_answer_url,       A.source_code_git_url,       A.data_status,       CASE WHEN A.data_status = 'P' THEN '未练习'       WHEN A.data_status = 'W' THEN '待批改'       WHEN A.data_status = 'R' THEN '待修改'       WHEN A.data_status = 'S' THEN '已通过'       ELSE '未知数据状态'       END AS data_status_text,       M.reviewer_id,       M.reviewer_name_teacher,       M.reviewer_name_student,       M.reviewer_type,       DATE_FORMAT(M.update_time, '%Y-%m-%d %H:%i:%s') AS review_time,       DATE_FORMAT(A.create_time, '%Y-%m-%d %H:%i:%s') AS create_time,       DATE_FORMAT(A.update_time, '%Y-%m-%d %H:%i:%s') AS update_time     FROM shangshufang_customer.university_student_exercises A     INNER JOIN shangshufang_customer.university B     ON A.student_university_code = B.university_code     INNER JOIN shangshufang_customer.school C     ON A.student_university_code = C.university_code     AND A.student_school_id = C.school_id     INNER JOIN shangshufang_customer.university D     ON A.course_university_code = D.university_code     INNER JOIN shangshufang_customer.school E     ON A.course_university_code = E.university_code     AND A.course_school_id = E.school_id     INNER JOIN shangshufang_customer.university_student F     ON A.student_id = F.student_id     INNER JOIN shangshufang_customer.course G     ON A.course_university_code = G.university_code     AND A.course_school_id = G.school_id     AND A.course_id = G.course_id     INNER JOIN shangshufang_base.technology_knowledge_exercises H     ON A.technology_id = H.technology_id     AND A.knowledge_id = H.knowledge_id     AND A.exercises_document_id = H.exercises_id     INNER JOIN shangshufang_base.technology I     ON A.technology_id = I.technology_id     INNER JOIN shangshufang_base.learning_phase J     ON A.learning_phase_id = J.learning_phase_id     INNER JOIN shangshufang_base.technology_knowledge K     ON A.technology_id = K.technology_id     AND A.learning_phase_id = K.learning_phase_id     AND A.knowledge_id = K.knowledge_id     AND K.data_status = 'A'     LEFT JOIN     (     SELECT     C.student_exercises_id,     C.reviewer_id,     C.reviewer_type,     D.full_name AS reviewer_name_teacher,     E.full_name AS reviewer_name_student,     C.update_time     FROM     (     SELECT     A.review_id,     A.student_exercises_id,     A.update_time,     B.reviewer_id,     B.reviewer_university_code,     B.reviewer_school_id,     B.reviewer_type     FROM     (     SELECT     student_exercises_id,     MAX(review_id) AS review_id,     MAX(update_time) AS update_time     FROM shangshufang_customer.university_student_exercises_review     GROUP BY student_exercises_id     ) A     INNER JOIN shangshufang_customer.university_student_exercises_review B     ON A.review_id = B.review_id     AND A.student_exercises_id = B.student_exercises_id     ) C     LEFT JOIN shangshufang_customer.university_customer D     ON C.reviewer_university_code = D.university_code     AND C.reviewer_school_id = D.school_id     AND C.reviewer_id = D.customer_id     AND C.reviewer_type = 'T'     LEFT JOIN shangshufang_customer.university_student E     ON C.reviewer_university_code = E.university_code     AND C.reviewer_school_id = E.school_id     AND C.reviewer_id = E.student_id     AND C.reviewer_type = 'S'     ) M     ON A.student_exercises_id = M.student_exercises_id     INNER JOIN shangshufang_customer.university_student_ability_analysis N     ON A.student_id = N.student_id     WHERE a.technology_id = ?     AND a.student_university_code = ?     AND a.student_school_id = ?     AND a.student_id = ?            ORDER BY A.course_class, A.knowledge_id, A.exercises_document_id, A.update_time DESC     LIMIT ?, ?;
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-30, 10' at line 128
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-30, 10' at line 128
[2020-06-06 22:52:30,454][http-nio-8081-exec-3][ERROR][com.shangshufang.apiservice.service.impl.UniversityStudentExercisesServiceImpl:101] org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-20, 10' at line 128
### The error may exist in file [/Users/zhangqiang/Documents/04-Project/ShangShuFang/SourceCode/shangshufang.apiservice/target/classes/mapping/UniversityStudentExercisesMapping.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT       A.student_exercises_id,       A.student_university_code,       B.university_name AS student_university_name,       A.student_school_id,       C.school_name AS student_school_name,       A.student_id,       F.full_name AS student_name,       F.photo AS student_photo,       F.cellphone,       F.enrollment_year,       N.ability_level,       N.position_site,       A.course_university_code,       D.university_name AS course_university_name,       A.course_school_id,       E.school_name AS course_school_name,       A.course_id,       G.course_name,       A.course_class,       A.technology_id,       I.technology_name,       A.learning_phase_id,       J.learning_phase_name,       A.knowledge_id,       K.knowledge_name,       A.exercises_document_id,       H.document_url AS exercises_document_url,       H.answer_url AS exercises_answer_url,       A.source_code_git_url,       A.data_status,       CASE WHEN A.data_status = 'P' THEN '未练习'       WHEN A.data_status = 'W' THEN '待批改'       WHEN A.data_status = 'R' THEN '待修改'       WHEN A.data_status = 'S' THEN '已通过'       ELSE '未知数据状态'       END AS data_status_text,       M.reviewer_id,       M.reviewer_name_teacher,       M.reviewer_name_student,       M.reviewer_type,       DATE_FORMAT(M.update_time, '%Y-%m-%d %H:%i:%s') AS review_time,       DATE_FORMAT(A.create_time, '%Y-%m-%d %H:%i:%s') AS create_time,       DATE_FORMAT(A.update_time, '%Y-%m-%d %H:%i:%s') AS update_time     FROM shangshufang_customer.university_student_exercises A     INNER JOIN shangshufang_customer.university B     ON A.student_university_code = B.university_code     INNER JOIN shangshufang_customer.school C     ON A.student_university_code = C.university_code     AND A.student_school_id = C.school_id     INNER JOIN shangshufang_customer.university D     ON A.course_university_code = D.university_code     INNER JOIN shangshufang_customer.school E     ON A.course_university_code = E.university_code     AND A.course_school_id = E.school_id     INNER JOIN shangshufang_customer.university_student F     ON A.student_id = F.student_id     INNER JOIN shangshufang_customer.course G     ON A.course_university_code = G.university_code     AND A.course_school_id = G.school_id     AND A.course_id = G.course_id     INNER JOIN shangshufang_base.technology_knowledge_exercises H     ON A.technology_id = H.technology_id     AND A.knowledge_id = H.knowledge_id     AND A.exercises_document_id = H.exercises_id     INNER JOIN shangshufang_base.technology I     ON A.technology_id = I.technology_id     INNER JOIN shangshufang_base.learning_phase J     ON A.learning_phase_id = J.learning_phase_id     INNER JOIN shangshufang_base.technology_knowledge K     ON A.technology_id = K.technology_id     AND A.learning_phase_id = K.learning_phase_id     AND A.knowledge_id = K.knowledge_id     AND K.data_status = 'A'     LEFT JOIN     (     SELECT     C.student_exercises_id,     C.reviewer_id,     C.reviewer_type,     D.full_name AS reviewer_name_teacher,     E.full_name AS reviewer_name_student,     C.update_time     FROM     (     SELECT     A.review_id,     A.student_exercises_id,     A.update_time,     B.reviewer_id,     B.reviewer_university_code,     B.reviewer_school_id,     B.reviewer_type     FROM     (     SELECT     student_exercises_id,     MAX(review_id) AS review_id,     MAX(update_time) AS update_time     FROM shangshufang_customer.university_student_exercises_review     GROUP BY student_exercises_id     ) A     INNER JOIN shangshufang_customer.university_student_exercises_review B     ON A.review_id = B.review_id     AND A.student_exercises_id = B.student_exercises_id     ) C     LEFT JOIN shangshufang_customer.university_customer D     ON C.reviewer_university_code = D.university_code     AND C.reviewer_school_id = D.school_id     AND C.reviewer_id = D.customer_id     AND C.reviewer_type = 'T'     LEFT JOIN shangshufang_customer.university_student E     ON C.reviewer_university_code = E.university_code     AND C.reviewer_school_id = E.school_id     AND C.reviewer_id = E.student_id     AND C.reviewer_type = 'S'     ) M     ON A.student_exercises_id = M.student_exercises_id     INNER JOIN shangshufang_customer.university_student_ability_analysis N     ON A.student_id = N.student_id     WHERE a.technology_id = ?     AND a.student_university_code = ?     AND a.student_school_id = ?     AND a.student_id = ?            ORDER BY A.course_class, A.knowledge_id, A.exercises_document_id, A.update_time DESC     LIMIT ?, ?;
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-20, 10' at line 128
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-20, 10' at line 128
[2020-06-06 22:52:30,454][http-nio-8081-exec-6][ERROR][com.shangshufang.apiservice.service.impl.UniversityStudentExercisesServiceImpl:101] org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-50, 10' at line 128
### The error may exist in file [/Users/zhangqiang/Documents/04-Project/ShangShuFang/SourceCode/shangshufang.apiservice/target/classes/mapping/UniversityStudentExercisesMapping.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT       A.student_exercises_id,       A.student_university_code,       B.university_name AS student_university_name,       A.student_school_id,       C.school_name AS student_school_name,       A.student_id,       F.full_name AS student_name,       F.photo AS student_photo,       F.cellphone,       F.enrollment_year,       N.ability_level,       N.position_site,       A.course_university_code,       D.university_name AS course_university_name,       A.course_school_id,       E.school_name AS course_school_name,       A.course_id,       G.course_name,       A.course_class,       A.technology_id,       I.technology_name,       A.learning_phase_id,       J.learning_phase_name,       A.knowledge_id,       K.knowledge_name,       A.exercises_document_id,       H.document_url AS exercises_document_url,       H.answer_url AS exercises_answer_url,       A.source_code_git_url,       A.data_status,       CASE WHEN A.data_status = 'P' THEN '未练习'       WHEN A.data_status = 'W' THEN '待批改'       WHEN A.data_status = 'R' THEN '待修改'       WHEN A.data_status = 'S' THEN '已通过'       ELSE '未知数据状态'       END AS data_status_text,       M.reviewer_id,       M.reviewer_name_teacher,       M.reviewer_name_student,       M.reviewer_type,       DATE_FORMAT(M.update_time, '%Y-%m-%d %H:%i:%s') AS review_time,       DATE_FORMAT(A.create_time, '%Y-%m-%d %H:%i:%s') AS create_time,       DATE_FORMAT(A.update_time, '%Y-%m-%d %H:%i:%s') AS update_time     FROM shangshufang_customer.university_student_exercises A     INNER JOIN shangshufang_customer.university B     ON A.student_university_code = B.university_code     INNER JOIN shangshufang_customer.school C     ON A.student_university_code = C.university_code     AND A.student_school_id = C.school_id     INNER JOIN shangshufang_customer.university D     ON A.course_university_code = D.university_code     INNER JOIN shangshufang_customer.school E     ON A.course_university_code = E.university_code     AND A.course_school_id = E.school_id     INNER JOIN shangshufang_customer.university_student F     ON A.student_id = F.student_id     INNER JOIN shangshufang_customer.course G     ON A.course_university_code = G.university_code     AND A.course_school_id = G.school_id     AND A.course_id = G.course_id     INNER JOIN shangshufang_base.technology_knowledge_exercises H     ON A.technology_id = H.technology_id     AND A.knowledge_id = H.knowledge_id     AND A.exercises_document_id = H.exercises_id     INNER JOIN shangshufang_base.technology I     ON A.technology_id = I.technology_id     INNER JOIN shangshufang_base.learning_phase J     ON A.learning_phase_id = J.learning_phase_id     INNER JOIN shangshufang_base.technology_knowledge K     ON A.technology_id = K.technology_id     AND A.learning_phase_id = K.learning_phase_id     AND A.knowledge_id = K.knowledge_id     AND K.data_status = 'A'     LEFT JOIN     (     SELECT     C.student_exercises_id,     C.reviewer_id,     C.reviewer_type,     D.full_name AS reviewer_name_teacher,     E.full_name AS reviewer_name_student,     C.update_time     FROM     (     SELECT     A.review_id,     A.student_exercises_id,     A.update_time,     B.reviewer_id,     B.reviewer_university_code,     B.reviewer_school_id,     B.reviewer_type     FROM     (     SELECT     student_exercises_id,     MAX(review_id) AS review_id,     MAX(update_time) AS update_time     FROM shangshufang_customer.university_student_exercises_review     GROUP BY student_exercises_id     ) A     INNER JOIN shangshufang_customer.university_student_exercises_review B     ON A.review_id = B.review_id     AND A.student_exercises_id = B.student_exercises_id     ) C     LEFT JOIN shangshufang_customer.university_customer D     ON C.reviewer_university_code = D.university_code     AND C.reviewer_school_id = D.school_id     AND C.reviewer_id = D.customer_id     AND C.reviewer_type = 'T'     LEFT JOIN shangshufang_customer.university_student E     ON C.reviewer_university_code = E.university_code     AND C.reviewer_school_id = E.school_id     AND C.reviewer_id = E.student_id     AND C.reviewer_type = 'S'     ) M     ON A.student_exercises_id = M.student_exercises_id     INNER JOIN shangshufang_customer.university_student_ability_analysis N     ON A.student_id = N.student_id     WHERE a.technology_id = ?     AND a.student_university_code = ?     AND a.student_school_id = ?     AND a.student_id = ?            ORDER BY A.course_class, A.knowledge_id, A.exercises_document_id, A.update_time DESC     LIMIT ?, ?;
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-50, 10' at line 128
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-50, 10' at line 128
[2020-06-06 22:52:30,454][http-nio-8081-exec-4][ERROR][com.shangshufang.apiservice.service.impl.UniversityStudentExercisesServiceImpl:101] org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-40, 10' at line 128
### The error may exist in file [/Users/zhangqiang/Documents/04-Project/ShangShuFang/SourceCode/shangshufang.apiservice/target/classes/mapping/UniversityStudentExercisesMapping.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT       A.student_exercises_id,       A.student_university_code,       B.university_name AS student_university_name,       A.student_school_id,       C.school_name AS student_school_name,       A.student_id,       F.full_name AS student_name,       F.photo AS student_photo,       F.cellphone,       F.enrollment_year,       N.ability_level,       N.position_site,       A.course_university_code,       D.university_name AS course_university_name,       A.course_school_id,       E.school_name AS course_school_name,       A.course_id,       G.course_name,       A.course_class,       A.technology_id,       I.technology_name,       A.learning_phase_id,       J.learning_phase_name,       A.knowledge_id,       K.knowledge_name,       A.exercises_document_id,       H.document_url AS exercises_document_url,       H.answer_url AS exercises_answer_url,       A.source_code_git_url,       A.data_status,       CASE WHEN A.data_status = 'P' THEN '未练习'       WHEN A.data_status = 'W' THEN '待批改'       WHEN A.data_status = 'R' THEN '待修改'       WHEN A.data_status = 'S' THEN '已通过'       ELSE '未知数据状态'       END AS data_status_text,       M.reviewer_id,       M.reviewer_name_teacher,       M.reviewer_name_student,       M.reviewer_type,       DATE_FORMAT(M.update_time, '%Y-%m-%d %H:%i:%s') AS review_time,       DATE_FORMAT(A.create_time, '%Y-%m-%d %H:%i:%s') AS create_time,       DATE_FORMAT(A.update_time, '%Y-%m-%d %H:%i:%s') AS update_time     FROM shangshufang_customer.university_student_exercises A     INNER JOIN shangshufang_customer.university B     ON A.student_university_code = B.university_code     INNER JOIN shangshufang_customer.school C     ON A.student_university_code = C.university_code     AND A.student_school_id = C.school_id     INNER JOIN shangshufang_customer.university D     ON A.course_university_code = D.university_code     INNER JOIN shangshufang_customer.school E     ON A.course_university_code = E.university_code     AND A.course_school_id = E.school_id     INNER JOIN shangshufang_customer.university_student F     ON A.student_id = F.student_id     INNER JOIN shangshufang_customer.course G     ON A.course_university_code = G.university_code     AND A.course_school_id = G.school_id     AND A.course_id = G.course_id     INNER JOIN shangshufang_base.technology_knowledge_exercises H     ON A.technology_id = H.technology_id     AND A.knowledge_id = H.knowledge_id     AND A.exercises_document_id = H.exercises_id     INNER JOIN shangshufang_base.technology I     ON A.technology_id = I.technology_id     INNER JOIN shangshufang_base.learning_phase J     ON A.learning_phase_id = J.learning_phase_id     INNER JOIN shangshufang_base.technology_knowledge K     ON A.technology_id = K.technology_id     AND A.learning_phase_id = K.learning_phase_id     AND A.knowledge_id = K.knowledge_id     AND K.data_status = 'A'     LEFT JOIN     (     SELECT     C.student_exercises_id,     C.reviewer_id,     C.reviewer_type,     D.full_name AS reviewer_name_teacher,     E.full_name AS reviewer_name_student,     C.update_time     FROM     (     SELECT     A.review_id,     A.student_exercises_id,     A.update_time,     B.reviewer_id,     B.reviewer_university_code,     B.reviewer_school_id,     B.reviewer_type     FROM     (     SELECT     student_exercises_id,     MAX(review_id) AS review_id,     MAX(update_time) AS update_time     FROM shangshufang_customer.university_student_exercises_review     GROUP BY student_exercises_id     ) A     INNER JOIN shangshufang_customer.university_student_exercises_review B     ON A.review_id = B.review_id     AND A.student_exercises_id = B.student_exercises_id     ) C     LEFT JOIN shangshufang_customer.university_customer D     ON C.reviewer_university_code = D.university_code     AND C.reviewer_school_id = D.school_id     AND C.reviewer_id = D.customer_id     AND C.reviewer_type = 'T'     LEFT JOIN shangshufang_customer.university_student E     ON C.reviewer_university_code = E.university_code     AND C.reviewer_school_id = E.school_id     AND C.reviewer_id = E.student_id     AND C.reviewer_type = 'S'     ) M     ON A.student_exercises_id = M.student_exercises_id     INNER JOIN shangshufang_customer.university_student_ability_analysis N     ON A.student_id = N.student_id     WHERE a.technology_id = ?     AND a.student_university_code = ?     AND a.student_school_id = ?     AND a.student_id = ?            ORDER BY A.course_class, A.knowledge_id, A.exercises_document_id, A.update_time DESC     LIMIT ?, ?;
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-40, 10' at line 128
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-40, 10' at line 128
[2020-06-06 22:52:30,455][http-nio-8081-exec-2][ERROR][com.shangshufang.apiservice.service.impl.UniversityStudentExercisesServiceImpl:101] org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-60, 10' at line 128
### The error may exist in file [/Users/zhangqiang/Documents/04-Project/ShangShuFang/SourceCode/shangshufang.apiservice/target/classes/mapping/UniversityStudentExercisesMapping.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT       A.student_exercises_id,       A.student_university_code,       B.university_name AS student_university_name,       A.student_school_id,       C.school_name AS student_school_name,       A.student_id,       F.full_name AS student_name,       F.photo AS student_photo,       F.cellphone,       F.enrollment_year,       N.ability_level,       N.position_site,       A.course_university_code,       D.university_name AS course_university_name,       A.course_school_id,       E.school_name AS course_school_name,       A.course_id,       G.course_name,       A.course_class,       A.technology_id,       I.technology_name,       A.learning_phase_id,       J.learning_phase_name,       A.knowledge_id,       K.knowledge_name,       A.exercises_document_id,       H.document_url AS exercises_document_url,       H.answer_url AS exercises_answer_url,       A.source_code_git_url,       A.data_status,       CASE WHEN A.data_status = 'P' THEN '未练习'       WHEN A.data_status = 'W' THEN '待批改'       WHEN A.data_status = 'R' THEN '待修改'       WHEN A.data_status = 'S' THEN '已通过'       ELSE '未知数据状态'       END AS data_status_text,       M.reviewer_id,       M.reviewer_name_teacher,       M.reviewer_name_student,       M.reviewer_type,       DATE_FORMAT(M.update_time, '%Y-%m-%d %H:%i:%s') AS review_time,       DATE_FORMAT(A.create_time, '%Y-%m-%d %H:%i:%s') AS create_time,       DATE_FORMAT(A.update_time, '%Y-%m-%d %H:%i:%s') AS update_time     FROM shangshufang_customer.university_student_exercises A     INNER JOIN shangshufang_customer.university B     ON A.student_university_code = B.university_code     INNER JOIN shangshufang_customer.school C     ON A.student_university_code = C.university_code     AND A.student_school_id = C.school_id     INNER JOIN shangshufang_customer.university D     ON A.course_university_code = D.university_code     INNER JOIN shangshufang_customer.school E     ON A.course_university_code = E.university_code     AND A.course_school_id = E.school_id     INNER JOIN shangshufang_customer.university_student F     ON A.student_id = F.student_id     INNER JOIN shangshufang_customer.course G     ON A.course_university_code = G.university_code     AND A.course_school_id = G.school_id     AND A.course_id = G.course_id     INNER JOIN shangshufang_base.technology_knowledge_exercises H     ON A.technology_id = H.technology_id     AND A.knowledge_id = H.knowledge_id     AND A.exercises_document_id = H.exercises_id     INNER JOIN shangshufang_base.technology I     ON A.technology_id = I.technology_id     INNER JOIN shangshufang_base.learning_phase J     ON A.learning_phase_id = J.learning_phase_id     INNER JOIN shangshufang_base.technology_knowledge K     ON A.technology_id = K.technology_id     AND A.learning_phase_id = K.learning_phase_id     AND A.knowledge_id = K.knowledge_id     AND K.data_status = 'A'     LEFT JOIN     (     SELECT     C.student_exercises_id,     C.reviewer_id,     C.reviewer_type,     D.full_name AS reviewer_name_teacher,     E.full_name AS reviewer_name_student,     C.update_time     FROM     (     SELECT     A.review_id,     A.student_exercises_id,     A.update_time,     B.reviewer_id,     B.reviewer_university_code,     B.reviewer_school_id,     B.reviewer_type     FROM     (     SELECT     student_exercises_id,     MAX(review_id) AS review_id,     MAX(update_time) AS update_time     FROM shangshufang_customer.university_student_exercises_review     GROUP BY student_exercises_id     ) A     INNER JOIN shangshufang_customer.university_student_exercises_review B     ON A.review_id = B.review_id     AND A.student_exercises_id = B.student_exercises_id     ) C     LEFT JOIN shangshufang_customer.university_customer D     ON C.reviewer_university_code = D.university_code     AND C.reviewer_school_id = D.school_id     AND C.reviewer_id = D.customer_id     AND C.reviewer_type = 'T'     LEFT JOIN shangshufang_customer.university_student E     ON C.reviewer_university_code = E.university_code     AND C.reviewer_school_id = E.school_id     AND C.reviewer_id = E.student_id     AND C.reviewer_type = 'S'     ) M     ON A.student_exercises_id = M.student_exercises_id     INNER JOIN shangshufang_customer.university_student_ability_analysis N     ON A.student_id = N.student_id     WHERE a.technology_id = ?     AND a.student_university_code = ?     AND a.student_school_id = ?     AND a.student_id = ?            ORDER BY A.course_class, A.knowledge_id, A.exercises_document_id, A.update_time DESC     LIMIT ?, ?;
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-60, 10' at line 128
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-60, 10' at line 128
[2020-06-06 22:52:30,456][http-nio-8081-exec-9][ERROR][com.shangshufang.apiservice.service.impl.UniversityStudentExercisesServiceImpl:101] org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-70, 10' at line 128
### The error may exist in file [/Users/zhangqiang/Documents/04-Project/ShangShuFang/SourceCode/shangshufang.apiservice/target/classes/mapping/UniversityStudentExercisesMapping.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT       A.student_exercises_id,       A.student_university_code,       B.university_name AS student_university_name,       A.student_school_id,       C.school_name AS student_school_name,       A.student_id,       F.full_name AS student_name,       F.photo AS student_photo,       F.cellphone,       F.enrollment_year,       N.ability_level,       N.position_site,       A.course_university_code,       D.university_name AS course_university_name,       A.course_school_id,       E.school_name AS course_school_name,       A.course_id,       G.course_name,       A.course_class,       A.technology_id,       I.technology_name,       A.learning_phase_id,       J.learning_phase_name,       A.knowledge_id,       K.knowledge_name,       A.exercises_document_id,       H.document_url AS exercises_document_url,       H.answer_url AS exercises_answer_url,       A.source_code_git_url,       A.data_status,       CASE WHEN A.data_status = 'P' THEN '未练习'       WHEN A.data_status = 'W' THEN '待批改'       WHEN A.data_status = 'R' THEN '待修改'       WHEN A.data_status = 'S' THEN '已通过'       ELSE '未知数据状态'       END AS data_status_text,       M.reviewer_id,       M.reviewer_name_teacher,       M.reviewer_name_student,       M.reviewer_type,       DATE_FORMAT(M.update_time, '%Y-%m-%d %H:%i:%s') AS review_time,       DATE_FORMAT(A.create_time, '%Y-%m-%d %H:%i:%s') AS create_time,       DATE_FORMAT(A.update_time, '%Y-%m-%d %H:%i:%s') AS update_time     FROM shangshufang_customer.university_student_exercises A     INNER JOIN shangshufang_customer.university B     ON A.student_university_code = B.university_code     INNER JOIN shangshufang_customer.school C     ON A.student_university_code = C.university_code     AND A.student_school_id = C.school_id     INNER JOIN shangshufang_customer.university D     ON A.course_university_code = D.university_code     INNER JOIN shangshufang_customer.school E     ON A.course_university_code = E.university_code     AND A.course_school_id = E.school_id     INNER JOIN shangshufang_customer.university_student F     ON A.student_id = F.student_id     INNER JOIN shangshufang_customer.course G     ON A.course_university_code = G.university_code     AND A.course_school_id = G.school_id     AND A.course_id = G.course_id     INNER JOIN shangshufang_base.technology_knowledge_exercises H     ON A.technology_id = H.technology_id     AND A.knowledge_id = H.knowledge_id     AND A.exercises_document_id = H.exercises_id     INNER JOIN shangshufang_base.technology I     ON A.technology_id = I.technology_id     INNER JOIN shangshufang_base.learning_phase J     ON A.learning_phase_id = J.learning_phase_id     INNER JOIN shangshufang_base.technology_knowledge K     ON A.technology_id = K.technology_id     AND A.learning_phase_id = K.learning_phase_id     AND A.knowledge_id = K.knowledge_id     AND K.data_status = 'A'     LEFT JOIN     (     SELECT     C.student_exercises_id,     C.reviewer_id,     C.reviewer_type,     D.full_name AS reviewer_name_teacher,     E.full_name AS reviewer_name_student,     C.update_time     FROM     (     SELECT     A.review_id,     A.student_exercises_id,     A.update_time,     B.reviewer_id,     B.reviewer_university_code,     B.reviewer_school_id,     B.reviewer_type     FROM     (     SELECT     student_exercises_id,     MAX(review_id) AS review_id,     MAX(update_time) AS update_time     FROM shangshufang_customer.university_student_exercises_review     GROUP BY student_exercises_id     ) A     INNER JOIN shangshufang_customer.university_student_exercises_review B     ON A.review_id = B.review_id     AND A.student_exercises_id = B.student_exercises_id     ) C     LEFT JOIN shangshufang_customer.university_customer D     ON C.reviewer_university_code = D.university_code     AND C.reviewer_school_id = D.school_id     AND C.reviewer_id = D.customer_id     AND C.reviewer_type = 'T'     LEFT JOIN shangshufang_customer.university_student E     ON C.reviewer_university_code = E.university_code     AND C.reviewer_school_id = E.school_id     AND C.reviewer_id = E.student_id     AND C.reviewer_type = 'S'     ) M     ON A.student_exercises_id = M.student_exercises_id     INNER JOIN shangshufang_customer.university_student_ability_analysis N     ON A.student_id = N.student_id     WHERE a.technology_id = ?     AND a.student_university_code = ?     AND a.student_school_id = ?     AND a.student_id = ?            ORDER BY A.course_class, A.knowledge_id, A.exercises_document_id, A.update_time DESC     LIMIT ?, ?;
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-70, 10' at line 128
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-70, 10' at line 128
[2020-06-06 22:52:30,467][http-nio-8081-exec-8][ERROR][com.shangshufang.apiservice.service.impl.UniversityStudentExercisesServiceImpl:101] org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-90, 10' at line 128
### The error may exist in file [/Users/zhangqiang/Documents/04-Project/ShangShuFang/SourceCode/shangshufang.apiservice/target/classes/mapping/UniversityStudentExercisesMapping.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT       A.student_exercises_id,       A.student_university_code,       B.university_name AS student_university_name,       A.student_school_id,       C.school_name AS student_school_name,       A.student_id,       F.full_name AS student_name,       F.photo AS student_photo,       F.cellphone,       F.enrollment_year,       N.ability_level,       N.position_site,       A.course_university_code,       D.university_name AS course_university_name,       A.course_school_id,       E.school_name AS course_school_name,       A.course_id,       G.course_name,       A.course_class,       A.technology_id,       I.technology_name,       A.learning_phase_id,       J.learning_phase_name,       A.knowledge_id,       K.knowledge_name,       A.exercises_document_id,       H.document_url AS exercises_document_url,       H.answer_url AS exercises_answer_url,       A.source_code_git_url,       A.data_status,       CASE WHEN A.data_status = 'P' THEN '未练习'       WHEN A.data_status = 'W' THEN '待批改'       WHEN A.data_status = 'R' THEN '待修改'       WHEN A.data_status = 'S' THEN '已通过'       ELSE '未知数据状态'       END AS data_status_text,       M.reviewer_id,       M.reviewer_name_teacher,       M.reviewer_name_student,       M.reviewer_type,       DATE_FORMAT(M.update_time, '%Y-%m-%d %H:%i:%s') AS review_time,       DATE_FORMAT(A.create_time, '%Y-%m-%d %H:%i:%s') AS create_time,       DATE_FORMAT(A.update_time, '%Y-%m-%d %H:%i:%s') AS update_time     FROM shangshufang_customer.university_student_exercises A     INNER JOIN shangshufang_customer.university B     ON A.student_university_code = B.university_code     INNER JOIN shangshufang_customer.school C     ON A.student_university_code = C.university_code     AND A.student_school_id = C.school_id     INNER JOIN shangshufang_customer.university D     ON A.course_university_code = D.university_code     INNER JOIN shangshufang_customer.school E     ON A.course_university_code = E.university_code     AND A.course_school_id = E.school_id     INNER JOIN shangshufang_customer.university_student F     ON A.student_id = F.student_id     INNER JOIN shangshufang_customer.course G     ON A.course_university_code = G.university_code     AND A.course_school_id = G.school_id     AND A.course_id = G.course_id     INNER JOIN shangshufang_base.technology_knowledge_exercises H     ON A.technology_id = H.technology_id     AND A.knowledge_id = H.knowledge_id     AND A.exercises_document_id = H.exercises_id     INNER JOIN shangshufang_base.technology I     ON A.technology_id = I.technology_id     INNER JOIN shangshufang_base.learning_phase J     ON A.learning_phase_id = J.learning_phase_id     INNER JOIN shangshufang_base.technology_knowledge K     ON A.technology_id = K.technology_id     AND A.learning_phase_id = K.learning_phase_id     AND A.knowledge_id = K.knowledge_id     AND K.data_status = 'A'     LEFT JOIN     (     SELECT     C.student_exercises_id,     C.reviewer_id,     C.reviewer_type,     D.full_name AS reviewer_name_teacher,     E.full_name AS reviewer_name_student,     C.update_time     FROM     (     SELECT     A.review_id,     A.student_exercises_id,     A.update_time,     B.reviewer_id,     B.reviewer_university_code,     B.reviewer_school_id,     B.reviewer_type     FROM     (     SELECT     student_exercises_id,     MAX(review_id) AS review_id,     MAX(update_time) AS update_time     FROM shangshufang_customer.university_student_exercises_review     GROUP BY student_exercises_id     ) A     INNER JOIN shangshufang_customer.university_student_exercises_review B     ON A.review_id = B.review_id     AND A.student_exercises_id = B.student_exercises_id     ) C     LEFT JOIN shangshufang_customer.university_customer D     ON C.reviewer_university_code = D.university_code     AND C.reviewer_school_id = D.school_id     AND C.reviewer_id = D.customer_id     AND C.reviewer_type = 'T'     LEFT JOIN shangshufang_customer.university_student E     ON C.reviewer_university_code = E.university_code     AND C.reviewer_school_id = E.school_id     AND C.reviewer_id = E.student_id     AND C.reviewer_type = 'S'     ) M     ON A.student_exercises_id = M.student_exercises_id     INNER JOIN shangshufang_customer.university_student_ability_analysis N     ON A.student_id = N.student_id     WHERE a.technology_id = ?     AND a.student_university_code = ?     AND a.student_school_id = ?     AND a.student_id = ?            ORDER BY A.course_class, A.knowledge_id, A.exercises_document_id, A.update_time DESC     LIMIT ?, ?;
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-90, 10' at line 128
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-90, 10' at line 128
[2020-06-06 22:52:30,467][http-nio-8081-exec-1][ERROR][com.shangshufang.apiservice.service.impl.UniversityStudentExercisesServiceImpl:101] org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-80, 10' at line 128
### The error may exist in file [/Users/zhangqiang/Documents/04-Project/ShangShuFang/SourceCode/shangshufang.apiservice/target/classes/mapping/UniversityStudentExercisesMapping.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT       A.student_exercises_id,       A.student_university_code,       B.university_name AS student_university_name,       A.student_school_id,       C.school_name AS student_school_name,       A.student_id,       F.full_name AS student_name,       F.photo AS student_photo,       F.cellphone,       F.enrollment_year,       N.ability_level,       N.position_site,       A.course_university_code,       D.university_name AS course_university_name,       A.course_school_id,       E.school_name AS course_school_name,       A.course_id,       G.course_name,       A.course_class,       A.technology_id,       I.technology_name,       A.learning_phase_id,       J.learning_phase_name,       A.knowledge_id,       K.knowledge_name,       A.exercises_document_id,       H.document_url AS exercises_document_url,       H.answer_url AS exercises_answer_url,       A.source_code_git_url,       A.data_status,       CASE WHEN A.data_status = 'P' THEN '未练习'       WHEN A.data_status = 'W' THEN '待批改'       WHEN A.data_status = 'R' THEN '待修改'       WHEN A.data_status = 'S' THEN '已通过'       ELSE '未知数据状态'       END AS data_status_text,       M.reviewer_id,       M.reviewer_name_teacher,       M.reviewer_name_student,       M.reviewer_type,       DATE_FORMAT(M.update_time, '%Y-%m-%d %H:%i:%s') AS review_time,       DATE_FORMAT(A.create_time, '%Y-%m-%d %H:%i:%s') AS create_time,       DATE_FORMAT(A.update_time, '%Y-%m-%d %H:%i:%s') AS update_time     FROM shangshufang_customer.university_student_exercises A     INNER JOIN shangshufang_customer.university B     ON A.student_university_code = B.university_code     INNER JOIN shangshufang_customer.school C     ON A.student_university_code = C.university_code     AND A.student_school_id = C.school_id     INNER JOIN shangshufang_customer.university D     ON A.course_university_code = D.university_code     INNER JOIN shangshufang_customer.school E     ON A.course_university_code = E.university_code     AND A.course_school_id = E.school_id     INNER JOIN shangshufang_customer.university_student F     ON A.student_id = F.student_id     INNER JOIN shangshufang_customer.course G     ON A.course_university_code = G.university_code     AND A.course_school_id = G.school_id     AND A.course_id = G.course_id     INNER JOIN shangshufang_base.technology_knowledge_exercises H     ON A.technology_id = H.technology_id     AND A.knowledge_id = H.knowledge_id     AND A.exercises_document_id = H.exercises_id     INNER JOIN shangshufang_base.technology I     ON A.technology_id = I.technology_id     INNER JOIN shangshufang_base.learning_phase J     ON A.learning_phase_id = J.learning_phase_id     INNER JOIN shangshufang_base.technology_knowledge K     ON A.technology_id = K.technology_id     AND A.learning_phase_id = K.learning_phase_id     AND A.knowledge_id = K.knowledge_id     AND K.data_status = 'A'     LEFT JOIN     (     SELECT     C.student_exercises_id,     C.reviewer_id,     C.reviewer_type,     D.full_name AS reviewer_name_teacher,     E.full_name AS reviewer_name_student,     C.update_time     FROM     (     SELECT     A.review_id,     A.student_exercises_id,     A.update_time,     B.reviewer_id,     B.reviewer_university_code,     B.reviewer_school_id,     B.reviewer_type     FROM     (     SELECT     student_exercises_id,     MAX(review_id) AS review_id,     MAX(update_time) AS update_time     FROM shangshufang_customer.university_student_exercises_review     GROUP BY student_exercises_id     ) A     INNER JOIN shangshufang_customer.university_student_exercises_review B     ON A.review_id = B.review_id     AND A.student_exercises_id = B.student_exercises_id     ) C     LEFT JOIN shangshufang_customer.university_customer D     ON C.reviewer_university_code = D.university_code     AND C.reviewer_school_id = D.school_id     AND C.reviewer_id = D.customer_id     AND C.reviewer_type = 'T'     LEFT JOIN shangshufang_customer.university_student E     ON C.reviewer_university_code = E.university_code     AND C.reviewer_school_id = E.school_id     AND C.reviewer_id = E.student_id     AND C.reviewer_type = 'S'     ) M     ON A.student_exercises_id = M.student_exercises_id     INNER JOIN shangshufang_customer.university_student_ability_analysis N     ON A.student_id = N.student_id     WHERE a.technology_id = ?     AND a.student_university_code = ?     AND a.student_school_id = ?     AND a.student_id = ?            ORDER BY A.course_class, A.knowledge_id, A.exercises_document_id, A.update_time DESC     LIMIT ?, ?;
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-80, 10' at line 128
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-80, 10' at line 128
[2020-06-06 23:03:54,544][http-nio-8081-exec-10][ERROR][com.shangshufang.apiservice.service.impl.UniversityStudentExercisesServiceImpl:101] org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-10, 10' at line 128
### The error may exist in file [/Users/zhangqiang/Documents/04-Project/ShangShuFang/SourceCode/shangshufang.apiservice/target/classes/mapping/UniversityStudentExercisesMapping.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT       A.student_exercises_id,       A.student_university_code,       B.university_name AS student_university_name,       A.student_school_id,       C.school_name AS student_school_name,       A.student_id,       F.full_name AS student_name,       F.photo AS student_photo,       F.cellphone,       F.enrollment_year,       N.ability_level,       N.position_site,       A.course_university_code,       D.university_name AS course_university_name,       A.course_school_id,       E.school_name AS course_school_name,       A.course_id,       G.course_name,       A.course_class,       A.technology_id,       I.technology_name,       A.learning_phase_id,       J.learning_phase_name,       A.knowledge_id,       K.knowledge_name,       A.exercises_document_id,       H.document_url AS exercises_document_url,       H.answer_url AS exercises_answer_url,       A.source_code_git_url,       A.data_status,       CASE WHEN A.data_status = 'P' THEN '未练习'       WHEN A.data_status = 'W' THEN '待批改'       WHEN A.data_status = 'R' THEN '待修改'       WHEN A.data_status = 'S' THEN '已通过'       ELSE '未知数据状态'       END AS data_status_text,       M.reviewer_id,       M.reviewer_name_teacher,       M.reviewer_name_student,       M.reviewer_type,       DATE_FORMAT(M.update_time, '%Y-%m-%d %H:%i:%s') AS review_time,       DATE_FORMAT(A.create_time, '%Y-%m-%d %H:%i:%s') AS create_time,       DATE_FORMAT(A.update_time, '%Y-%m-%d %H:%i:%s') AS update_time     FROM shangshufang_customer.university_student_exercises A     INNER JOIN shangshufang_customer.university B     ON A.student_university_code = B.university_code     INNER JOIN shangshufang_customer.school C     ON A.student_university_code = C.university_code     AND A.student_school_id = C.school_id     INNER JOIN shangshufang_customer.university D     ON A.course_university_code = D.university_code     INNER JOIN shangshufang_customer.school E     ON A.course_university_code = E.university_code     AND A.course_school_id = E.school_id     INNER JOIN shangshufang_customer.university_student F     ON A.student_id = F.student_id     INNER JOIN shangshufang_customer.course G     ON A.course_university_code = G.university_code     AND A.course_school_id = G.school_id     AND A.course_id = G.course_id     INNER JOIN shangshufang_base.technology_knowledge_exercises H     ON A.technology_id = H.technology_id     AND A.knowledge_id = H.knowledge_id     AND A.exercises_document_id = H.exercises_id     INNER JOIN shangshufang_base.technology I     ON A.technology_id = I.technology_id     INNER JOIN shangshufang_base.learning_phase J     ON A.learning_phase_id = J.learning_phase_id     INNER JOIN shangshufang_base.technology_knowledge K     ON A.technology_id = K.technology_id     AND A.learning_phase_id = K.learning_phase_id     AND A.knowledge_id = K.knowledge_id     AND K.data_status = 'A'     LEFT JOIN     (     SELECT     C.student_exercises_id,     C.reviewer_id,     C.reviewer_type,     D.full_name AS reviewer_name_teacher,     E.full_name AS reviewer_name_student,     C.update_time     FROM     (     SELECT     A.review_id,     A.student_exercises_id,     A.update_time,     B.reviewer_id,     B.reviewer_university_code,     B.reviewer_school_id,     B.reviewer_type     FROM     (     SELECT     student_exercises_id,     MAX(review_id) AS review_id,     MAX(update_time) AS update_time     FROM shangshufang_customer.university_student_exercises_review     GROUP BY student_exercises_id     ) A     INNER JOIN shangshufang_customer.university_student_exercises_review B     ON A.review_id = B.review_id     AND A.student_exercises_id = B.student_exercises_id     ) C     LEFT JOIN shangshufang_customer.university_customer D     ON C.reviewer_university_code = D.university_code     AND C.reviewer_school_id = D.school_id     AND C.reviewer_id = D.customer_id     AND C.reviewer_type = 'T'     LEFT JOIN shangshufang_customer.university_student E     ON C.reviewer_university_code = E.university_code     AND C.reviewer_school_id = E.school_id     AND C.reviewer_id = E.student_id     AND C.reviewer_type = 'S'     ) M     ON A.student_exercises_id = M.student_exercises_id     INNER JOIN shangshufang_customer.university_student_ability_analysis N     ON A.student_id = N.student_id     WHERE a.technology_id = ?     AND a.student_university_code = ?     AND a.student_school_id = ?     AND a.student_id = ?            ORDER BY A.course_class, A.knowledge_id, A.exercises_document_id, A.update_time DESC     LIMIT ?, ?;
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-10, 10' at line 128
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-10, 10' at line 128
[2020-06-06 23:03:54,548][http-nio-8081-exec-8][ERROR][com.shangshufang.apiservice.service.impl.UniversityStudentExercisesServiceImpl:101] org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-20, 10' at line 128
### The error may exist in file [/Users/zhangqiang/Documents/04-Project/ShangShuFang/SourceCode/shangshufang.apiservice/target/classes/mapping/UniversityStudentExercisesMapping.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT       A.student_exercises_id,       A.student_university_code,       B.university_name AS student_university_name,       A.student_school_id,       C.school_name AS student_school_name,       A.student_id,       F.full_name AS student_name,       F.photo AS student_photo,       F.cellphone,       F.enrollment_year,       N.ability_level,       N.position_site,       A.course_university_code,       D.university_name AS course_university_name,       A.course_school_id,       E.school_name AS course_school_name,       A.course_id,       G.course_name,       A.course_class,       A.technology_id,       I.technology_name,       A.learning_phase_id,       J.learning_phase_name,       A.knowledge_id,       K.knowledge_name,       A.exercises_document_id,       H.document_url AS exercises_document_url,       H.answer_url AS exercises_answer_url,       A.source_code_git_url,       A.data_status,       CASE WHEN A.data_status = 'P' THEN '未练习'       WHEN A.data_status = 'W' THEN '待批改'       WHEN A.data_status = 'R' THEN '待修改'       WHEN A.data_status = 'S' THEN '已通过'       ELSE '未知数据状态'       END AS data_status_text,       M.reviewer_id,       M.reviewer_name_teacher,       M.reviewer_name_student,       M.reviewer_type,       DATE_FORMAT(M.update_time, '%Y-%m-%d %H:%i:%s') AS review_time,       DATE_FORMAT(A.create_time, '%Y-%m-%d %H:%i:%s') AS create_time,       DATE_FORMAT(A.update_time, '%Y-%m-%d %H:%i:%s') AS update_time     FROM shangshufang_customer.university_student_exercises A     INNER JOIN shangshufang_customer.university B     ON A.student_university_code = B.university_code     INNER JOIN shangshufang_customer.school C     ON A.student_university_code = C.university_code     AND A.student_school_id = C.school_id     INNER JOIN shangshufang_customer.university D     ON A.course_university_code = D.university_code     INNER JOIN shangshufang_customer.school E     ON A.course_university_code = E.university_code     AND A.course_school_id = E.school_id     INNER JOIN shangshufang_customer.university_student F     ON A.student_id = F.student_id     INNER JOIN shangshufang_customer.course G     ON A.course_university_code = G.university_code     AND A.course_school_id = G.school_id     AND A.course_id = G.course_id     INNER JOIN shangshufang_base.technology_knowledge_exercises H     ON A.technology_id = H.technology_id     AND A.knowledge_id = H.knowledge_id     AND A.exercises_document_id = H.exercises_id     INNER JOIN shangshufang_base.technology I     ON A.technology_id = I.technology_id     INNER JOIN shangshufang_base.learning_phase J     ON A.learning_phase_id = J.learning_phase_id     INNER JOIN shangshufang_base.technology_knowledge K     ON A.technology_id = K.technology_id     AND A.learning_phase_id = K.learning_phase_id     AND A.knowledge_id = K.knowledge_id     AND K.data_status = 'A'     LEFT JOIN     (     SELECT     C.student_exercises_id,     C.reviewer_id,     C.reviewer_type,     D.full_name AS reviewer_name_teacher,     E.full_name AS reviewer_name_student,     C.update_time     FROM     (     SELECT     A.review_id,     A.student_exercises_id,     A.update_time,     B.reviewer_id,     B.reviewer_university_code,     B.reviewer_school_id,     B.reviewer_type     FROM     (     SELECT     student_exercises_id,     MAX(review_id) AS review_id,     MAX(update_time) AS update_time     FROM shangshufang_customer.university_student_exercises_review     GROUP BY student_exercises_id     ) A     INNER JOIN shangshufang_customer.university_student_exercises_review B     ON A.review_id = B.review_id     AND A.student_exercises_id = B.student_exercises_id     ) C     LEFT JOIN shangshufang_customer.university_customer D     ON C.reviewer_university_code = D.university_code     AND C.reviewer_school_id = D.school_id     AND C.reviewer_id = D.customer_id     AND C.reviewer_type = 'T'     LEFT JOIN shangshufang_customer.university_student E     ON C.reviewer_university_code = E.university_code     AND C.reviewer_school_id = E.school_id     AND C.reviewer_id = E.student_id     AND C.reviewer_type = 'S'     ) M     ON A.student_exercises_id = M.student_exercises_id     INNER JOIN shangshufang_customer.university_student_ability_analysis N     ON A.student_id = N.student_id     WHERE a.technology_id = ?     AND a.student_university_code = ?     AND a.student_school_id = ?     AND a.student_id = ?            ORDER BY A.course_class, A.knowledge_id, A.exercises_document_id, A.update_time DESC     LIMIT ?, ?;
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-20, 10' at line 128
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-20, 10' at line 128
[2020-06-06 23:03:54,568][http-nio-8081-exec-9][ERROR][com.shangshufang.apiservice.service.impl.UniversityStudentExercisesServiceImpl:101] org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-30, 10' at line 128
### The error may exist in file [/Users/zhangqiang/Documents/04-Project/ShangShuFang/SourceCode/shangshufang.apiservice/target/classes/mapping/UniversityStudentExercisesMapping.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT       A.student_exercises_id,       A.student_university_code,       B.university_name AS student_university_name,       A.student_school_id,       C.school_name AS student_school_name,       A.student_id,       F.full_name AS student_name,       F.photo AS student_photo,       F.cellphone,       F.enrollment_year,       N.ability_level,       N.position_site,       A.course_university_code,       D.university_name AS course_university_name,       A.course_school_id,       E.school_name AS course_school_name,       A.course_id,       G.course_name,       A.course_class,       A.technology_id,       I.technology_name,       A.learning_phase_id,       J.learning_phase_name,       A.knowledge_id,       K.knowledge_name,       A.exercises_document_id,       H.document_url AS exercises_document_url,       H.answer_url AS exercises_answer_url,       A.source_code_git_url,       A.data_status,       CASE WHEN A.data_status = 'P' THEN '未练习'       WHEN A.data_status = 'W' THEN '待批改'       WHEN A.data_status = 'R' THEN '待修改'       WHEN A.data_status = 'S' THEN '已通过'       ELSE '未知数据状态'       END AS data_status_text,       M.reviewer_id,       M.reviewer_name_teacher,       M.reviewer_name_student,       M.reviewer_type,       DATE_FORMAT(M.update_time, '%Y-%m-%d %H:%i:%s') AS review_time,       DATE_FORMAT(A.create_time, '%Y-%m-%d %H:%i:%s') AS create_time,       DATE_FORMAT(A.update_time, '%Y-%m-%d %H:%i:%s') AS update_time     FROM shangshufang_customer.university_student_exercises A     INNER JOIN shangshufang_customer.university B     ON A.student_university_code = B.university_code     INNER JOIN shangshufang_customer.school C     ON A.student_university_code = C.university_code     AND A.student_school_id = C.school_id     INNER JOIN shangshufang_customer.university D     ON A.course_university_code = D.university_code     INNER JOIN shangshufang_customer.school E     ON A.course_university_code = E.university_code     AND A.course_school_id = E.school_id     INNER JOIN shangshufang_customer.university_student F     ON A.student_id = F.student_id     INNER JOIN shangshufang_customer.course G     ON A.course_university_code = G.university_code     AND A.course_school_id = G.school_id     AND A.course_id = G.course_id     INNER JOIN shangshufang_base.technology_knowledge_exercises H     ON A.technology_id = H.technology_id     AND A.knowledge_id = H.knowledge_id     AND A.exercises_document_id = H.exercises_id     INNER JOIN shangshufang_base.technology I     ON A.technology_id = I.technology_id     INNER JOIN shangshufang_base.learning_phase J     ON A.learning_phase_id = J.learning_phase_id     INNER JOIN shangshufang_base.technology_knowledge K     ON A.technology_id = K.technology_id     AND A.learning_phase_id = K.learning_phase_id     AND A.knowledge_id = K.knowledge_id     AND K.data_status = 'A'     LEFT JOIN     (     SELECT     C.student_exercises_id,     C.reviewer_id,     C.reviewer_type,     D.full_name AS reviewer_name_teacher,     E.full_name AS reviewer_name_student,     C.update_time     FROM     (     SELECT     A.review_id,     A.student_exercises_id,     A.update_time,     B.reviewer_id,     B.reviewer_university_code,     B.reviewer_school_id,     B.reviewer_type     FROM     (     SELECT     student_exercises_id,     MAX(review_id) AS review_id,     MAX(update_time) AS update_time     FROM shangshufang_customer.university_student_exercises_review     GROUP BY student_exercises_id     ) A     INNER JOIN shangshufang_customer.university_student_exercises_review B     ON A.review_id = B.review_id     AND A.student_exercises_id = B.student_exercises_id     ) C     LEFT JOIN shangshufang_customer.university_customer D     ON C.reviewer_university_code = D.university_code     AND C.reviewer_school_id = D.school_id     AND C.reviewer_id = D.customer_id     AND C.reviewer_type = 'T'     LEFT JOIN shangshufang_customer.university_student E     ON C.reviewer_university_code = E.university_code     AND C.reviewer_school_id = E.school_id     AND C.reviewer_id = E.student_id     AND C.reviewer_type = 'S'     ) M     ON A.student_exercises_id = M.student_exercises_id     INNER JOIN shangshufang_customer.university_student_ability_analysis N     ON A.student_id = N.student_id     WHERE a.technology_id = ?     AND a.student_university_code = ?     AND a.student_school_id = ?     AND a.student_id = ?            ORDER BY A.course_class, A.knowledge_id, A.exercises_document_id, A.update_time DESC     LIMIT ?, ?;
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-30, 10' at line 128
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-30, 10' at line 128
[2020-06-06 23:03:54,568][http-nio-8081-exec-5][ERROR][com.shangshufang.apiservice.service.impl.UniversityStudentExercisesServiceImpl:101] org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-40, 10' at line 128
### The error may exist in file [/Users/zhangqiang/Documents/04-Project/ShangShuFang/SourceCode/shangshufang.apiservice/target/classes/mapping/UniversityStudentExercisesMapping.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT       A.student_exercises_id,       A.student_university_code,       B.university_name AS student_university_name,       A.student_school_id,       C.school_name AS student_school_name,       A.student_id,       F.full_name AS student_name,       F.photo AS student_photo,       F.cellphone,       F.enrollment_year,       N.ability_level,       N.position_site,       A.course_university_code,       D.university_name AS course_university_name,       A.course_school_id,       E.school_name AS course_school_name,       A.course_id,       G.course_name,       A.course_class,       A.technology_id,       I.technology_name,       A.learning_phase_id,       J.learning_phase_name,       A.knowledge_id,       K.knowledge_name,       A.exercises_document_id,       H.document_url AS exercises_document_url,       H.answer_url AS exercises_answer_url,       A.source_code_git_url,       A.data_status,       CASE WHEN A.data_status = 'P' THEN '未练习'       WHEN A.data_status = 'W' THEN '待批改'       WHEN A.data_status = 'R' THEN '待修改'       WHEN A.data_status = 'S' THEN '已通过'       ELSE '未知数据状态'       END AS data_status_text,       M.reviewer_id,       M.reviewer_name_teacher,       M.reviewer_name_student,       M.reviewer_type,       DATE_FORMAT(M.update_time, '%Y-%m-%d %H:%i:%s') AS review_time,       DATE_FORMAT(A.create_time, '%Y-%m-%d %H:%i:%s') AS create_time,       DATE_FORMAT(A.update_time, '%Y-%m-%d %H:%i:%s') AS update_time     FROM shangshufang_customer.university_student_exercises A     INNER JOIN shangshufang_customer.university B     ON A.student_university_code = B.university_code     INNER JOIN shangshufang_customer.school C     ON A.student_university_code = C.university_code     AND A.student_school_id = C.school_id     INNER JOIN shangshufang_customer.university D     ON A.course_university_code = D.university_code     INNER JOIN shangshufang_customer.school E     ON A.course_university_code = E.university_code     AND A.course_school_id = E.school_id     INNER JOIN shangshufang_customer.university_student F     ON A.student_id = F.student_id     INNER JOIN shangshufang_customer.course G     ON A.course_university_code = G.university_code     AND A.course_school_id = G.school_id     AND A.course_id = G.course_id     INNER JOIN shangshufang_base.technology_knowledge_exercises H     ON A.technology_id = H.technology_id     AND A.knowledge_id = H.knowledge_id     AND A.exercises_document_id = H.exercises_id     INNER JOIN shangshufang_base.technology I     ON A.technology_id = I.technology_id     INNER JOIN shangshufang_base.learning_phase J     ON A.learning_phase_id = J.learning_phase_id     INNER JOIN shangshufang_base.technology_knowledge K     ON A.technology_id = K.technology_id     AND A.learning_phase_id = K.learning_phase_id     AND A.knowledge_id = K.knowledge_id     AND K.data_status = 'A'     LEFT JOIN     (     SELECT     C.student_exercises_id,     C.reviewer_id,     C.reviewer_type,     D.full_name AS reviewer_name_teacher,     E.full_name AS reviewer_name_student,     C.update_time     FROM     (     SELECT     A.review_id,     A.student_exercises_id,     A.update_time,     B.reviewer_id,     B.reviewer_university_code,     B.reviewer_school_id,     B.reviewer_type     FROM     (     SELECT     student_exercises_id,     MAX(review_id) AS review_id,     MAX(update_time) AS update_time     FROM shangshufang_customer.university_student_exercises_review     GROUP BY student_exercises_id     ) A     INNER JOIN shangshufang_customer.university_student_exercises_review B     ON A.review_id = B.review_id     AND A.student_exercises_id = B.student_exercises_id     ) C     LEFT JOIN shangshufang_customer.university_customer D     ON C.reviewer_university_code = D.university_code     AND C.reviewer_school_id = D.school_id     AND C.reviewer_id = D.customer_id     AND C.reviewer_type = 'T'     LEFT JOIN shangshufang_customer.university_student E     ON C.reviewer_university_code = E.university_code     AND C.reviewer_school_id = E.school_id     AND C.reviewer_id = E.student_id     AND C.reviewer_type = 'S'     ) M     ON A.student_exercises_id = M.student_exercises_id     INNER JOIN shangshufang_customer.university_student_ability_analysis N     ON A.student_id = N.student_id     WHERE a.technology_id = ?     AND a.student_university_code = ?     AND a.student_school_id = ?     AND a.student_id = ?            ORDER BY A.course_class, A.knowledge_id, A.exercises_document_id, A.update_time DESC     LIMIT ?, ?;
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-40, 10' at line 128
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-40, 10' at line 128
[2020-06-06 23:08:11,361][http-nio-8081-exec-5][ERROR][com.shangshufang.apiservice.service.impl.UniversityStudentExercisesServiceImpl:101] org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-10, 10' at line 128
### The error may exist in file [/Users/zhangqiang/Documents/04-Project/ShangShuFang/SourceCode/shangshufang.apiservice/target/classes/mapping/UniversityStudentExercisesMapping.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT       A.student_exercises_id,       A.student_university_code,       B.university_name AS student_university_name,       A.student_school_id,       C.school_name AS student_school_name,       A.student_id,       F.full_name AS student_name,       F.photo AS student_photo,       F.cellphone,       F.enrollment_year,       N.ability_level,       N.position_site,       A.course_university_code,       D.university_name AS course_university_name,       A.course_school_id,       E.school_name AS course_school_name,       A.course_id,       G.course_name,       A.course_class,       A.technology_id,       I.technology_name,       A.learning_phase_id,       J.learning_phase_name,       A.knowledge_id,       K.knowledge_name,       A.exercises_document_id,       H.document_url AS exercises_document_url,       H.answer_url AS exercises_answer_url,       A.source_code_git_url,       A.data_status,       CASE WHEN A.data_status = 'P' THEN '未练习'       WHEN A.data_status = 'W' THEN '待批改'       WHEN A.data_status = 'R' THEN '待修改'       WHEN A.data_status = 'S' THEN '已通过'       ELSE '未知数据状态'       END AS data_status_text,       M.reviewer_id,       M.reviewer_name_teacher,       M.reviewer_name_student,       M.reviewer_type,       DATE_FORMAT(M.update_time, '%Y-%m-%d %H:%i:%s') AS review_time,       DATE_FORMAT(A.create_time, '%Y-%m-%d %H:%i:%s') AS create_time,       DATE_FORMAT(A.update_time, '%Y-%m-%d %H:%i:%s') AS update_time     FROM shangshufang_customer.university_student_exercises A     INNER JOIN shangshufang_customer.university B     ON A.student_university_code = B.university_code     INNER JOIN shangshufang_customer.school C     ON A.student_university_code = C.university_code     AND A.student_school_id = C.school_id     INNER JOIN shangshufang_customer.university D     ON A.course_university_code = D.university_code     INNER JOIN shangshufang_customer.school E     ON A.course_university_code = E.university_code     AND A.course_school_id = E.school_id     INNER JOIN shangshufang_customer.university_student F     ON A.student_id = F.student_id     INNER JOIN shangshufang_customer.course G     ON A.course_university_code = G.university_code     AND A.course_school_id = G.school_id     AND A.course_id = G.course_id     INNER JOIN shangshufang_base.technology_knowledge_exercises H     ON A.technology_id = H.technology_id     AND A.knowledge_id = H.knowledge_id     AND A.exercises_document_id = H.exercises_id     INNER JOIN shangshufang_base.technology I     ON A.technology_id = I.technology_id     INNER JOIN shangshufang_base.learning_phase J     ON A.learning_phase_id = J.learning_phase_id     INNER JOIN shangshufang_base.technology_knowledge K     ON A.technology_id = K.technology_id     AND A.learning_phase_id = K.learning_phase_id     AND A.knowledge_id = K.knowledge_id     AND K.data_status = 'A'     LEFT JOIN     (     SELECT     C.student_exercises_id,     C.reviewer_id,     C.reviewer_type,     D.full_name AS reviewer_name_teacher,     E.full_name AS reviewer_name_student,     C.update_time     FROM     (     SELECT     A.review_id,     A.student_exercises_id,     A.update_time,     B.reviewer_id,     B.reviewer_university_code,     B.reviewer_school_id,     B.reviewer_type     FROM     (     SELECT     student_exercises_id,     MAX(review_id) AS review_id,     MAX(update_time) AS update_time     FROM shangshufang_customer.university_student_exercises_review     GROUP BY student_exercises_id     ) A     INNER JOIN shangshufang_customer.university_student_exercises_review B     ON A.review_id = B.review_id     AND A.student_exercises_id = B.student_exercises_id     ) C     LEFT JOIN shangshufang_customer.university_customer D     ON C.reviewer_university_code = D.university_code     AND C.reviewer_school_id = D.school_id     AND C.reviewer_id = D.customer_id     AND C.reviewer_type = 'T'     LEFT JOIN shangshufang_customer.university_student E     ON C.reviewer_university_code = E.university_code     AND C.reviewer_school_id = E.school_id     AND C.reviewer_id = E.student_id     AND C.reviewer_type = 'S'     ) M     ON A.student_exercises_id = M.student_exercises_id     INNER JOIN shangshufang_customer.university_student_ability_analysis N     ON A.student_id = N.student_id     WHERE a.technology_id = ?     AND a.student_university_code = ?     AND a.student_school_id = ?     AND a.student_id = ?            ORDER BY A.course_class, A.knowledge_id, A.exercises_document_id, A.update_time DESC     LIMIT ?, ?;
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-10, 10' at line 128
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-10, 10' at line 128
[2020-06-06 23:18:43,667][http-nio-8081-exec-8][ERROR][com.shangshufang.apiservice.service.impl.UniversityStudentExercisesServiceImpl:101] org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-10, 10' at line 128
### The error may exist in file [/Users/zhangqiang/Documents/04-Project/ShangShuFang/SourceCode/shangshufang.apiservice/target/classes/mapping/UniversityStudentExercisesMapping.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT       A.student_exercises_id,       A.student_university_code,       B.university_name AS student_university_name,       A.student_school_id,       C.school_name AS student_school_name,       A.student_id,       F.full_name AS student_name,       F.photo AS student_photo,       F.cellphone,       F.enrollment_year,       N.ability_level,       N.position_site,       A.course_university_code,       D.university_name AS course_university_name,       A.course_school_id,       E.school_name AS course_school_name,       A.course_id,       G.course_name,       A.course_class,       A.technology_id,       I.technology_name,       A.learning_phase_id,       J.learning_phase_name,       A.knowledge_id,       K.knowledge_name,       A.exercises_document_id,       H.document_url AS exercises_document_url,       H.answer_url AS exercises_answer_url,       A.source_code_git_url,       A.data_status,       CASE WHEN A.data_status = 'P' THEN '未练习'       WHEN A.data_status = 'W' THEN '待批改'       WHEN A.data_status = 'R' THEN '待修改'       WHEN A.data_status = 'S' THEN '已通过'       ELSE '未知数据状态'       END AS data_status_text,       M.reviewer_id,       M.reviewer_name_teacher,       M.reviewer_name_student,       M.reviewer_type,       DATE_FORMAT(M.update_time, '%Y-%m-%d %H:%i:%s') AS review_time,       DATE_FORMAT(A.create_time, '%Y-%m-%d %H:%i:%s') AS create_time,       DATE_FORMAT(A.update_time, '%Y-%m-%d %H:%i:%s') AS update_time     FROM shangshufang_customer.university_student_exercises A     INNER JOIN shangshufang_customer.university B     ON A.student_university_code = B.university_code     INNER JOIN shangshufang_customer.school C     ON A.student_university_code = C.university_code     AND A.student_school_id = C.school_id     INNER JOIN shangshufang_customer.university D     ON A.course_university_code = D.university_code     INNER JOIN shangshufang_customer.school E     ON A.course_university_code = E.university_code     AND A.course_school_id = E.school_id     INNER JOIN shangshufang_customer.university_student F     ON A.student_id = F.student_id     INNER JOIN shangshufang_customer.course G     ON A.course_university_code = G.university_code     AND A.course_school_id = G.school_id     AND A.course_id = G.course_id     INNER JOIN shangshufang_base.technology_knowledge_exercises H     ON A.technology_id = H.technology_id     AND A.knowledge_id = H.knowledge_id     AND A.exercises_document_id = H.exercises_id     INNER JOIN shangshufang_base.technology I     ON A.technology_id = I.technology_id     INNER JOIN shangshufang_base.learning_phase J     ON A.learning_phase_id = J.learning_phase_id     INNER JOIN shangshufang_base.technology_knowledge K     ON A.technology_id = K.technology_id     AND A.learning_phase_id = K.learning_phase_id     AND A.knowledge_id = K.knowledge_id     AND K.data_status = 'A'     LEFT JOIN     (     SELECT     C.student_exercises_id,     C.reviewer_id,     C.reviewer_type,     D.full_name AS reviewer_name_teacher,     E.full_name AS reviewer_name_student,     C.update_time     FROM     (     SELECT     A.review_id,     A.student_exercises_id,     A.update_time,     B.reviewer_id,     B.reviewer_university_code,     B.reviewer_school_id,     B.reviewer_type     FROM     (     SELECT     student_exercises_id,     MAX(review_id) AS review_id,     MAX(update_time) AS update_time     FROM shangshufang_customer.university_student_exercises_review     GROUP BY student_exercises_id     ) A     INNER JOIN shangshufang_customer.university_student_exercises_review B     ON A.review_id = B.review_id     AND A.student_exercises_id = B.student_exercises_id     ) C     LEFT JOIN shangshufang_customer.university_customer D     ON C.reviewer_university_code = D.university_code     AND C.reviewer_school_id = D.school_id     AND C.reviewer_id = D.customer_id     AND C.reviewer_type = 'T'     LEFT JOIN shangshufang_customer.university_student E     ON C.reviewer_university_code = E.university_code     AND C.reviewer_school_id = E.school_id     AND C.reviewer_id = E.student_id     AND C.reviewer_type = 'S'     ) M     ON A.student_exercises_id = M.student_exercises_id     INNER JOIN shangshufang_customer.university_student_ability_analysis N     ON A.student_id = N.student_id     WHERE a.technology_id = ?     AND a.student_university_code = ?     AND a.student_school_id = ?     AND a.student_id = ?            ORDER BY A.course_class, A.knowledge_id, A.exercises_document_id, A.update_time DESC     LIMIT ?, ?;
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-10, 10' at line 128
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-10, 10' at line 128
